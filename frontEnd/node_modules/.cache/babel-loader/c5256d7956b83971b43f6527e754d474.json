{"ast":null,"code":"var _jsxFileName = \"/home/jce/Web Dev Space/Syncsequence/frontEnd/src/components/base/userProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport APIaccess from '../../apiaccess';\nimport CalInfo from '../calInfo';\nimport { useNavigate, useLocation, useLoaderData, useParams } from 'react-router-dom';\nimport Header from '../../components/base/header';\nimport Instant from '../../components/notifs/instant';\nimport NotificationList from '../../components/notifs/notifsList';\nimport FullList from '../../components/base/fullList';\nimport DragSlider from '../../components/base/dragSlider';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet accessAPI = APIaccess();\nexport default function UserProfile(_ref) {\n  _s();\n\n  let {\n    socketURL,\n    socketMessage,\n    setSocketMessage,\n    sendMessage,\n    isActive,\n    setActive,\n    accessID,\n    setAccessID,\n    unreadCount,\n    setUnreadCount,\n    getUnreadCount,\n    lastMessage,\n    selectedDate,\n    set_selectedDate,\n    current,\n    setCurrent\n  } = _ref;\n\n  /* Component Function Related*/\n  const userID = sessionStorage.getItem('userID');\n  const username = sessionStorage.getItem('userName'); // const location = useLocation();\n\n  const dataData = useLoaderData();\n  const [data, setData] = React.useState(dataData);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    userid\n  } = useParams();\n  const cal = CalInfo();\n  const isOwner = data.user._id == userID ? true : false;\n  const [userInfo, setUserInfo] = React.useState(data.user);\n  const [pinnedPosts, setPinnedPosts] = React.useState(data.pinnedPosts);\n  const [collections, setCollections] = React.useState(data.collections);\n\n  const updateProfilePage = async () => {\n    let data = await accessAPI.getSingleUser(userInfo._id);\n    setData(data);\n    setUserInfo(data.user);\n    setPinnedPosts(data.pinnedPosts);\n    setCollections(data.collections);\n    let connectedUsers = data.user.connections.length + data.user.subscribers.length + data.user.subscriptions.length;\n    setData({ ...data,\n      connectedUsers: connectedUsers\n    });\n  };\n\n  const goToUserSettings = async () => {\n    let settings = await accessAPI.userSettings({\n      option: 'getUserSettings'\n    });\n    let delay = setTimeout(() => {\n      navigate(`/${userInfo.userName}/settings`, {\n        state: {\n          data: settings\n        }\n      });\n    }, 150);\n  };\n\n  const goToPost = async postID => {\n    //use apiaccess to get post data, \n    //then use navigate to go to post page,\n    //put post data within navigate state\n    let post = await accessAPI.getBlogPost(postID);\n    setTimeout(() => {\n      navigate(`/post/${post._id}`, {\n        state: {\n          post: post\n        }\n      });\n    }, 600);\n  };\n\n  let goToMacrosPage = async tag => {\n    let tagInfo = await accessAPI.getTagData(tag._id, tag.name);\n    let posts = await accessAPI.groupPosts({\n      action: 'getPosts',\n      groupID: tag._id,\n      groupName: tag.name\n    });\n    let postsCount = posts.length;\n    /* 09. 22. 2024\r\n    \tThis check should always be done when going to a macro,\r\n    \tbut is unnecessary here - as user does have access to\r\n    \ttheir own recently used tags\r\n    */\n\n    let doesHaveAccess;\n\n    if (tagInfo.hasAccess) {\n      doesHaveAccess = tagInfo.hasAccess.filter(el => el == userID);\n      doesHaveAccess = doesHaveAccess.length > 0 ? true : false;\n    }\n\n    console.log(tagInfo);\n    setTimeout(() => {\n      navigate(`/macros/${tag.name}/${tag._id}`, {\n        state: {\n          name: tag.name,\n          posts: posts,\n          macroID: tag._id,\n          isPrivate: tagInfo.isPrivate,\n          hasAccess: tagInfo.hasAccess ? doesHaveAccess : true,\n          ownerUsername: tagInfo.adminUsernames ? tagInfo.adminUsernames[0] : null,\n          ownerID: tagInfo.admins ? tagInfo.admins[0] : null,\n          type: tagInfo.type == undefined ? 'topic' : tagInfo.type,\n          userCount: tagInfo.hasAccess ? tagInfo.hasAccess.length : null,\n          postCount: postsCount ? postsCount : 0\n        }\n      });\n    }, 200);\n  };\n\n  const requestConnection = async recipientID => {\n    let notif = {\n      type: 'request',\n      senderID: userID,\n      senderUsername: username,\n      recipients: [recipientID],\n      recipientUsername: userInfo.userName,\n      message: 'connectionRequestSent'\n    };\n    setSocketMessage(notif);\n    let optionsMenu = document.getElementById('profileOptions');\n    optionsMenu.classList.add('leave');\n    let delay = setTimeout(() => {\n      setOptions();\n    }, 150);\n  };\n\n  const removeConnection = async (userID, username) => {\n    let remove = await accessAPI.removeConnection(userID);\n\n    if (remove == true) {\n      updateProfilePage();\n      let optionsMenu = document.getElementById('profileOptions');\n      optionsMenu.classList.add('leave');\n      let delay = setTimeout(() => {\n        setOptions();\n      }, 150);\n      let delayTwo = setTimeout(() => {\n        setSocketMessage({\n          type: 'confirmation',\n          message: 'removal',\n          username: username\n        });\n      }, 500);\n    }\n  };\n\n  const requestSubscription = async recipientID => {\n    let notif = {\n      type: 'request',\n      //type is request initially, switches to confirmation\n      senderID: userID,\n      senderUsername: username,\n      recipients: [recipientID],\n      recipientUsername: userInfo.userName,\n      message: userInfo.privacySetting == 'Off' ? 'subscribed' : 'subscriptionRequestSent'\n    };\n    setSocketMessage(notif);\n    setData({ ...data,\n      isSubscribed: false\n    });\n    let optionsMenu = document.getElementById('profileOptions');\n    optionsMenu.classList.add('leave');\n    let delay = setTimeout(() => {\n      setOptions();\n    }, 150);\n  };\n\n  const removeSubscription = async userID => {\n    setOptions();\n    let remove = await accessAPI.removeSubscription(userID, 'to').then(data => {\n      if (data.confirm == true) {\n        //may leave or need to find other way of implementing update\n        // setData({\n        // \t...data,\n        // \tisSubscribed: false\n        // })\n        // let delayOne = setTimeout(()=> {\n        updateProfilePage(); // }, 200)\n\n        let delayTwo = setTimeout(() => {\n          setSocketMessage({\n            type: 'confirmation',\n            message: 'unsubscribed',\n            username: userInfo.userName\n          });\n        }, 400);\n      }\n    });\n  };\n  /* UI Element Related */\n\n\n  const [exit, setExit] = React.useReducer(state => !state, false);\n  const [notifList, setNotifList] = React.useReducer(state => !state, false);\n  const [fullList, setFullList] = React.useReducer(state => !state, false);\n  const [settings, setSettings] = React.useReducer(state => !state, false);\n  const [options, setOptions] = React.useReducer(state => !state, false);\n  const [fullListData, setFullListData] = React.useState({\n    data: '',\n    source: ''\n  });\n  React.useEffect(() => {\n    updateProfilePage();\n  }, [fullList]);\n  React.useEffect(() => {\n    updateProfilePage();\n\n    if (userInfo._id != userid) {\n      navigate(0);\n    }\n  }, [userid]);\n  React.useEffect(() => {\n    document.title = 'Syncseq.xyz/user';\n    updateProfilePage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"USERPROFILE\",\n    className: `${exit == true ? '_exit' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isReturnable: true,\n      setNotifList: setNotifList,\n      unreadCount: unreadCount,\n      siteLocation: userInfo._id == userID ? 'PROFILE' : 'USER'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"profilePhotoWrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"userPhoto\",\n          src: userInfo.profilePhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: userInfo.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `${userInfo.firstName} ${userInfo.lastName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 5\n      }, this), userInfo.bio && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bio\",\n        children: [\">\", /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"bio\",\n          children: userInfo.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: async e => {\n            e.preventDefault();\n            console.log(userInfo._id);\n            let data = await accessAPI.pullUserLog(undefined, undefined, userInfo._id).then(data => {\n              // console.log(data);\n              setFullListData({\n                data: data,\n                mode: 'allPosts',\n                source: `from @${userInfo.userName}`\n              });\n              setFullList();\n            });\n          },\n          children: [data.postCount, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userInfo.interactionCount, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: async e => {\n            let data = await accessAPI.getConnections(userInfo._id);\n            setFullListData({\n              data: data,\n              mode: 'allConnections',\n              source: `@${userInfo.userName}`\n            });\n            setFullList();\n          },\n          children: [data.connectedUsers, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"USER\", data.connectedUsers > 1 ? 'S' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pinnedMedia\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pinned Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 6\n        }, this), userInfo.pinnedMedia.length < 1 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"none\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 7\n        }, this), userInfo.pinnedMedia.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userInfo.pinnedMedia.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.url,\n              onClick: e => {\n                e.stopPropagation();\n                let gallery = userInfo.pinnedMedia.map(data => ({\n                  content: data.url,\n                  postID: data.postID,\n                  type: 'media'\n                }));\n                setCurrent({ ...current,\n                  gallery: gallery\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 10\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pinnedPosts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pinned Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 6\n        }, this), pinnedPosts.length < 1 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"none\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 7\n        }, this), pinnedPosts.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: pinnedPosts.map(post => {\n            // let commentCount;\n            // let cmntcount = 0;\n            // let countComments = (comments) => {\n            // \tfor(let cmnt of comments) {\n            // \t\tcmntcount++;\n            // \t\tcountComments(cmnt.replies)\n            // \t}\n            // \tcommentCount = cmntcount;\n            // }\n            // countComments(post.comments)\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                setTimeout(() => {\n                  navigate(`/post/${post._id}`, {\n                    state: {\n                      post: post\n                    }\n                  });\n                }, 300);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date\",\n                children: [post.postedOn_month, \" . \", post.postedOn_day, \" . \", post.postedOn_year]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 11\n              }, this), post.commentCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"details\",\n                children: [post.commentCount, \" comments\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 12\n              }, this), post.tags.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"details\",\n                children: [post.tags.length, \" tags\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"collections\",\n        className: ``,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Collections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 6\n        }, this), collections.length < 1 && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"none\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: `collectionsWrapper`,\n          children: collections.length > 0 && collections.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                goToMacrosPage(item);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"menuBar\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `buttonDefault`,\n        onClick: setOptions,\n        children: \"Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 4\n    }, this), options && isOwner && /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"profileOptions\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: () => {\n            setFullListData({\n              data: userInfo.pinnedMedia,\n              mode: 'remove_pinnedMedia',\n              source: `${userInfo.userName}'s Pinned Media`\n            });\n            setFullList();\n            setTimeout(() => {\n              setOptions();\n            }, 100);\n          },\n          children: \"Edit Pinned Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: () => {\n            setFullListData({\n              data: pinnedPosts,\n              mode: 'remove_pinnedPosts',\n              source: `${userInfo.userName}'s Pinned Posts`\n            });\n            setFullList();\n            setTimeout(() => {\n              setOptions();\n            }, 100);\n          },\n          children: \"Edit Pinned Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: goToUserSettings,\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"close\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonDefault\",\n          onClick: () => {\n            let optionsMenu = document.getElementById('profileOptions');\n            optionsMenu.classList.add('leave');\n            let delay = setTimeout(() => {\n              setOptions();\n            }, 150);\n          },\n          children: \"\\u2A09\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 5\n    }, this), options && !isOwner && /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"profileOptions\",\n      children: [!data.isConnected && !data.isSubscribed && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: () => {\n            requestConnection(userInfo._id);\n          },\n          children: \"Request Connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 7\n      }, this), data.isConnected && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: () => {\n            removeConnection(userInfo._id, userInfo.userName);\n          },\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 7\n      }, this), data.isSubscribed && !data.isConnected && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: () => {\n            removeSubscription(userInfo._id);\n          },\n          children: \"Remove Subscription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 7\n      }, this), !data.isSubscribed && !data.isConnected && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          onClick: () => {\n            requestSubscription(userInfo._id);\n          },\n          children: userInfo.privacySetting == 'Half' ? 'Request Subscription' : 'Subscribe'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"close\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonDefault\",\n          onClick: () => {\n            let optionsMenu = document.getElementById('profileOptions');\n            optionsMenu.classList.add('leave');\n            let delay = setTimeout(() => {\n              setOptions();\n            }, 150);\n          },\n          children: \"\\u2A09\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 5\n    }, this), current.gallery.length > 0 && /*#__PURE__*/_jsxDEV(DragSlider, {\n      current: current,\n      setCurrent: setCurrent,\n      siteLocation: 'home'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }, this), fullList && /*#__PURE__*/_jsxDEV(FullList, {\n      data: fullListData.data,\n      mode: fullListData.mode,\n      source: fullListData.source,\n      socketMessage: socketMessage,\n      setSocketMessage: setSocketMessage,\n      setFullList: setFullList,\n      groupID: ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 5\n    }, this), notifList && /*#__PURE__*/_jsxDEV(NotificationList, {\n      setNotifList: setNotifList,\n      unreadCount: unreadCount,\n      setUnreadCount: setUnreadCount,\n      setSocketMessage: setSocketMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Instant, {\n      socketURL: socketURL,\n      socketMessage: socketMessage,\n      setSocketMessage: setSocketMessage,\n      sendMessage: sendMessage,\n      isActive: isActive,\n      setActive: setActive,\n      accessID: accessID,\n      setAccessID: setAccessID,\n      getUnreadCount: getUnreadCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 4\n    }, this)]\n  }, userid, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 3\n  }, this);\n}\n\n_s(UserProfile, \"n8X/MD/iQMQNvgoAJhlZxQnLCTE=\", false, function () {\n  return [useLoaderData, useNavigate, useLocation, useParams];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","APIaccess","CalInfo","useNavigate","useLocation","useLoaderData","useParams","Header","Instant","NotificationList","FullList","DragSlider","accessAPI","UserProfile","socketURL","socketMessage","setSocketMessage","sendMessage","isActive","setActive","accessID","setAccessID","unreadCount","setUnreadCount","getUnreadCount","lastMessage","selectedDate","set_selectedDate","current","setCurrent","userID","sessionStorage","getItem","username","dataData","data","setData","useState","navigate","location","userid","cal","isOwner","user","_id","userInfo","setUserInfo","pinnedPosts","setPinnedPosts","collections","setCollections","updateProfilePage","getSingleUser","connectedUsers","connections","length","subscribers","subscriptions","goToUserSettings","settings","userSettings","option","delay","setTimeout","userName","state","goToPost","postID","post","getBlogPost","goToMacrosPage","tag","tagInfo","getTagData","name","posts","groupPosts","action","groupID","groupName","postsCount","doesHaveAccess","hasAccess","filter","el","console","log","macroID","isPrivate","ownerUsername","adminUsernames","ownerID","admins","type","undefined","userCount","postCount","requestConnection","recipientID","notif","senderID","senderUsername","recipients","recipientUsername","message","optionsMenu","document","getElementById","classList","add","setOptions","removeConnection","remove","delayTwo","requestSubscription","privacySetting","isSubscribed","removeSubscription","then","confirm","exit","setExit","useReducer","notifList","setNotifList","fullList","setFullList","setSettings","options","fullListData","setFullListData","source","useEffect","title","profilePhoto","firstName","lastName","bio","e","preventDefault","pullUserLog","mode","interactionCount","getConnections","pinnedMedia","map","index","url","stopPropagation","gallery","content","postedOn_month","postedOn_day","postedOn_year","commentCount","tags","item","isConnected"],"sources":["/home/jce/Web Dev Space/Syncsequence/frontEnd/src/components/base/userProfile.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport APIaccess from '../../apiaccess';\r\nimport CalInfo from '../calInfo'\r\nimport {useNavigate, useLocation, useLoaderData, useParams } from 'react-router-dom';\r\n\r\n\r\nimport Header from '../../components/base/header';\r\nimport Instant from '../../components/notifs/instant';\r\nimport NotificationList from '../../components/notifs/notifsList';\r\nimport FullList from '../../components/base/fullList';\r\nimport DragSlider from '../../components/base/dragSlider';\r\nimport './home.css';\r\n\r\nlet accessAPI = APIaccess();\r\n\r\nexport default function UserProfile({\r\n\tsocketURL,\r\n\tsocketMessage,\r\n    setSocketMessage,\r\n    sendMessage,\r\n    isActive,\r\n    setActive,\r\n    accessID,\r\n    setAccessID,\r\n    unreadCount,\r\n    setUnreadCount,\r\n    getUnreadCount,\r\n    lastMessage,\r\n    selectedDate,\r\n    set_selectedDate,\r\n    current,\r\n    setCurrent\r\n}) {\r\n\t/* Component Function Related*/\r\n\tconst userID = sessionStorage.getItem('userID');\r\n\tconst username = sessionStorage.getItem('userName');\r\n\t// const location = useLocation();\r\n\tconst dataData = useLoaderData();\r\n\tconst [data, setData] = React.useState(dataData);\r\n\tconst navigate = useNavigate();\r\n\tconst location = useLocation();\r\n\tconst { userid } = useParams();\r\n\tconst cal = CalInfo();\r\n\tconst isOwner = data.user._id == userID ? true : false;\r\n\tconst [userInfo, setUserInfo] = React.useState(data.user);\r\n\tconst [pinnedPosts, setPinnedPosts] = React.useState(data.pinnedPosts)\r\n\tconst [collections, setCollections] = React.useState(data.collections)\r\n\r\n\tconst updateProfilePage = async() => {\r\n\t\tlet data = await accessAPI.getSingleUser(userInfo._id);\r\n\t\tsetData(data);\r\n\t\tsetUserInfo(data.user);\r\n\t\tsetPinnedPosts(data.pinnedPosts);\r\n\t\tsetCollections(data.collections);\r\n\r\n\t\tlet connectedUsers = data.user.connections.length + data.user.subscribers.length + data.user.subscriptions.length;\r\n\t\tsetData({\r\n\t\t\t...data,\r\n\t\t\tconnectedUsers: connectedUsers\r\n\t\t})\r\n\t}\r\n\r\n\tconst goToUserSettings = async() => {\r\n\r\n\t\tlet settings = await accessAPI.userSettings({option: 'getUserSettings'});\r\n\r\n\t\tlet delay = setTimeout(()=> {\r\n\t\t\tnavigate(`/${userInfo.userName}/settings`, {\r\n\t\t\t\tstate: {\r\n\t\t\t\t\tdata: settings\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 150)\r\n\t}\r\n\r\n\tconst goToPost = async(postID) => {\r\n\r\n\t\t//use apiaccess to get post data, \r\n\t\t//then use navigate to go to post page,\r\n\t\t//put post data within navigate state\r\n\t\tlet post = await accessAPI.getBlogPost(postID);\r\n\r\n\t\tsetTimeout(()=> {\r\n\t\t\tnavigate(`/post/${post._id}`, {\r\n\t\t\t\tstate: {post: post}\r\n\t\t\t});\r\n\t\t}, 600)\r\n\t}\r\n\r\n\tlet goToMacrosPage = async(tag) => {\r\n\r\n\t\tlet tagInfo = await accessAPI.getTagData(tag._id, tag.name);\r\n\t\tlet posts = await accessAPI.groupPosts({action: 'getPosts', groupID: tag._id, groupName: tag.name});\r\n\t\tlet postsCount = posts.length;\r\n\r\n\t\t/* 09. 22. 2024\r\n\t\t\tThis check should always be done when going to a macro,\r\n\t\t\tbut is unnecessary here - as user does have access to\r\n\t\t\ttheir own recently used tags\r\n\t\t*/\r\n\t\tlet doesHaveAccess;\r\n\t\tif(tagInfo.hasAccess) {\r\n\t\t\tdoesHaveAccess = tagInfo.hasAccess.filter(el => el == userID);\r\n\t\t\tdoesHaveAccess = doesHaveAccess.length > 0 ? true : false;\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(tagInfo);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\tsetTimeout(()=> {\r\n\t\t\tnavigate(`/macros/${tag.name}/${tag._id}`, {\r\n\t\t\t\t\tstate: {\r\n\t\t\t\t\t\tname: tag.name,\r\n\t\t\t\t\t\tposts: posts,\r\n\t\t\t\t\t\tmacroID: tag._id,\r\n\t\t\t\t\t\tisPrivate: tagInfo.isPrivate,\r\n\t\t\t\t\t\thasAccess: tagInfo.hasAccess ? doesHaveAccess : true,\r\n\t\t\t\t\t\townerUsername: tagInfo.adminUsernames ? tagInfo.adminUsernames[0] : null,\r\n\t\t\t\t\t\townerID: tagInfo.admins ? tagInfo.admins[0] : null,\r\n\t\t\t\t\t\ttype: tagInfo.type == undefined ? 'topic' : tagInfo.type,\r\n\t\t\t\t\t\tuserCount: tagInfo.hasAccess ? tagInfo.hasAccess.length : null,\r\n\t\t\t\t\t\tpostCount: postsCount ? postsCount : 0\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}, 200)\r\n\t}\r\n\r\n\tconst requestConnection = async(recipientID) => {\r\n\t\tlet notif = {\r\n\t\t\ttype: 'request',\r\n\t\t\tsenderID: userID,\r\n\t\t\tsenderUsername: username,\r\n\t\t\trecipients: [recipientID],\r\n\t\t\trecipientUsername: userInfo.userName,\r\n\t\t\tmessage: 'connectionRequestSent'\r\n\t\t}\r\n\t\tsetSocketMessage(notif);\r\n\r\n\t\tlet optionsMenu = document.getElementById('profileOptions');\r\n\t\toptionsMenu.classList.add('leave')\r\n\t\tlet delay = setTimeout(()=> {\r\n\t\t\tsetOptions()\r\n\t\t}, 150);\r\n\t}\r\n\r\n\tconst removeConnection = async(userID, username) => {\r\n\t\tlet remove = await accessAPI.removeConnection(userID);\r\n\t\tif(remove == true) {\r\n\r\n\t\t\tupdateProfilePage();\r\n\r\n\t\t\tlet optionsMenu = document.getElementById('profileOptions');\r\n\t\t\toptionsMenu.classList.add('leave')\r\n\r\n\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\tsetOptions()\r\n\t\t\t}, 150);\r\n\r\n\t\t\tlet delayTwo = setTimeout(()=> {\r\n\t\t\t\tsetSocketMessage({\r\n\t\t\t\t\ttype: 'confirmation',\r\n\t\t\t\t\tmessage: 'removal',\r\n\t\t\t\t\tusername: username,\r\n\t\t\t\t})\r\n\t\t\t}, 500);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tconst requestSubscription = async(recipientID) => {\r\n\t\tlet notif = {\r\n\t\t\ttype: 'request', //type is request initially, switches to confirmation\r\n\t\t\tsenderID: userID,\r\n\t\t\tsenderUsername: username,\r\n\t\t\trecipients: [recipientID],\r\n\t\t\trecipientUsername: userInfo.userName,\r\n\t\t\tmessage: userInfo.privacySetting == 'Off' ? 'subscribed' : 'subscriptionRequestSent'\r\n\t\t}\r\n\r\n\t\tsetSocketMessage(notif);\r\n\t\tsetData({\r\n\t\t\t...data,\r\n\t\t\tisSubscribed: false\r\n\t\t})\r\n\r\n\r\n\t\tlet optionsMenu = document.getElementById('profileOptions');\r\n\t\toptionsMenu.classList.add('leave')\r\n\t\tlet delay = setTimeout(()=> {\r\n\t\t\tsetOptions()\r\n\t\t}, 150);\r\n\t}\r\n\r\n\tconst removeSubscription = async(userID) => {\r\n\r\n\t\tsetOptions();\r\n\r\n\t\tlet remove = await accessAPI.removeSubscription(userID, 'to').then(data => {\r\n\t\t\tif(data.confirm == true) {\r\n\t\t\t\t\r\n\t\t\t\t//may leave or need to find other way of implementing update\r\n\t\t\t\t// setData({\r\n\t\t\t\t// \t...data,\r\n\t\t\t\t// \tisSubscribed: false\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// let delayOne = setTimeout(()=> {\r\n\t\t\t\t\tupdateProfilePage();\r\n\t\t\t\t// }, 200)\r\n\r\n\t\t\t\tlet delayTwo = setTimeout(()=> {\r\n\t\t\t\t\tsetSocketMessage({\r\n\t\t\t\t\t\ttype: 'confirmation',\r\n\t\t\t\t\t\tmessage: 'unsubscribed',\r\n\t\t\t\t\t\tusername: userInfo.userName,\r\n\t\t\t\t\t})\r\n\t\t\t\t}, 400)\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t\r\n\t/* UI Element Related */\r\n\tconst [exit, setExit] = React.useReducer(state => !state, false);\r\n\tconst [notifList, setNotifList] = React.useReducer(state => !state, false);\r\n\tconst [fullList, setFullList] = React.useReducer(state => !state, false);\r\n\tconst [settings, setSettings] = React.useReducer(state => !state, false);\r\n\tconst [options, setOptions] = React.useReducer(state => !state, false);\r\n\tconst [fullListData, setFullListData] = React.useState({\r\n\t\tdata: '',\r\n\t\tsource: ''\r\n\t})\r\n\r\n\tReact.useEffect(()=> {\r\n\t\tupdateProfilePage()\r\n\t}, [fullList])\r\n\r\n\tReact.useEffect(()=> {\r\n\t\tupdateProfilePage();\r\n\t\tif(userInfo._id != userid) {\r\n\t\t\tnavigate(0)\r\n\t\t}\r\n\t}, [userid ])\r\n\r\n\tReact.useEffect(()=> {\r\n\r\n\t\tdocument.title = 'Syncseq.xyz/user'\r\n\r\n\t\tupdateProfilePage()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<section id=\"USERPROFILE\" key={userid} className={`${exit == true ? '_exit' : ''}`}>\r\n\r\n\t\t\t<Header \r\n\t\t\t\t\tisReturnable={true} \r\n\t\t\t\t\tsetNotifList={setNotifList} \r\n\t\t\t\t\tunreadCount={unreadCount}\r\n\t\t\t\t\tsiteLocation={userInfo._id == userID ? 'PROFILE' : 'USER'}/>\r\n\r\n\r\n\t\t\t<div id=\"main\">\r\n\t\t\t\t\r\n\t\t\t\t<div id=\"profilePhotoWrapper\">\r\n\t\t\t\t\t<img id=\"userPhoto\" src={userInfo.profilePhoto}/>\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\r\n\t\t\t\t<div id=\"title\">\r\n\t\t\t\t\t<h2>{userInfo.userName}</h2>\r\n\t\t\t\t\t<h3>{`${userInfo.firstName} ${userInfo.lastName}`}</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{userInfo.bio &&\r\n\t\t\t\t\t<div id=\"bio\">\r\n\t\t\t\t\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t<p id=\"bio\">{userInfo.bio}</p>\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t{/*\r\n\t\t\t\t\tS T A T S\r\n\t\t\t\t*/}\r\n\t\t\t\t<div id=\"stats\">\r\n\r\n\t\t\t\t\t{/*v i e w  P O S T S*/}\r\n\t\t\t\t\t<button className={`buttonDefault`} onClick={async(e)=> {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tconsole.log(userInfo._id)\r\n\t\t\t\t\t\tlet data = await accessAPI.pullUserLog(undefined, undefined, userInfo._id).then((data) => {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// console.log(data);\r\n\r\n\t\t\t\t\t\t\tsetFullListData({\r\n\t\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\t\tmode: 'allPosts',\r\n\t\t\t\t\t\t\t\tsource: `from @${userInfo.userName}` \r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tsetFullList();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{/*9*/}\r\n\t\t\t\t\t\t{data.postCount}\r\n\t\t\t\t\t\t<span>Posts</span>\r\n\t\t\t\t\t</button>\r\n\r\n\r\n\t\t\t\t\t{/* A C T I O N  C O U N T*/}\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{userInfo.interactionCount}\r\n\t\t\t\t\t\t<span>Actions</span>\r\n\t\t\t\t\t</p>\r\n\r\n\r\n\t\t\t\t\t{/*v i e w  C O N N E C T I O N S*/}\r\n\t\t\t\t\t<button className={`buttonDefault`} onClick={async(e)=> {\r\n\t\t\t\t\t\tlet data = await accessAPI.getConnections(userInfo._id);\r\n\r\n\t\t\t\t\t\tsetFullListData({\r\n\t\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t\t\tmode: 'allConnections',\r\n\t\t\t\t\t\t\tsource: `@${userInfo.userName}` \r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tsetFullList();\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{data.connectedUsers}\r\n\t\t\t\t\t\t<span>USER{data.connectedUsers > 1 ? 'S' : ''}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"pinnedMedia\">\r\n\r\n\t\t\t\t\t<h2>Pinned Media</h2>\r\n\t\t\t\t\t{userInfo.pinnedMedia.length < 1 &&\r\n\t\t\t\t\t\t<h2 className=\"none\">None</h2>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{userInfo.pinnedMedia.length > 0 && \r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{userInfo.pinnedMedia.map((data, index) => (\r\n\t\t\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t\t\t<img src={data.url} onClick={(e)=> {\r\n\t\t\t\t\t\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\t\t\t\t\t\tlet gallery = userInfo.pinnedMedia.map(data => ({\r\n\t\t  \t\t\t\t\t\t\t\t\t\tcontent: data.url,\r\n\t\t  \t\t\t\t\t\t\t\t\t\tpostID: data.postID,\r\n\t\t  \t\t\t\t\t\t\t\t\t\ttype: 'media'\r\n\t\t  \t\t\t\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t\t\t\t\tsetCurrent({\r\n\t\t\t\t\t\t\t\t\t\t\t...current,\r\n\t\t\t\t\t\t\t\t\t\t\tgallery: gallery\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"pinnedPosts\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h2>Pinned Posts</h2>\r\n\r\n\t\t\t\t\t{pinnedPosts.length < 1 &&\r\n\t\t\t\t\t\t<h2 className=\"none\">None</h2>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{pinnedPosts.length > 0 &&\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{pinnedPosts.map(post => {\r\n\r\n\t\t\t\t\t\t\t\t// let commentCount;\r\n\t\t\t\t\t\t\t\t// let cmntcount = 0;\r\n\t\t\t\t\t\t\t\t// let countComments = (comments) => {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// \tfor(let cmnt of comments) {\r\n\t\t\t\t\t\t\t\t// \t\tcmntcount++;\r\n\t\t\t\t\t\t\t\t// \t\tcountComments(cmnt.replies)\r\n\t\t\t\t\t\t\t\t// \t}\r\n\r\n\t\t\t\t\t\t\t\t// \tcommentCount = cmntcount;\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t// countComments(post.comments)\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li onClick={()=> {\r\n\t\t\t\t\t\t\t\t\t\tsetTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\t\t\tnavigate(`/post/${post._id}`, {\r\n\t\t\t\t\t\t\t\t\t\t\t\tstate: {post: post}\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}, 300)\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"date\">{post.postedOn_month} . {post.postedOn_day} . {post.postedOn_year}</span>\r\n\t\t\t\t\t\t\t\t\t\t<h3>{post.title}</h3>\r\n\t\t\t\t\t\t\t\t\t\t{post.commentCount > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"details\">{post.commentCount} comments</span>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t{post.tags.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"details\">{post.tags.length} tags</span>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t}\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"collections\" className={``}> \r\n\t\t\t\t\t<h2>Collections</h2>\r\n\r\n\t\t\t\t\t{collections.length < 1 &&\r\n\t\t\t\t\t\t<h2 className=\"none\">None</h2>\r\n\t\t\t\t\t}\t\t\t\r\n\r\n\t\t\t\t\t<ul className={`collectionsWrapper`}>\r\n\t\t\t\t\t\t{collections.length > 0 &&\r\n\t\t\t\t\t\t\tcollections.map(item => {\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li onClick={()=> {goToMacrosPage(item)}}>\r\n\t\t\t\t\t\t\t\t\t\t<h3>{item.name}</h3>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div id=\"menuBar\">\r\n\t\t\t\t<button className={`buttonDefault`} onClick={setOptions}>Options</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/*USER IS OWNER*/}\r\n\t\t\t{(options && isOwner) &&\r\n\t\t\t\t<ul id=\"profileOptions\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<button className={`buttonDefault`} onClick={()=> {\r\n\r\n\t\t\t\t\t\t\tsetFullListData({\r\n\t\t\t\t\t\t\t\tdata: userInfo.pinnedMedia,\r\n\t\t\t\t\t\t\t\tmode: 'remove_pinnedMedia',\r\n\t\t\t\t\t\t\t\tsource: `${userInfo.userName}'s Pinned Media` \r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tsetFullList();\r\n\r\n\t\t\t\t\t\t\tsetTimeout(()=> {\r\n\t\t\t\t\t\t\t\tsetOptions()\r\n\t\t\t\t\t\t\t}, 100)\r\n\t\t\t\t\t\t}}>Edit Pinned Media</button>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<button className={`buttonDefault`} onClick={()=> {\r\n\r\n\t\t\t\t\t\t\tsetFullListData({\r\n\t\t\t\t\t\t\t\tdata: pinnedPosts,\r\n\t\t\t\t\t\t\t\tmode: 'remove_pinnedPosts',\r\n\t\t\t\t\t\t\t\tsource: `${userInfo.userName}'s Pinned Posts` \r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tsetFullList();\r\n\r\n\t\t\t\t\t\t\tsetTimeout(()=> {\r\n\t\t\t\t\t\t\t\tsetOptions()\r\n\t\t\t\t\t\t\t}, 100)\r\n\t\t\t\t\t\t}}>Edit Pinned Posts</button>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<button className={`buttonDefault`} \r\n\t\t\t\t\t\t\t\tonClick={goToUserSettings}>\r\n\t\t\t\t\t\t\tSettings\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li id=\"close\">\r\n\t\t\t\t\t\t<button className=\"buttonDefault\" onClick={()=> {\r\n\t\t\t\t\t\t\t\tlet optionsMenu = document.getElementById('profileOptions');\r\n\t\t\t\t\t\t\t\toptionsMenu.classList.add('leave')\r\n\r\n\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\tsetOptions()\r\n\t\t\t\t\t\t\t\t}, 150);\r\n\t\t\t\t\t\t\t}}>⨉</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t}\r\n\t\t\t{/*USER IS NOT OWNER*/}\r\n\t\t\t{(options && !isOwner) &&\r\n\t\t\t\t<ul id=\"profileOptions\">\r\n\r\n\t\t\t\t\t{(!data.isConnected && !data.isSubscribed) &&\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button className={`buttonDefault`} \r\n\t\t\t\t\t\t\tonClick={()=> {requestConnection(userInfo._id)}}>\r\n\t\t\t\t\t\t\t\tRequest Connection\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{data.isConnected &&\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button className={`buttonDefault`} \r\n\t\t\t\t\t\t\tonClick={()=> {removeConnection(userInfo._id, userInfo.userName)}}>\r\n\t\t\t\t\t\t\t\tDisconnect\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t{(data.isSubscribed && !data.isConnected) &&\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button className={`buttonDefault`} \r\n\t\t\t\t\t\t\tonClick={()=> {removeSubscription(userInfo._id)}}>\r\n\t\t\t\t\t\t\t\tRemove Subscription\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{(!data.isSubscribed && !data.isConnected) &&\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button className={`buttonDefault`} \r\n\t\t\t\t\t\t\tonClick={()=> {requestSubscription(userInfo._id)}}>\r\n\t\t\t\t\t\t\t\t{userInfo.privacySetting == 'Half' ? 'Request Subscription' : 'Subscribe'}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t\t\t<li id=\"close\">\r\n\t\t\t\t\t\t<button className=\"buttonDefault\" onClick={()=> {\r\n\t\t\t\t\t\t\t\tlet optionsMenu = document.getElementById('profileOptions');\r\n\t\t\t\t\t\t\t\toptionsMenu.classList.add('leave')\r\n\r\n\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\tsetOptions()\r\n\t\t\t\t\t\t\t\t}, 150);\r\n\t\t\t\t\t\t\t}}>⨉</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t}\r\n\r\n\r\n\t\t\t{current.gallery.length > 0 &&\r\n          \t\t<DragSlider current={current} setCurrent={setCurrent} siteLocation={'home'}/>\r\n        \t}\r\n\t\t\t{fullList &&\r\n\t\t\t\t<FullList \r\n\t\t\t\t\tdata={fullListData.data}\r\n\t\t\t\t\tmode={fullListData.mode}\r\n\t\t\t\t\tsource={fullListData.source}\r\n\t\t\t\t\tsocketMessage={socketMessage}\r\n\t\t\t\t\tsetSocketMessage={setSocketMessage}\r\n\t\t\t\t\tsetFullList={setFullList}\r\n\t\t\t\t\tgroupID={''}/>\r\n\t\t\t}\r\n\t\t\t{notifList &&\r\n\t          <NotificationList \r\n\t            setNotifList={setNotifList} \r\n\t            unreadCount={unreadCount}\r\n\t            setUnreadCount={setUnreadCount}\r\n\t            setSocketMessage={setSocketMessage}/>\r\n\t        }\r\n\t\t\t<Instant \r\n\t\t\t\tsocketURL={socketURL}\r\n                socketMessage={socketMessage}\r\n                setSocketMessage={setSocketMessage}\r\n                sendMessage={sendMessage}\r\n                isActive={isActive}\r\n                setActive={setActive}\r\n                accessID={accessID}\r\n                setAccessID={setAccessID}\r\n                getUnreadCount={getUnreadCount}\r\n\t\t\t/>\r\n\t\t</section>\r\n\t)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}