{"ast":null,"code":"/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4\n};\n/**\n * @type {number}\n */\n\nlet level = levels.info;\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\n\nexport function setLevel(l) {\n  level = levels[l];\n}\n/**\n * @param  {...any} args Arguments to log\n */\n\nexport function log() {\n  if (level > levels.info) {\n    return;\n  }\n\n  console.log(...arguments); // eslint-disable-line no-console\n}\n/**\n * @param  {...any} args Arguments to log\n */\n\nexport function warn() {\n  if (level > levels.warn) {\n    return;\n  }\n\n  console.warn(...arguments); // eslint-disable-line no-console\n}\n/**\n * @param  {...any} args Arguments to log\n */\n\nexport function error() {\n  if (level > levels.error) {\n    return;\n  }\n\n  console.error(...arguments); // eslint-disable-line no-console\n}","map":{"version":3,"names":["levels","info","warn","error","none","level","setLevel","l","log","console"],"sources":["/home/jce/Web Dev Space/Syncsequence/frontEnd/node_modules/ol/console.js"],"sourcesContent":["/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAMA,MAAM,GAAG;EACbC,IAAI,EAAE,CADO;EAEbC,IAAI,EAAE,CAFO;EAGbC,KAAK,EAAE,CAHM;EAIbC,IAAI,EAAE;AAJO,CAAf;AAOA;AACA;AACA;;AACA,IAAIC,KAAK,GAAGL,MAAM,CAACC,IAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,QAAT,CAAkBC,CAAlB,EAAqB;EAC1BF,KAAK,GAAGL,MAAM,CAACO,CAAD,CAAd;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASC,GAAT,GAAsB;EAC3B,IAAIH,KAAK,GAAGL,MAAM,CAACC,IAAnB,EAAyB;IACvB;EACD;;EACDQ,OAAO,CAACD,GAAR,CAAY,YAAZ,EAJ2B,CAIL;AACvB;AAED;AACA;AACA;;AACA,OAAO,SAASN,IAAT,GAAuB;EAC5B,IAAIG,KAAK,GAAGL,MAAM,CAACE,IAAnB,EAAyB;IACvB;EACD;;EACDO,OAAO,CAACP,IAAR,CAAa,YAAb,EAJ4B,CAIL;AACxB;AAED;AACA;AACA;;AACA,OAAO,SAASC,KAAT,GAAwB;EAC7B,IAAIE,KAAK,GAAGL,MAAM,CAACG,KAAnB,EAA0B;IACxB;EACD;;EACDM,OAAO,CAACN,KAAR,CAAc,YAAd,EAJ6B,CAIL;AACzB"},"metadata":{},"sourceType":"module"}