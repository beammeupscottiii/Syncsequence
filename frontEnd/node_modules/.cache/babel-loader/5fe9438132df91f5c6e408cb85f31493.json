{"ast":null,"code":"var _jsxFileName = \"/home/jce/Web Dev Space/Syncsequence/frontEnd/src/components/blog/post.jsx\",\n    _s = $RefreshSig$();\n\n/* * * V I T A L S * * */\nimport * as React from 'react';\nimport { useParams, useLocation, useNavigate, useLoaderData } from 'react-router-dom';\nimport CalInfo from '../calInfo';\nimport APIaccess from '../../apiaccess';\nimport bodyParse from '../bodyParse';\nimport './blog.css';\n/* * * C O M P O N E N T S * * */\n\nimport Header from '../../components/base/header';\nimport Instant from '../../components/notifs/instant';\nimport NotificationsList from '../../components/notifs/notifsList';\nimport FullList from '../../components/base/fullList';\nimport DragSlider from '../../components/base/dragSlider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst accessAPI = APIaccess();\nexport function EditPost(_ref) {\n  /**\r\n   * 11. 29. 2023\r\n   * \r\n   * content is present within textboxes as the default values\r\n   * images have \"delete\" and \"pin options\"\r\n   * \r\n   * on save,\r\n   * array of objects \r\n   */\n\n  let {\n    postData\n  } = _ref;\n}\n_c = EditPost;\nexport default function Post(_ref2) {\n  _s();\n\n  let {\n    socketURL,\n    socketMessage,\n    setSocketMessage,\n    sendMessage,\n    isActive,\n    setActive,\n    accessID,\n    setAccessID,\n    unreadCount,\n    setUnreadCount,\n    getUnreadCount,\n    setCurrent,\n    current\n  } = _ref2;\n  const userID = sessionStorage.getItem('userID');\n  const data = useLoaderData(); // console.log(data);\n\n  const {\n    postID\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate(); // const [postData, setPostData] = React.useState(location.state.post);\n\n  const [postData, setPostData] = React.useState(data);\n  const [comments, setComments] = React.useState([]);\n  const [commentCount, setCommentCount] = React.useState('');\n\n  let refreshPost = async () => {\n    let updateComments = await accessAPI.updateCommentCount(postID);\n    let post = await accessAPI.getBlogPost(postID);\n    let comments = await accessAPI.getComments(postID);\n    setComments(comments);\n    setPostData(post);\n  }; //for submitting comments\n\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n    let date = new Date();\n    let body = {\n      //comment body\n      ownerUsername: userName,\n      ownerID: userID,\n      content: messageContent,\n      parentPost: postID,\n      postedOn_month: date.getMonth() + 1,\n      postedOn_day: date.getDate(),\n      postedOn_year: date.getFullYear(),\n      commentNumber: access.commentNumber,\n      profilePhoto: sessionStorage.getItem('profilePhoto'),\n      respondeeId: access.commentOwner,\n      postOwner: postData.owner\n    };\n    let notif = {\n      //notification body\n      type: 'comment',\n      isRead: false,\n      senderID: userID,\n      senderUsername: userName,\n      postURL: postID,\n      recipients: [postData.owner],\n      postTitle: postData.title,\n      postOwner: postData.owner\n    };\n\n    if (access.type == 'initial') {\n      body.parentID = postID;\n      notif.message = 'initial';\n    } else if (access.type == 'response') {\n      body.parentComment = access.commentID;\n\n      if (access.commentOwner == userID) {\n        //removes post owner from notifList if user responds to their own comment\n        notif.recipients.shift();\n      }\n\n      if (postData.owner != access.commentOwner) {\n        notif.recipients.push(access.commentOwner);\n      }\n\n      notif.message = 'response';\n    }\n\n    let request = await accessAPI.postComment(access.type, postID, body).then(res => {\n      console.log(res);\n      notif.commentID = res;\n      setSocketMessage(notif);\n      console.log(notif);\n      refreshPost();\n    });\n    toggleComment(); // toggleOptions();\n  };\n\n  let deleteComment = async commentID => {\n    setSocketMessage({\n      action: 'deleteComment',\n      commentID: commentID\n    });\n  };\n\n  let getCollections = async () => {\n    let collections = await accessAPI.getMacros('collections');\n    let filtered = collections.map(item => {\n      if (item.posts.includes(postID)) {\n        return { ...item,\n          hasThisPost: true\n        };\n      } else {\n        return { ...item,\n          hasThisPost: false\n        };\n      }\n    });\n    setCollections(filtered);\n  };\n\n  let addToCollections = collectionID => {\n    let body = {\n      groupID: collectionID == undefined ? collections[0]._id : collectionID,\n      postID: postID,\n      action: 'addToCollection',\n      type: 'collection',\n      postOwner: postData.owner\n    };\n    setSocketMessage(body);\n  };\n\n  let removeFromCollections = collectionID => {\n    let body = {\n      groupID: collectionID == undefined ? collections[0]._id : collectionID,\n      postID: postID,\n      type: 'collection',\n      action: 'removeFromCollection'\n    };\n    setSocketMessage(body);\n  };\n\n  let pinPost = async condition => {\n    if (condition == 'check') {\n      // run api request checking whether postID is within user's pinnedPosts array\n      let request = await accessAPI.userSettings({\n        option: 'pinnedPosts',\n        type: 'check',\n        postID: postID\n      }).then(data => {\n        if (data.confirmation == true) {\n          setPinnedPost('true');\n        }\n      });\n    } else if (condition == 'add') {\n      let request = await accessAPI.userSettings({\n        option: 'pinnedPosts',\n        type: 'add',\n        postID: postID\n      });\n\n      if (request.confirmation == true) {\n        setPinnedPost('true');\n        setSocketMessage({\n          type: 'simpleNotif',\n          message: 'Post added to Pinned Posts'\n        });\n      }\n    } else if (condition == 'remove') {\n      let request = await accessAPI.userSettings({\n        option: 'pinnedPosts',\n        type: 'remove',\n        postID: postID\n      });\n\n      if (request.confirmation == true) {\n        setPinnedPost('false');\n        setSocketMessage({\n          type: 'simpleNotif',\n          message: 'Post removed from Pinned Posts'\n        });\n      }\n    }\n  };\n\n  let goToProfile = async userID => {\n    let data = await accessAPI.getSingleUser(userID);\n    let delay = setTimeout(() => {\n      navigate(`/user/${data.user.userName}/${data.user._id}`, {\n        state: {\n          user: data.user,\n          pinnedPosts: data.pinnedPosts,\n          collections: data.collections\n        }\n      });\n    }, 150);\n  };\n\n  let goToMacrosPage = async tag => {\n    let tagInfo = await accessAPI.getTagData(tag._id, tag.name);\n    let posts = await accessAPI.groupPosts({\n      action: 'getPosts',\n      groupID: tag._id,\n      groupName: tag.name\n    });\n    let postsCount = posts.length;\n    let doesHaveAccess;\n\n    if (tagInfo.hasAccess) {\n      doesHaveAccess = tagInfo.hasAccess.filter(el => el == userID);\n      doesHaveAccess = doesHaveAccess.length > 0 ? true : false;\n    }\n\n    console.log(tagInfo);\n    setTimeout(() => {\n      navigate(`/macros/${tag.name}/${tag._id}`, {\n        state: {\n          name: tag.name,\n          posts: posts,\n          macroID: tag._id,\n          isPrivate: tagInfo.isPrivate,\n          hasAccess: doesHaveAccess,\n          ownerUsername: tagInfo.adminUsernames ? tagInfo.adminUsernames[0] : null,\n          ownerID: tagInfo.admins ? tagInfo.admins[0] : null,\n          type: tagInfo.type == undefined ? 'topic' : tagInfo.type,\n          userCount: tagInfo.hasAccess ? tagInfo.hasAccess.length : null,\n          postCount: postsCount ? postsCount : 0\n        }\n      });\n    }, 200);\n  };\n  /***\r\n   \tP o s t D e t a i l s\r\n  ***/\n\n\n  let cal = CalInfo();\n  let dateInfo = new Date(postData.createdAt.slice(0, -1));\n  let date = dateInfo.toString().slice(4, 15);\n  let hour = dateInfo.toString().slice(16, 18);\n  let minute = dateInfo.toString().slice(19, 21);\n  let AoP;\n\n  if (hour > 12) {\n    AoP = 'pm';\n    hour = hour - 12;\n  } else {\n    AoP = 'am';\n  }\n\n  let timeStamp = hour + \":\" + minute + \" \" + AoP;\n  let userName = sessionStorage.getItem('userName');\n  let isOwner = postData.owner == userID ? true : false; //to be removed once old posts gone\n  // let content, split;\n  // let text = [];\n  // if( Object.keys(postData.content[0]).length > 10 ) {\n  // \tfor (let char in postData.content[0]) {\n  // \t\ttext.push(postData.content[0][char]);\n  // \t}\n  // \ttext = text.join(\"\");\n  // \tsplit = true;\n  // \t// console.log(text)\n  // } else if ( Object.keys(postData.content[0].length < 10)) {\n  // \tcontent = postData.content;\n  // \tsplit = false;\n  // }\n\n  /*** \r\n    \tC o m p o n e n t  F u n c t i o n a l i t y\r\n  ***/\n\n  const [notifList, setNotifList] = React.useReducer(state => !state, false);\n  const [toggleDetails, openDetails] = React.useReducer(state => !state, false);\n  const [isOptionsOpen, toggleOptions] = React.useReducer(state => !state, false);\n  const [isComment, toggleComment] = React.useReducer(state => !state, false);\n  const [isCollections, toggleCollections] = React.useReducer(state => !state, false);\n  const [messageContent, setMessage] = React.useState('');\n  const [collections, setCollections] = React.useState([]);\n  const [pinnedPost, setPinnedPost] = React.useState('');\n  const [pinnedMedia, setPinnedMedia] = React.useReducer(state => !state, false);\n  const [access, setAccess] = React.useState({\n    type: null,\n    //\"initial\" or \"response\"\n    commentID: null,\n    commentNumber: null,\n    commentOwner: null,\n    //owner id\n    commentUsername: null\n  });\n  const [commentHeader, setCommentHeader] = React.useState('');\n  let optionsButton = React.useRef();\n\n  let handleMessage = e => {\n    setMessage(e.target.value);\n  };\n\n  let createComment = comment => {\n    let date = `${comment.postedOn_month}. ${comment.postedOn_day}. ${comment.postedOn_year}`;\n    let dateInfo = new Date(comment.createdAt.slice(0, -1));\n    let datee = dateInfo.toString().slice(4, 15);\n    let hour = dateInfo.toString().slice(16, 18);\n    let minute = dateInfo.toString().slice(19, 21);\n\n    if (hour > 12) {\n      AoP = 'pm';\n      hour = hour - 12;\n    } else {\n      AoP = 'am';\n    }\n\n    let timeStamp = hour + \":\" + minute + \" \" + AoP; // let timeStamp;\n\n    let deleted = comment.ownerID == '' ? true : false;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"comment\",\n      id: comment._id,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toProfile`,\n        onClick: () => {\n          goToProfile(comment.ownerID);\n        },\n        children: [!deleted && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.profilePhoto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 8\n        }, this), !deleted && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"@\", comment.ownerUsername]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [date, \" @ \", timeStamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"optionsWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonDefault\",\n          onClick: () => {\n            setAccess({\n              type: 'response',\n              commentID: comment._id,\n              commentNumber: `${comment.commentNumber} - ${comment.replies.length + 1}`,\n              commentOwner: comment.ownerID,\n              commentUsername: comment.ownerUsername\n            });\n            toggleComment();\n          },\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 7\n        }, this), comment.ownerID == userID && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonDefault\",\n          onClick: () => {\n            deleteComment(comment._id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 6\n      }, this), comment.replies && /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"replies\",\n        children: comment.replies.map(comment => createComment(comment))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 7\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 10\n    }, this);\n  };\n  /* Changes header of Comment Box based on whether initial comment\r\n  \tor response */\n\n\n  React.useEffect(() => {\n    if (access.type == 'response') {\n      setCommentHeader(`Replying to @${access.commentUsername}`);\n    } else {\n      setCommentHeader('Your Comment');\n    }\n  }, [access]);\n  React.useEffect(() => {\n    if (socketMessage.message == 'deletedComment') {\n      refreshPost();\n    }\n  }, [socketMessage]);\n  /*\r\n  \tIf user visits page via notif concerning comment\r\n  */\n\n  let commentsRef = React.useRef();\n  let commentsCurrent = commentsRef.current;\n  React.useEffect(() => {\n    let goToComment = location.state.commentID ? location.state.commentID : null;\n\n    if (goToComment != null) {\n      console.log('we has comment');\n\n      if (commentsCurrent) {\n        let comment = document.getElementById(location.state.commentID);\n        console.log(comment);\n        comment.scrollIntoView({\n          behavior: \"smooth\"\n        });\n        /* can add class to comment to make it stand out...*/\n      }\n    }\n  }, [comments]);\n  /*\r\n  \tTransition Effect for Arriving on page\r\n  */\n\n  const [enter, setEnter] = React.useReducer(state => !state, true);\n  const initialLoad = React.useRef(true);\n  let hasLoaded = initialLoad.current;\n  const el = React.useRef();\n  const element = el.current;\n  React.useEffect(() => {\n    if (hasLoaded) {\n      console.log(hasLoaded);\n\n      if (element) {\n        setEnter();\n      }\n\n      hasLoaded = false;\n      return;\n    }\n\n    getCollections();\n    console.log(postData);\n  }, [element]);\n  React.useEffect(() => {\n    refreshPost();\n    pinPost('check');\n    document.title = 'Syncseq.xyz/post';\n\n    if (current.gallery.length > 0) {\n      setCurrent({ ...current,\n        gallery: []\n      });\n      console.log('true');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"POST\",\n    ref: el,\n    className: `${enter == true ? '_enter' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      cal: cal,\n      isReturnable: true,\n      setNotifList: setNotifList,\n      unreadCount: unreadCount,\n      siteLocation: \"POST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"mainContent\",\n        children: [!isOwner && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toProfile`,\n          onClick: () => {\n            goToProfile(postData.owner);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: postData.profilePhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"@\", postData.author, postData.taggedUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: ` with ${postData.taggedUsers.length} other ${postData.length > 1 ? 's' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: postData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 6\n        }, this), postData.content.map(data => {\n          if (data.type == 'text') {\n            if (data.content.match(/\\((.*?)\\)/g)) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                dangerouslySetInnerHTML: {\n                  __html: bodyParse(data.content)\n                }\n              }, data.place, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                dangerouslySetInnerHTML: {\n                  __html: data.content\n                }\n              }, data.place, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this);\n            }\n          } else if (data.type == 'media') {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.content,\n              onClick: e => {\n                e.stopPropagation();\n                let gallery = postData.content.filter(data => data.type === 'media').map(data => ({ ...data,\n                  // Spread existing properties\n                  postID: postData._id\n                }));\n                setCurrent({ ...current,\n                  gallery: gallery\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"tagsList\",\n        className: `${postData.tags.length > 3 ? 'alot' : ''}`,\n        children: postData.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `buttonDefault ${tag._id ? 'tag' : ''} ${tag.isPrivate == true ? 'private' : ''}`,\n            onClick: e => {\n              e.preventDefault();\n              goToMacrosPage(tag);\n            },\n            children: tag.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"commentsWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [postData.commentCount < 10 && /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"commentCount\",\n            children: [\"00\", postData.commentCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 8\n          }, this), postData.commentCount > 10 && postData.commentCount > 100 && /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"commentCount\",\n            children: [\"0\", postData.commentCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 8\n          }, this), \"Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"commentBox\",\n          ref: commentsRef,\n          children: comments.map(comment => createComment(comment))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"optionsBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"optionsToggle\",\n        className: \"buttonDefault\",\n        ref: optionsButton,\n        onClick: toggleOptions,\n        children: \"OPTIONS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 5\n      }, this), isOptionsOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"optionsMenu\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          id: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Entry Posted On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [date, \" @ \", timeStamp, \" UTC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 8\n          }, this), postData.taggedUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Tagged Users: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 10\n            }, this), postData.taggedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `buttonDefault`,\n                onClick: () => {\n                  goToProfile(user._id);\n                },\n                children: [\"@\", user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonDefault\",\n            onClick: () => {\n              toggleOptions();\n              toggleComment();\n              console.log(comments.length);\n              setAccess({\n                type: 'initial',\n                commentNumber: `${comments.length + 1}`\n              });\n            },\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `buttonDefault ${collections[0].hasThisPost == true ? '_inactive' : ''}`,\n            onClick: e => {\n              e.preventDefault();\n\n              if (collections[0].hasThisPost == true) {\n                removeFromCollections();\n              } else {\n                addToCollections();\n              }\n\n              let delay = setTimeout(() => {\n                toggleOptions();\n                getCollections();\n              }, 150);\n            },\n            children: \"Bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonDefault\",\n            onClick: e => {\n              e.preventDefault();\n              toggleCollections();\n              let delay = setTimeout(() => {\n                toggleOptions();\n              }, 50);\n            },\n            children: \"Add to Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 7\n        }, this), isOwner && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `buttonDefault ${pinnedPost == 'true' ? '_inactive' : ''}`,\n            onClick: e => {\n              e.preventDefault();\n\n              if (pinnedPost == 'true') {\n                pinPost('remove');\n                setPinnedPost('false');\n              } else {\n                pinPost('add');\n                setPinnedPost('true');\n              }\n\n              let delay = setTimeout(() => {\n                toggleOptions();\n              }, 50);\n            },\n            children: \"Pin Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 8\n        }, this), isOwner && postData.content.some(piece => piece.type == 'media') && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `buttonDefault`,\n            onClick: e => {\n              e.preventDefault();\n              setPinnedMedia();\n              let delay = setTimeout(() => {\n                toggleOptions();\n              }, 200);\n            },\n            children: \"Pin Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 8\n        }, this), isOwner && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `buttonDefault`,\n            onClick: e => {\n              e.preventDefault();\n              toggleOptions();\n              setSocketMessage({\n                action: 'deletePost',\n                postID: postData._id\n              });\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonDefault\",\n            onClick: e => {\n              e.preventDefault();\n              setTimeout(() => {\n                navigate(-1);\n              }, 500);\n            },\n            children: \"Exit Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `buttonDefault`,\n            id: \"exit\",\n            onClick: () => {\n              let optionsMenu = document.getElementById('optionsMenu');\n              optionsMenu.classList.add('leave');\n              let delay = setTimeout(() => {\n                toggleOptions();\n              }, 150);\n            },\n            children: \"\\u2A09\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 6\n      }, this), isComment && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: commentHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          rows: \"10\",\n          onChange: handleMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buttonBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonDefault\",\n            onClick: toggleComment,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonDefault\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 6\n      }, this), isCollections && /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"collections\",\n        children: [collections.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `buttonDefault ${collections[index].hasThisPost == true ? '_inactive' : ''}`,\n            onClick: e => {\n              e.preventDefault();\n\n              if (collections[index].hasThisPost == true) {\n                removeFromCollections(item._id);\n              } else {\n                addToCollections(item._id);\n              }\n\n              let delay = setTimeout(() => {\n                // toggleOptions()\n                toggleCollections();\n                getCollections();\n              }, 150);\n            },\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 10\n          }, this)\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `buttonDefault`,\n            onClick: () => {\n              toggleCollections();\n              let delay = setTimeout(() => {\n                toggleOptions();\n              }, 50);\n            },\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 4\n    }, this), current.gallery.length > 0 && /*#__PURE__*/_jsxDEV(DragSlider, {\n      current: current,\n      setCurrent: setCurrent,\n      siteLocation: 'post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 5\n    }, this), pinnedMedia && /*#__PURE__*/_jsxDEV(FullList, {\n      data: postData,\n      mode: 'pinMedia',\n      source: postData.title,\n      socketMessage: socketMessage,\n      setSocketMessage: setSocketMessage,\n      setFullList: setPinnedMedia,\n      groupID: postID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 5\n    }, this), notifList && /*#__PURE__*/_jsxDEV(NotificationsList, {\n      setNotifList: setNotifList,\n      unreadCount: unreadCount,\n      setUnreadCount: setUnreadCount,\n      setSocketMessage: setSocketMessage,\n      accessID: accessID,\n      setAccessID: setAccessID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Instant, {\n      socketURL: socketURL,\n      socketMessage: socketMessage,\n      setSocketMessage: setSocketMessage,\n      sendMessage: sendMessage,\n      isActive: isActive,\n      setActive: setActive,\n      accessID: accessID,\n      setAccessID: setAccessID,\n      getUnreadCount: getUnreadCount,\n      current: current,\n      setCurrent: setCurrent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Post, \"+qoSz03QoEbaACGJ2XaG60GyGBU=\", false, function () {\n  return [useLoaderData, useParams, useLocation, useNavigate];\n});\n\n_c2 = Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditPost\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"names":["React","useParams","useLocation","useNavigate","useLoaderData","CalInfo","APIaccess","bodyParse","Header","Instant","NotificationsList","FullList","DragSlider","accessAPI","EditPost","postData","Post","socketURL","socketMessage","setSocketMessage","sendMessage","isActive","setActive","accessID","setAccessID","unreadCount","setUnreadCount","getUnreadCount","setCurrent","current","userID","sessionStorage","getItem","data","postID","location","navigate","setPostData","useState","comments","setComments","commentCount","setCommentCount","refreshPost","updateComments","updateCommentCount","post","getBlogPost","getComments","handleSubmit","e","preventDefault","date","Date","body","ownerUsername","userName","ownerID","content","messageContent","parentPost","postedOn_month","getMonth","postedOn_day","getDate","postedOn_year","getFullYear","commentNumber","access","profilePhoto","respondeeId","commentOwner","postOwner","owner","notif","type","isRead","senderID","senderUsername","postURL","recipients","postTitle","title","parentID","message","parentComment","commentID","shift","push","request","postComment","then","res","console","log","toggleComment","deleteComment","action","getCollections","collections","getMacros","filtered","map","item","posts","includes","hasThisPost","setCollections","addToCollections","collectionID","groupID","undefined","_id","removeFromCollections","pinPost","condition","userSettings","option","confirmation","setPinnedPost","goToProfile","getSingleUser","delay","setTimeout","user","state","pinnedPosts","goToMacrosPage","tag","tagInfo","getTagData","name","groupPosts","groupName","postsCount","length","doesHaveAccess","hasAccess","filter","el","macroID","isPrivate","adminUsernames","admins","userCount","postCount","cal","dateInfo","createdAt","slice","toString","hour","minute","AoP","timeStamp","isOwner","notifList","setNotifList","useReducer","toggleDetails","openDetails","isOptionsOpen","toggleOptions","isComment","isCollections","toggleCollections","setMessage","pinnedPost","pinnedMedia","setPinnedMedia","setAccess","commentUsername","commentHeader","setCommentHeader","optionsButton","useRef","handleMessage","target","value","createComment","comment","datee","deleted","replies","useEffect","commentsRef","commentsCurrent","goToComment","document","getElementById","scrollIntoView","behavior","enter","setEnter","initialLoad","hasLoaded","element","gallery","author","taggedUsers","match","__html","place","stopPropagation","tags","index","username","some","piece","optionsMenu","classList","add"],"sources":["/home/jce/Web Dev Space/Syncsequence/frontEnd/src/components/blog/post.jsx"],"sourcesContent":["/* * * V I T A L S * * */\r\nimport * as React from 'react';\r\nimport {useParams, useLocation, useNavigate, useLoaderData} from 'react-router-dom';\r\nimport CalInfo from '../calInfo'\r\nimport APIaccess from '../../apiaccess';\r\nimport bodyParse from '../bodyParse';\r\nimport './blog.css';\r\n\r\n/* * * C O M P O N E N T S * * */\r\nimport Header from '../../components/base/header';\r\nimport Instant from '../../components/notifs/instant';\r\nimport NotificationsList from '../../components/notifs/notifsList';\r\nimport FullList from '../../components/base/fullList';\r\nimport DragSlider from '../../components/base/dragSlider';\r\n\r\nconst accessAPI = APIaccess(); \r\n\r\nexport function EditPost({ postData }) {\r\n\r\n\t/**\r\n\t * 11. 29. 2023\r\n\t * \r\n\t * content is present within textboxes as the default values\r\n\t * images have \"delete\" and \"pin options\"\r\n\t * \r\n\t * on save,\r\n\t * array of objects \r\n\t */\r\n}\r\n\r\nexport default function Post({\r\n\tsocketURL, \r\n\tsocketMessage, \r\n\tsetSocketMessage, \r\n\tsendMessage, \r\n\tisActive,\r\n\tsetActive, \r\n\taccessID, \r\n\tsetAccessID,\r\n\tunreadCount,\r\n\tsetUnreadCount,\r\n\tgetUnreadCount,\r\n\tsetCurrent,\r\n\tcurrent\r\n}) {\r\n\tconst userID = sessionStorage.getItem('userID');\r\n\tconst data = useLoaderData();\r\n\t// console.log(data);\r\n\tconst { postID } = useParams();\r\n\tconst location = useLocation();\r\n\tconst navigate = useNavigate();\r\n\t// const [postData, setPostData] = React.useState(location.state.post);\r\n\tconst [postData, setPostData] = React.useState(data);\r\n\tconst [comments, setComments] = React.useState([]);\r\n\tconst [commentCount, setCommentCount] = React.useState('');\r\n\r\n\tlet refreshPost = async() => {\r\n\r\n\t\tlet updateComments = await accessAPI.updateCommentCount(postID);\r\n\r\n\t\tlet post = await accessAPI.getBlogPost(postID);\r\n\r\n\t\tlet comments = await accessAPI.getComments(postID);\r\n\t\tsetComments(comments);\r\n\t\tsetPostData(post);\r\n\t}\r\n\r\n\t//for submitting comments\r\n\tlet handleSubmit = async(e) => {\r\n\t\te.preventDefault();\r\n\t\tlet date = new Date();\r\n\t\tlet body = { //comment body\r\n\t\t\townerUsername: userName,\r\n\t\t\townerID: userID,\r\n\t\t\tcontent: messageContent,\r\n\t\t\tparentPost: postID,\r\n\t\t\tpostedOn_month: date.getMonth() + 1,\r\n\t\t\tpostedOn_day: date.getDate(),\r\n\t\t\tpostedOn_year: date.getFullYear(),\r\n\t\t\tcommentNumber: access.commentNumber,\r\n\t\t\tprofilePhoto: sessionStorage.getItem('profilePhoto'),\r\n\t\t\trespondeeId: access.commentOwner,\r\n\t\t\tpostOwner: postData.owner\r\n\t\t}\r\n\t\tlet notif = { //notification body\r\n\t\t\t\ttype: 'comment',\r\n\t\t\t\tisRead: false,\r\n\t\t\t\tsenderID: userID,\r\n\t\t\t\tsenderUsername: userName,\r\n\t\t\t\tpostURL: postID,\r\n\t\t\t\trecipients: [postData.owner],\r\n\t\t\t\tpostTitle: postData.title,\r\n\t\t\t\tpostOwner: postData.owner\r\n\t\t}\r\n\r\n\t\tif(access.type == 'initial') {\r\n\r\n\t\t\tbody.parentID = postID;\r\n\t\t\tnotif.message = 'initial';\r\n\r\n\t\t} else if (access.type == 'response') {\r\n\r\n\t\t\tbody.parentComment = access.commentID;\r\n\t\t\tif(access.commentOwner == userID) {\r\n\t\t\t\t//removes post owner from notifList if user responds to their own comment\r\n\t\t\t\tnotif.recipients.shift(); \r\n\t\t\t}\r\n\t\t\tif(postData.owner != access.commentOwner) {\r\n\t\t\t\tnotif.recipients.push(access.commentOwner);\r\n\t\t\t}\r\n\t\t\tnotif.message = 'response';\r\n\t\t}\r\n\r\n\t\tlet request = await accessAPI.postComment(access.type, postID, body).then(res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tnotif.commentID = res;\r\n\r\n\t\t\tsetSocketMessage(notif);\r\n\t\t\tconsole.log(notif)\r\n\t\t\trefreshPost();\r\n\t\t});\r\n\r\n\t\ttoggleComment();\r\n\t\t// toggleOptions();\r\n\t}\r\n\r\n\tlet deleteComment = async(commentID) => {\r\n\r\n\t\tsetSocketMessage({\r\n\t\t\taction: 'deleteComment',\r\n\t\t\tcommentID: commentID\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tlet getCollections = async()=> {\r\n\t\tlet collections = await accessAPI.getMacros('collections');\r\n\t\tlet filtered = collections.map(item => {\r\n            if(item.posts.includes(postID)) {\r\n                return {\r\n                \t...item,\r\n                    hasThisPost: true,\r\n\t\t\t    }\r\n            }\r\n            else {\r\n            \treturn {\r\n                    ...item,\r\n                    hasThisPost: false\r\n                }\r\n            }\r\n        })\r\n\t\tsetCollections(filtered);\r\n\t}\r\n\r\n\tlet addToCollections = (collectionID)=> {\r\n\r\n\t\tlet body = {\r\n\t\t\tgroupID: collectionID == undefined ? collections[0]._id : collectionID,\r\n      \t\tpostID: postID,\r\n      \t\taction: 'addToCollection',\r\n      \t\ttype: 'collection',\r\n      \t\tpostOwner: postData.owner\r\n\t\t}\r\n\t\tsetSocketMessage(body);\r\n\t}\r\n\r\n\tlet removeFromCollections = (collectionID) => {\r\n\r\n\t\tlet body = {\r\n\t\t\tgroupID: collectionID == undefined ? collections[0]._id : collectionID,\r\n      \t\tpostID: postID,\r\n      \t\ttype: 'collection',\r\n      \t\taction: 'removeFromCollection'\r\n\t\t}\r\n\t\tsetSocketMessage(body);\r\n\t}\r\n\r\n\tlet pinPost = async(condition) => {\r\n\r\n\t\tif(condition == 'check') {\r\n\r\n\t\t\t// run api request checking whether postID is within user's pinnedPosts array\r\n\t\t\tlet request = await accessAPI.userSettings({\r\n\t\t\t\toption: 'pinnedPosts',\r\n\t\t\t\ttype: 'check',\r\n\t\t\t\tpostID: postID\r\n\t\t\t}).then(data => {\r\n\t\t\t\tif(data.confirmation == true) {\r\n\t\t\t\t\tsetPinnedPost('true')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if(condition == 'add') {\r\n\r\n\t\t\tlet request = await accessAPI.userSettings({\r\n\t\t\t\toption: 'pinnedPosts',\r\n\t\t\t\ttype: 'add',\r\n\t\t\t\tpostID: postID\r\n\t\t\t});\r\n\r\n\t\t\tif(request.confirmation == true) {\r\n\t\t\t\tsetPinnedPost('true');\r\n\t\t\t\tsetSocketMessage({\r\n\t\t\t\t\ttype: 'simpleNotif',\r\n\t\t\t\t\tmessage: 'Post added to Pinned Posts'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(condition == 'remove') {\r\n\t\t\tlet request = await accessAPI.userSettings({\r\n\t\t\t\toption: 'pinnedPosts',\r\n\t\t\t\ttype: 'remove',\r\n\t\t\t\tpostID: postID\r\n\t\t\t});\r\n\r\n\t\t\tif(request.confirmation == true) {\r\n\t\t\t\tsetPinnedPost('false')\r\n\t\t\t\tsetSocketMessage({\r\n\t\t\t\t\ttype: 'simpleNotif',\r\n\t\t\t\t\tmessage: 'Post removed from Pinned Posts'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet goToProfile = async(userID) => {\r\n\r\n\t\tlet data = await accessAPI.getSingleUser(userID);\r\n\t\t\r\n\t\tlet delay = setTimeout(()=> {\r\n\t\t\tnavigate(`/user/${data.user.userName}/${data.user._id}`, {\r\n\t\t\t\tstate: {\r\n\t\t\t\t\tuser: data.user,\r\n\t\t\t\t\tpinnedPosts: data.pinnedPosts,\r\n\t\t\t\t\tcollections: data.collections\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, 150)\r\n\t}\r\n\r\n\tlet goToMacrosPage = async(tag) => {\r\n\r\n\t\tlet tagInfo = await accessAPI.getTagData(tag._id, tag.name);\r\n\t\tlet posts = await accessAPI.groupPosts({action: 'getPosts', groupID: tag._id, groupName: tag.name});\r\n\t\tlet postsCount = posts.length;\r\n\r\n\t\tlet doesHaveAccess;\r\n\t\tif(tagInfo.hasAccess) {\r\n\t\t\tdoesHaveAccess = tagInfo.hasAccess.filter(el => el == userID);\r\n\t\t\tdoesHaveAccess = doesHaveAccess.length > 0 ? true : false;\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(tagInfo);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\tsetTimeout(()=> {\r\n\t\t\tnavigate(`/macros/${tag.name}/${tag._id}`, {\r\n\t\t\t\t\tstate: {\r\n\t\t\t\t\t\tname: tag.name,\r\n\t\t\t\t\t\tposts: posts,\r\n\t\t\t\t\t\tmacroID: tag._id,\r\n\t\t\t\t\t\tisPrivate: tagInfo.isPrivate,\r\n\t\t\t\t\t\thasAccess: doesHaveAccess,\r\n\t\t\t\t\t\townerUsername: tagInfo.adminUsernames ? tagInfo.adminUsernames[0] : null,\r\n\t\t\t\t\t\townerID: tagInfo.admins ? tagInfo.admins[0] : null,\r\n\t\t\t\t\t\ttype: tagInfo.type == undefined ? 'topic' : tagInfo.type,\r\n\t\t\t\t\t\tuserCount: tagInfo.hasAccess ? tagInfo.hasAccess.length : null,\r\n\t\t\t\t\t\tpostCount: postsCount ? postsCount : 0\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}, 200)\r\n\t}\r\n\r\n\t/***\r\n\t \tP o s t D e t a i l s\r\n\t***/\r\n\tlet cal = CalInfo();\r\n\t\tlet dateInfo = new Date(postData.createdAt.slice(0, -1));\r\n\t\tlet date = dateInfo.toString().slice(4, 15);\r\n\t\tlet hour = dateInfo.toString().slice(16, 18);\r\n\t\tlet minute = dateInfo.toString().slice(19, 21);\r\n\t\tlet AoP;\r\n\t\tif(hour > 12) {\r\n\t\t\tAoP = 'pm';\r\n\t\t\thour = hour - 12;\r\n\t\t} else {\r\n\t\t\tAoP = 'am';\r\n\t\t}\r\n\t\tlet timeStamp = hour+ \":\" +minute+ \" \" +AoP;\r\n\t\tlet userName = sessionStorage.getItem('userName');\r\n\t\tlet isOwner = postData.owner == userID ? true : false;\r\n\r\n\t\t//to be removed once old posts gone\r\n\t\t// let content, split;\r\n\t\t// let text = [];\r\n\t\t// if( Object.keys(postData.content[0]).length > 10 ) {\r\n\t\t// \tfor (let char in postData.content[0]) {\r\n\t\t// \t\ttext.push(postData.content[0][char]);\r\n\t\t// \t}\r\n\t\t// \ttext = text.join(\"\");\r\n\t\t// \tsplit = true;\r\n\t\t// \t// console.log(text)\r\n\t\t// } else if ( Object.keys(postData.content[0].length < 10)) {\r\n\t\t// \tcontent = postData.content;\r\n\t\t// \tsplit = false;\r\n\t\t// }\r\n\r\n\r\n\t/*** \r\n\t  \tC o m p o n e n t  F u n c t i o n a l i t y\r\n\t***/\r\n\tconst [notifList, setNotifList] = React.useReducer(state => !state, false);\r\n\tconst [toggleDetails, openDetails] = React.useReducer(state => !state, false);\r\n\tconst [isOptionsOpen, toggleOptions] = React.useReducer(state => !state, false);\r\n\tconst [isComment, toggleComment] = React.useReducer(state => !state, false);\r\n\tconst [isCollections, toggleCollections] = React.useReducer(state => !state, false);\r\n\tconst [messageContent, setMessage] = React.useState('');\r\n\tconst [collections, setCollections] = React.useState([]);\r\n\tconst [pinnedPost, setPinnedPost] = React.useState('');\r\n\tconst [pinnedMedia, setPinnedMedia] = React.useReducer(state => !state, false);\r\n\tconst [access, setAccess] = React.useState({\r\n\t\ttype: null, //\"initial\" or \"response\"\r\n\t\tcommentID: null, \r\n\t\tcommentNumber: null,\r\n\t\tcommentOwner: null, //owner id\r\n\t\tcommentUsername: null,\r\n\t})\r\n\tconst [commentHeader, setCommentHeader] = React.useState('');\r\n\r\n\tlet optionsButton = React.useRef();\r\n\r\n\tlet handleMessage = (e) => {\r\n\t\tsetMessage(e.target.value);\r\n\t}\r\n\r\n\tlet createComment = (comment) => {\r\n\r\n\t\tlet date = `${comment.postedOn_month}. ${comment.postedOn_day}. ${comment.postedOn_year}`;\r\n\r\n\t\tlet dateInfo = new Date(comment.createdAt.slice(0, -1));\r\n\t\tlet datee = dateInfo.toString().slice(4, 15);\r\n\t\tlet hour = dateInfo.toString().slice(16, 18);\r\n\t\tlet minute = dateInfo.toString().slice(19, 21);\r\n\t\tif(hour > 12) {\r\n\t\t\tAoP = 'pm';\r\n\t\t\thour = hour - 12;\r\n\t\t} else {\r\n\t\t\tAoP = 'am';\r\n\t\t}\r\n\t\tlet timeStamp = hour+ \":\" +minute+ \" \" +AoP;\r\n\t\t// let timeStamp;\r\n\t\tlet deleted = comment.ownerID == '' ? true : false;\r\n\r\n\r\n\t\treturn <li className=\"comment\" key={comment._id} id={comment._id}>\r\n\r\n\t\t\t\t\t<button className={`toProfile`} onClick={()=> {goToProfile(comment.ownerID)}}>\r\n\t\t\t\t\t\t{!deleted &&\r\n\t\t\t\t\t\t\t<img src={comment.profilePhoto}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{!deleted &&\r\n\t\t\t\t\t\t\t<span>&#64;{comment.ownerUsername}</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<h4>{date} @ {timeStamp}</h4>\r\n\t\t\t\t\t<p>{comment.content}</p>\r\n\r\n\t\t\t\t\t<div id=\"optionsWrapper\">\r\n\t\t\t\t\t\t<button className=\"buttonDefault\"\r\n\t\t\t\t\t\t\tonClick={()=> {\r\n\r\n\t\t\t\t\t\t\t\tsetAccess({\r\n\t\t\t\t\t\t\t\t\ttype: 'response',\r\n\t\t\t\t\t\t\t\t\tcommentID: comment._id,\r\n\t\t\t\t\t\t\t\t\tcommentNumber: `${comment.commentNumber} - ${comment.replies.length + 1}`,\r\n\t\t\t\t\t\t\t\t\tcommentOwner: comment.ownerID,\r\n\t\t\t\t\t\t\t\t\tcommentUsername: comment.ownerUsername\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\ttoggleComment()\r\n\t\t\t\t\t\t}}>Reply</button>\r\n\r\n\t\t\t\t\t\t{comment.ownerID == userID &&\r\n\t\t\t\t\t\t\t<button className=\"buttonDefault\" onClick={()=> {deleteComment(comment._id)}}>\r\n\t\t\t\t\t\t\t\tDelete\t\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{comment.replies &&\r\n\t\t\t\t\t\t<ul id=\"replies\">\r\n\t\t\t\t\t\t\t{comment.replies.map(comment => (\r\n\t\t\t\t\t\t\t\tcreateComment(comment)\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t}\r\n\t\t\t</li>\r\n\t}\r\n\r\n\t/* Changes header of Comment Box based on whether initial comment\r\n\t\tor response */\r\n\tReact.useEffect(()=> {\r\n\t\tif(access.type == 'response') {\r\n\t\t\tsetCommentHeader(`Replying to @${access.commentUsername}`)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetCommentHeader('Your Comment');\t\r\n\t\t} \r\n\t}, [access])\r\n\r\n\tReact.useEffect(()=> {\r\n\t\tif(socketMessage.message == 'deletedComment') {\r\n\t\t\trefreshPost();\r\n\t\t}\r\n\t}, [socketMessage])\r\n\r\n\t/*\r\n\t\tIf user visits page via notif concerning comment\r\n\t*/\r\n\tlet commentsRef = React.useRef()\r\n\tlet commentsCurrent = commentsRef.current;\r\n\tReact.useEffect(()=> {\r\n\r\n\t\tlet goToComment = location.state.commentID ? location.state.commentID : null;\r\n\r\n\t\tif(goToComment != null) {\r\n\r\n\t\t\tconsole.log('we has comment');\r\n\r\n\t\t\tif(commentsCurrent) {\r\n\t\t\t\tlet comment = document.getElementById(location.state.commentID);\r\n\t\t\t\tconsole.log(comment);\r\n\t\t\t\tcomment.scrollIntoView({behavior: \"smooth\"});\r\n\t\t\t\t/* can add class to comment to make it stand out...*/\r\n\t\t\t}\r\n\t\t}\t\r\n\t}, [comments]);\r\n\r\n\r\n\t/*\r\n\t\tTransition Effect for Arriving on page\r\n\t*/\r\n\tconst [enter, setEnter] = React.useReducer(state => !state, true);\r\n\tconst initialLoad = React.useRef(true);\r\n\tlet hasLoaded = initialLoad.current;\r\n\tconst el = React.useRef()\r\n\tconst element = el.current;\r\n\r\n\tReact.useEffect(()=> {\r\n\t\tif(hasLoaded) {\r\n\t\t\tconsole.log(hasLoaded);\r\n\t\t\tif(element) {\r\n\t\t\t\tsetEnter();\r\n\t\t\t}\r\n\t\t\thasLoaded = false;\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tgetCollections();\r\n\t\tconsole.log(postData);\r\n\t}, [element]);\r\n\r\n\r\n\tReact.useEffect(()=> {\r\n\t\trefreshPost()\r\n\t\tpinPost('check')\r\n\t\t\r\n\t\tdocument.title = 'Syncseq.xyz/post';\r\n\r\n\t\tif(current.gallery.length > 0) {\r\n\t\t\tsetCurrent({\r\n\t\t\t\t...current,\r\n\t\t\t\tgallery: []\r\n\t\t\t})\r\n\t\t\tconsole.log('true');\r\n\t\t}\r\n\t}, [])\r\n\r\n\r\n\treturn (\r\n\t\t<section id=\"POST\" ref={el} className={`${enter == true ? '_enter' : ''}`}>\r\n\t\t\t<Header cal={cal} \r\n\t\t\t\t\tisReturnable={true} \r\n\t\t\t\t\tsetNotifList={setNotifList} \r\n\t\t\t\t\tunreadCount={unreadCount}\r\n\t\t\t\t\tsiteLocation={\"POST\"}/>\r\n\r\n\t\t\t<article>\r\n\t\t\t\t{/* * * \r\n\t\t\t\t\tM A I N   C O N T E N T \r\n\t\t\t\t* * */}\r\n\t\t\t\t<div id=\"mainContent\">\r\n\r\n\t\t\t\t\t{!isOwner &&\r\n\t\t\t\t\t\t<button className={`toProfile`} onClick={()=> {goToProfile(postData.owner)}}>\r\n\t\t\t\t\t\t\t<img src={postData.profilePhoto}/>\r\n\t\t\t\t\t\t\t<span>&#64;{postData.author} \r\n\t\t\t\t\t\t\t{postData.taggedUsers.length > 0 &&\r\n\t\t\t\t\t\t\t\t<span>{` with ${postData.taggedUsers.length} other ${postData.length > 1 ? 's' : ''}`}</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t<h2>{postData.title}</h2>\r\n\r\n\t\t\t\t\t{/*Would have ul with map of tagged users*/}\r\n\r\n\t\t\t\t\t{/*{split &&\r\n\t\t\t\t\t\t<p>{text}</p>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{!split &&\r\n\t\t\t\t\t\tcontent.map((data) => {\r\n\t\t\t\t\t\t\t\tif(data.type == 'text') {\r\n\t\t\t\t\t\t\t\t\tif(data.content.match(/\\((.*?)\\)/g)) {\r\n\t\t\t\t\t\t\t\t\t\treturn (<p dangerouslySetInnerHTML={{ __html: bodyParse(data.content)}} key={data.place}></p>)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\treturn (<p dangerouslySetInnerHTML={{ __html: data.content}} key={data.place}></p>)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if(data.type == 'media') {\r\n\t\t\t\t\t\t\t\t\treturn <img src={data.content}/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/}\r\n\t\t\t\t\t\r\n\t\t\t\t\t{postData.content.map((data) => {\r\n\t\t\t\t\t\tif(data.type == 'text') {\r\n\t\t\t\t\t\t\tif(data.content.match(/\\((.*?)\\)/g)) {\r\n\t\t\t\t\t\t\t\treturn (<p dangerouslySetInnerHTML={{ __html: bodyParse(data.content)}} key={data.place}></p>)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn (<p dangerouslySetInnerHTML={{ __html: data.content}} key={data.place}></p>)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if(data.type == 'media') {\r\n\t\t\t\t\t\t\treturn <img src={data.content} onClick={(e)=> {\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\t\t\t\tlet gallery = postData.content.filter(data => data.type === 'media')\r\n  \t\t\t\t\t\t\t\t\t.map(data => ({\r\n    \t\t\t\t\t\t\t\t\t...data,   // Spread existing properties\r\n    \t\t\t\t\t\t\t\t\tpostID: postData._id \r\n  \t\t\t\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t\t\tsetCurrent({\r\n\t\t\t\t\t\t\t\t\t...current,\r\n\t\t\t\t\t\t\t\t\tgallery: gallery\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t{/* * * \r\n\t\t\t\t\tT A G S L I S T\r\n\t\t\t\t* * */}\r\n\t\t\t\t<ul id=\"tagsList\" className={`${postData.tags.length > 3 ? 'alot' : ''}`}>\r\n\r\n\t\t\t\t\t{postData.tags.map((tag, index) => (\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<button className={`buttonDefault ${tag._id ? 'tag' : ''} ${tag.isPrivate == true ? 'private' : ''}`}\r\n\t\t\t\t\t\t\t\t\tonClick={(e)=> {\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\tgoToMacrosPage(tag);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{tag.name}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\r\n\r\n\t\t\t\t{/* * * \r\n\t\t\t\t\tC O M M E N T S \r\n\t\t\t\t* * */}\r\n\t\t\t\t<div id=\"commentsWrapper\">\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t{postData.commentCount < 10 &&\r\n\t\t\t\t\t\t\t<span id=\"commentCount\">00{postData.commentCount}</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{(postData.commentCount > 10 && postData.commentCount > 100) &&\r\n\t\t\t\t\t\t\t<span id=\"commentCount\">0{postData.commentCount}</span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tComments\r\n\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t\t<ul id=\"commentBox\" ref={commentsRef}>\r\n\t\t\t\t\t\t{comments.map(comment => (\r\n\t\t\t\t\t\t\tcreateComment(comment)\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</article>\r\n\r\n\r\n\r\n\t\t\t{/* * * \r\n\t\t\t\t\tM E N U   \r\n\t\t\t* * */}\r\n\t\t\t<div id='optionsBar'>\r\n\t\t\t\t<button id=\"optionsToggle\"className=\"buttonDefault\" ref={optionsButton} onClick={toggleOptions}>OPTIONS</button>\r\n\r\n\t\t\t\t{isOptionsOpen &&\r\n\t\t\t\t\t<ul id=\"optionsMenu\">\r\n\r\n\t\t\t\t\t\t{/* * * \r\n\t\t\t\t\t\t\tI N F O \r\n\t\t\t\t\t\t* * */}\r\n\t\t\t\t\t\t<li id=\"info\">\r\n\t\t\t\t\t\t\t<h4>Entry Posted On</h4>\r\n\t\t\t\t\t\t\t<p>{date} @ {timeStamp} UTC</p>\r\n\r\n\t\t\t\t\t\t\t{postData.taggedUsers.length > 0 &&\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Tagged Users: </li>\r\n\t\t\t\t\t\t\t\t\t{postData.taggedUsers.map(user => (\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className={`buttonDefault`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={()=> {goToProfile(user._id)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t@{user.username}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t<li> {/*Comment Button*/}\r\n\t\t\t\t\t\t\t<button className=\"buttonDefault\" onClick={()=> {\r\n\t\t\t\t\t\t\t\ttoggleOptions();\r\n\t\t\t\t\t\t\t\ttoggleComment(); \r\n\t\t\t\t\t\t\t\tconsole.log(comments.length)\r\n\t\t\t\t\t\t\t\tsetAccess({\r\n\t\t\t\t\t\t\t\t\ttype: 'initial',\r\n\t\t\t\t\t\t\t\t\tcommentNumber: `${comments.length + 1}`\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t}}>Comment</button>\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t<li> {/*Bookmark Button*/}\r\n\t\t\t\t\t\t\t<button className={`buttonDefault ${collections[0].hasThisPost == true ? '_inactive' : ''}`} \r\n\t\t\t\t\t\t\t\t\tonClick={(e)=> {\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\tif(collections[0].hasThisPost == true) {\r\n\t\t\t\t\t\t\t\t\t\t\tremoveFromCollections()\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\taddToCollections()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\t\t\ttoggleOptions()\r\n\t\t\t\t\t\t\t\t\t\t\tgetCollections()\r\n\t\t\t\t\t\t\t\t\t\t}, 150);\r\n\t\t\t\t\t\t\t}}>Bookmark</button>\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t<li>{/*Add to Collections Button*/}\r\n\t\t\t\t\t\t\t<button className=\"buttonDefault\" onClick={(e)=> {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\ttoggleCollections();\r\n\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\ttoggleOptions()\r\n\t\t\t\t\t\t\t\t}, 50);\r\n\t\t\t\t\t\t\t}}>Add to Collection</button>\r\n\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t{isOwner &&\r\n\t\t\t\t\t\t\t<li>{/*Pin Post Button*/}\r\n\t\t\t\t\t\t\t\t<button className={`buttonDefault ${pinnedPost == 'true' ? '_inactive' : ''}`}  onClick={(e)=> {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif(pinnedPost == 'true') {\r\n\t\t\t\t\t\t\t\t\t\tpinPost('remove');\r\n\t\t\t\t\t\t\t\t\t\tsetPinnedPost('false');\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tpinPost('add');\r\n\t\t\t\t\t\t\t\t\t\tsetPinnedPost('true');\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\t\ttoggleOptions()\r\n\t\t\t\t\t\t\t\t\t}, 50);\r\n\t\t\t\t\t\t\t\t}}>Pin Post</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{(isOwner && postData.content.some(piece => piece.type == 'media')) &&\r\n\t\t\t\t\t\t\t<li>{/*Pin Media Button*/}\r\n\t\t\t\t\t\t\t\t<button className={`buttonDefault`} \r\n\t\t\t\t\t\t\t\t\t\tonClick={(e)=> {\r\n\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\t\tsetPinnedMedia()\r\n\t\t\t\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttoggleOptions()\t\r\n\t\t\t\t\t\t\t\t\t\t\t}, 200)\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tPin Media</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{isOwner &&\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button className={`buttonDefault`} \r\n\t\t\t\t\t\t\t\t\t\tonClick={(e)=> {\r\n\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\t\ttoggleOptions()\r\n\t\t\t\t\t\t\t\t\t\t\tsetSocketMessage({\r\n\t\t\t\t\t\t\t\t\t\t\t\taction: 'deletePost',\r\n\t\t\t\t\t\t\t\t\t\t\t\tpostID: postData._id\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tDelete</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<li> {/*Exit Button*/}\r\n\t\t\t\t\t\t\t<button className=\"buttonDefault\" onClick={(e)=> {\r\n\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\tsetTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\tnavigate(-1)\r\n\t\t\t\t\t\t\t\t}, 500)\r\n\t\t\t\t\t\t\t}}>Exit Post</button>\r\n\t\t\t\t\t\t</li> \r\n\r\n\t\t\t\t\t\t<li> {/* X Button*/}\r\n\t\t\t\t\t\t\t<button className={`buttonDefault`} id=\"exit\" onClick={()=> {\r\n\t\t\t\t\t\t\t\tlet optionsMenu = document.getElementById('optionsMenu');\r\n\t\t\t\t\t\t\t\toptionsMenu.classList.add('leave')\r\n\r\n\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\ttoggleOptions()\r\n\t\t\t\t\t\t\t\t}, 150);\r\n\t\t\t\t\t\t\t}}>⨉</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t\t{isComment &&\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<h3>{commentHeader}</h3>\r\n\t\t\t\t\t\t<textarea name=\"content\" rows=\"10\" onChange={handleMessage}></textarea>\r\n\r\n\t\t\t\t\t\t<div id=\"buttonBox\">\r\n\t\t\t\t\t\t\t<button className=\"buttonDefault\" onClick={toggleComment}>Close</button>\r\n\t\t\t\t\t\t\t<button className=\"buttonDefault\" type=\"submit\">Submit</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t}\r\n\t\t\t\t{isCollections &&\r\n\t\t\t\t\t\t<ul id=\"collections\">\r\n\t\t\t\t\t\t\t{collections.map((item, index) => (\r\n\t\t\t\t\t\t\t\t<li key={item._id}>\r\n\t\t\t\t\t\t\t\t\t<button className={`buttonDefault ${collections[index].hasThisPost == true ? '_inactive' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={(e)=> {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(collections[index].hasThisPost == true) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tremoveFromCollections(item._id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taddToCollections(item._id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// toggleOptions()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttoggleCollections()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tgetCollections()\r\n\t\t\t\t\t\t\t\t\t\t\t\t}, 150);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>{item.name}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<button className={`buttonDefault`} \r\n\t\t\t\t\t\t\t\t\t\tonClick={()=> {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\ttoggleCollections()\r\n\t\t\t\t\t\t\t\t\t\t\tlet delay = setTimeout(()=> {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttoggleOptions()\r\n\t\t\t\t\t\t\t\t\t\t\t}, 50);\r\n\t\t\t\t\t\t\t\t}}>x</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t{current.gallery.length > 0 &&\r\n\t\t\t\t<DragSlider current={current} setCurrent={setCurrent} siteLocation={'post'}/>\r\n\t\t\t}\r\n\t\t\t{pinnedMedia &&\r\n\t\t\t\t<FullList \r\n\t\t\t\t\tdata={postData}\r\n\t\t\t\t\tmode={'pinMedia'}\r\n\t\t\t\t\tsource={postData.title}\r\n\t\t\t\t\tsocketMessage={socketMessage}\r\n\t\t\t\t\tsetSocketMessage={setSocketMessage}\r\n\t\t\t\t\tsetFullList={setPinnedMedia}\r\n\t\t\t\t\tgroupID={postID}/>\r\n\t\t\t}\r\n\t\t\t{notifList &&\r\n\t          <NotificationsList \r\n\t            setNotifList={setNotifList} \r\n\t            unreadCount={unreadCount}\r\n\t            setUnreadCount={setUnreadCount}\r\n\t            setSocketMessage={setSocketMessage}\r\n\t            accessID={accessID}\r\n\t            setAccessID={setAccessID}/>\r\n\t        }\r\n\t\t\t<Instant \r\n\t\t\t\tsocketURL={socketURL}\r\n                socketMessage={socketMessage}\r\n                setSocketMessage={setSocketMessage}\r\n                sendMessage={sendMessage}\r\n                isActive={isActive}\r\n                setActive={setActive}\r\n                accessID={accessID}\r\n                setAccessID={setAccessID}\r\n                getUnreadCount={getUnreadCount}\r\n                current={current}\r\n                setCurrent={setCurrent}\r\n\t\t\t/>\r\n\t\t</section>\r\n\t)\r\n\r\n}"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,aAA7C,QAAiE,kBAAjE;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,YAAP;AAEA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,SAAS,GAAGP,SAAS,EAA3B;AAEA,OAAO,SAASQ,QAAT,OAAgC;EAEtC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAVuC,IAAd;IAAEC;EAAF,CAAc;AAWtC;KAXeD,Q;AAahB,eAAe,SAASE,IAAT,QAcZ;EAAA;;EAAA,IAd0B;IAC5BC,SAD4B;IAE5BC,aAF4B;IAG5BC,gBAH4B;IAI5BC,WAJ4B;IAK5BC,QAL4B;IAM5BC,SAN4B;IAO5BC,QAP4B;IAQ5BC,WAR4B;IAS5BC,WAT4B;IAU5BC,cAV4B;IAW5BC,cAX4B;IAY5BC,UAZ4B;IAa5BC;EAb4B,CAc1B;EACF,MAAMC,MAAM,GAAGC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAf;EACA,MAAMC,IAAI,GAAG7B,aAAa,EAA1B,CAFE,CAGF;;EACA,MAAM;IAAE8B;EAAF,IAAajC,SAAS,EAA5B;EACA,MAAMkC,QAAQ,GAAGjC,WAAW,EAA5B;EACA,MAAMkC,QAAQ,GAAGjC,WAAW,EAA5B,CANE,CAOF;;EACA,MAAM,CAACY,QAAD,EAAWsB,WAAX,IAA0BrC,KAAK,CAACsC,QAAN,CAAeL,IAAf,CAAhC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BxC,KAAK,CAACsC,QAAN,CAAe,EAAf,CAAhC;EACA,MAAM,CAACG,YAAD,EAAeC,eAAf,IAAkC1C,KAAK,CAACsC,QAAN,CAAe,EAAf,CAAxC;;EAEA,IAAIK,WAAW,GAAG,YAAW;IAE5B,IAAIC,cAAc,GAAG,MAAM/B,SAAS,CAACgC,kBAAV,CAA6BX,MAA7B,CAA3B;IAEA,IAAIY,IAAI,GAAG,MAAMjC,SAAS,CAACkC,WAAV,CAAsBb,MAAtB,CAAjB;IAEA,IAAIK,QAAQ,GAAG,MAAM1B,SAAS,CAACmC,WAAV,CAAsBd,MAAtB,CAArB;IACAM,WAAW,CAACD,QAAD,CAAX;IACAF,WAAW,CAACS,IAAD,CAAX;EACA,CATD,CAZE,CAuBF;;;EACA,IAAIG,YAAY,GAAG,MAAMC,CAAN,IAAY;IAC9BA,CAAC,CAACC,cAAF;IACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;IACA,IAAIC,IAAI,GAAG;MAAE;MACZC,aAAa,EAAEC,QADL;MAEVC,OAAO,EAAE3B,MAFC;MAGV4B,OAAO,EAAEC,cAHC;MAIVC,UAAU,EAAE1B,MAJF;MAKV2B,cAAc,EAAET,IAAI,CAACU,QAAL,KAAkB,CALxB;MAMVC,YAAY,EAAEX,IAAI,CAACY,OAAL,EANJ;MAOVC,aAAa,EAAEb,IAAI,CAACc,WAAL,EAPL;MAQVC,aAAa,EAAEC,MAAM,CAACD,aARZ;MASVE,YAAY,EAAEtC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CATJ;MAUVsC,WAAW,EAAEF,MAAM,CAACG,YAVV;MAWVC,SAAS,EAAEzD,QAAQ,CAAC0D;IAXV,CAAX;IAaA,IAAIC,KAAK,GAAG;MAAE;MACZC,IAAI,EAAE,SADI;MAEVC,MAAM,EAAE,KAFE;MAGVC,QAAQ,EAAE/C,MAHA;MAIVgD,cAAc,EAAEtB,QAJN;MAKVuB,OAAO,EAAE7C,MALC;MAMV8C,UAAU,EAAE,CAACjE,QAAQ,CAAC0D,KAAV,CANF;MAOVQ,SAAS,EAAElE,QAAQ,CAACmE,KAPV;MAQVV,SAAS,EAAEzD,QAAQ,CAAC0D;IARV,CAAZ;;IAWA,IAAGL,MAAM,CAACO,IAAP,IAAe,SAAlB,EAA6B;MAE5BrB,IAAI,CAAC6B,QAAL,GAAgBjD,MAAhB;MACAwC,KAAK,CAACU,OAAN,GAAgB,SAAhB;IAEA,CALD,MAKO,IAAIhB,MAAM,CAACO,IAAP,IAAe,UAAnB,EAA+B;MAErCrB,IAAI,CAAC+B,aAAL,GAAqBjB,MAAM,CAACkB,SAA5B;;MACA,IAAGlB,MAAM,CAACG,YAAP,IAAuBzC,MAA1B,EAAkC;QACjC;QACA4C,KAAK,CAACM,UAAN,CAAiBO,KAAjB;MACA;;MACD,IAAGxE,QAAQ,CAAC0D,KAAT,IAAkBL,MAAM,CAACG,YAA5B,EAA0C;QACzCG,KAAK,CAACM,UAAN,CAAiBQ,IAAjB,CAAsBpB,MAAM,CAACG,YAA7B;MACA;;MACDG,KAAK,CAACU,OAAN,GAAgB,UAAhB;IACA;;IAED,IAAIK,OAAO,GAAG,MAAM5E,SAAS,CAAC6E,WAAV,CAAsBtB,MAAM,CAACO,IAA7B,EAAmCzC,MAAnC,EAA2CoB,IAA3C,EAAiDqC,IAAjD,CAAsDC,GAAG,IAAI;MAChFC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACAlB,KAAK,CAACY,SAAN,GAAkBM,GAAlB;MAEAzE,gBAAgB,CAACuD,KAAD,CAAhB;MACAmB,OAAO,CAACC,GAAR,CAAYpB,KAAZ;MACA/B,WAAW;IACX,CAPmB,CAApB;IASAoD,aAAa,GAtDiB,CAuD9B;EACA,CAxDD;;EA0DA,IAAIC,aAAa,GAAG,MAAMV,SAAN,IAAoB;IAEvCnE,gBAAgB,CAAC;MAChB8E,MAAM,EAAE,eADQ;MAEhBX,SAAS,EAAEA;IAFK,CAAD,CAAhB;EAKA,CAPD;;EASA,IAAIY,cAAc,GAAG,YAAU;IAC9B,IAAIC,WAAW,GAAG,MAAMtF,SAAS,CAACuF,SAAV,CAAoB,aAApB,CAAxB;IACA,IAAIC,QAAQ,GAAGF,WAAW,CAACG,GAAZ,CAAgBC,IAAI,IAAI;MAC7B,IAAGA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBvE,MAApB,CAAH,EAAgC;QAC5B,OAAO,EACN,GAAGqE,IADG;UAEHG,WAAW,EAAE;QAFV,CAAP;MAIH,CALD,MAMK;QACJ,OAAO,EACA,GAAGH,IADH;UAEAG,WAAW,EAAE;QAFb,CAAP;MAIA;IACJ,CAbQ,CAAf;IAcAC,cAAc,CAACN,QAAD,CAAd;EACA,CAjBD;;EAmBA,IAAIO,gBAAgB,GAAIC,YAAD,IAAiB;IAEvC,IAAIvD,IAAI,GAAG;MACVwD,OAAO,EAAED,YAAY,IAAIE,SAAhB,GAA4BZ,WAAW,CAAC,CAAD,CAAX,CAAea,GAA3C,GAAiDH,YADhD;MAEL3E,MAAM,EAAEA,MAFH;MAGL+D,MAAM,EAAE,iBAHH;MAILtB,IAAI,EAAE,YAJD;MAKLH,SAAS,EAAEzD,QAAQ,CAAC0D;IALf,CAAX;IAOAtD,gBAAgB,CAACmC,IAAD,CAAhB;EACA,CAVD;;EAYA,IAAI2D,qBAAqB,GAAIJ,YAAD,IAAkB;IAE7C,IAAIvD,IAAI,GAAG;MACVwD,OAAO,EAAED,YAAY,IAAIE,SAAhB,GAA4BZ,WAAW,CAAC,CAAD,CAAX,CAAea,GAA3C,GAAiDH,YADhD;MAEL3E,MAAM,EAAEA,MAFH;MAGLyC,IAAI,EAAE,YAHD;MAILsB,MAAM,EAAE;IAJH,CAAX;IAMA9E,gBAAgB,CAACmC,IAAD,CAAhB;EACA,CATD;;EAWA,IAAI4D,OAAO,GAAG,MAAMC,SAAN,IAAoB;IAEjC,IAAGA,SAAS,IAAI,OAAhB,EAAyB;MAExB;MACA,IAAI1B,OAAO,GAAG,MAAM5E,SAAS,CAACuG,YAAV,CAAuB;QAC1CC,MAAM,EAAE,aADkC;QAE1C1C,IAAI,EAAE,OAFoC;QAG1CzC,MAAM,EAAEA;MAHkC,CAAvB,EAIjByD,IAJiB,CAIZ1D,IAAI,IAAI;QACf,IAAGA,IAAI,CAACqF,YAAL,IAAqB,IAAxB,EAA8B;UAC7BC,aAAa,CAAC,MAAD,CAAb;QACA;MACD,CARmB,CAApB;IASA,CAZD,MAaK,IAAGJ,SAAS,IAAI,KAAhB,EAAuB;MAE3B,IAAI1B,OAAO,GAAG,MAAM5E,SAAS,CAACuG,YAAV,CAAuB;QAC1CC,MAAM,EAAE,aADkC;QAE1C1C,IAAI,EAAE,KAFoC;QAG1CzC,MAAM,EAAEA;MAHkC,CAAvB,CAApB;;MAMA,IAAGuD,OAAO,CAAC6B,YAAR,IAAwB,IAA3B,EAAiC;QAChCC,aAAa,CAAC,MAAD,CAAb;QACApG,gBAAgB,CAAC;UAChBwD,IAAI,EAAE,aADU;UAEhBS,OAAO,EAAE;QAFO,CAAD,CAAhB;MAIA;IACD,CAfI,MAgBA,IAAG+B,SAAS,IAAI,QAAhB,EAA0B;MAC9B,IAAI1B,OAAO,GAAG,MAAM5E,SAAS,CAACuG,YAAV,CAAuB;QAC1CC,MAAM,EAAE,aADkC;QAE1C1C,IAAI,EAAE,QAFoC;QAG1CzC,MAAM,EAAEA;MAHkC,CAAvB,CAApB;;MAMA,IAAGuD,OAAO,CAAC6B,YAAR,IAAwB,IAA3B,EAAiC;QAChCC,aAAa,CAAC,OAAD,CAAb;QACApG,gBAAgB,CAAC;UAChBwD,IAAI,EAAE,aADU;UAEhBS,OAAO,EAAE;QAFO,CAAD,CAAhB;MAIA;IACD;EACD,CA9CD;;EAgDA,IAAIoC,WAAW,GAAG,MAAM1F,MAAN,IAAiB;IAElC,IAAIG,IAAI,GAAG,MAAMpB,SAAS,CAAC4G,aAAV,CAAwB3F,MAAxB,CAAjB;IAEA,IAAI4F,KAAK,GAAGC,UAAU,CAAC,MAAK;MAC3BvF,QAAQ,CAAE,SAAQH,IAAI,CAAC2F,IAAL,CAAUpE,QAAS,IAAGvB,IAAI,CAAC2F,IAAL,CAAUZ,GAAI,EAA9C,EAAiD;QACxDa,KAAK,EAAE;UACND,IAAI,EAAE3F,IAAI,CAAC2F,IADL;UAENE,WAAW,EAAE7F,IAAI,CAAC6F,WAFZ;UAGN3B,WAAW,EAAElE,IAAI,CAACkE;QAHZ;MADiD,CAAjD,CAAR;IAOA,CARqB,EAQnB,GARmB,CAAtB;EASA,CAbD;;EAeA,IAAI4B,cAAc,GAAG,MAAMC,GAAN,IAAc;IAElC,IAAIC,OAAO,GAAG,MAAMpH,SAAS,CAACqH,UAAV,CAAqBF,GAAG,CAAChB,GAAzB,EAA8BgB,GAAG,CAACG,IAAlC,CAApB;IACA,IAAI3B,KAAK,GAAG,MAAM3F,SAAS,CAACuH,UAAV,CAAqB;MAACnC,MAAM,EAAE,UAAT;MAAqBa,OAAO,EAAEkB,GAAG,CAAChB,GAAlC;MAAuCqB,SAAS,EAAEL,GAAG,CAACG;IAAtD,CAArB,CAAlB;IACA,IAAIG,UAAU,GAAG9B,KAAK,CAAC+B,MAAvB;IAEA,IAAIC,cAAJ;;IACA,IAAGP,OAAO,CAACQ,SAAX,EAAsB;MACrBD,cAAc,GAAGP,OAAO,CAACQ,SAAR,CAAkBC,MAAlB,CAAyBC,EAAE,IAAIA,EAAE,IAAI7G,MAArC,CAAjB;MACA0G,cAAc,GAAGA,cAAc,CAACD,MAAf,GAAwB,CAAxB,GAA4B,IAA5B,GAAmC,KAApD;IACA;;IAED1C,OAAO,CAACC,GAAR,CAAYmC,OAAZ;IAEAN,UAAU,CAAC,MAAK;MACfvF,QAAQ,CAAE,WAAU4F,GAAG,CAACG,IAAK,IAAGH,GAAG,CAAChB,GAAI,EAAhC,EAAmC;QACzCa,KAAK,EAAE;UACNM,IAAI,EAAEH,GAAG,CAACG,IADJ;UAEN3B,KAAK,EAAEA,KAFD;UAGNoC,OAAO,EAAEZ,GAAG,CAAChB,GAHP;UAIN6B,SAAS,EAAEZ,OAAO,CAACY,SAJb;UAKNJ,SAAS,EAAED,cALL;UAMNjF,aAAa,EAAE0E,OAAO,CAACa,cAAR,GAAyBb,OAAO,CAACa,cAAR,CAAuB,CAAvB,CAAzB,GAAqD,IAN9D;UAONrF,OAAO,EAAEwE,OAAO,CAACc,MAAR,GAAiBd,OAAO,CAACc,MAAR,CAAe,CAAf,CAAjB,GAAqC,IAPxC;UAQNpE,IAAI,EAAEsD,OAAO,CAACtD,IAAR,IAAgBoC,SAAhB,GAA4B,OAA5B,GAAsCkB,OAAO,CAACtD,IAR9C;UASNqE,SAAS,EAAEf,OAAO,CAACQ,SAAR,GAAoBR,OAAO,CAACQ,SAAR,CAAkBF,MAAtC,GAA+C,IATpD;UAUNU,SAAS,EAAEX,UAAU,GAAGA,UAAH,GAAgB;QAV/B;MADkC,CAAnC,CAAR;IAcA,CAfS,EAeP,GAfO,CAAV;EAgBA,CA9BD;EAgCA;AACD;AACA;;;EACC,IAAIY,GAAG,GAAG7I,OAAO,EAAjB;EACC,IAAI8I,QAAQ,GAAG,IAAI9F,IAAJ,CAAStC,QAAQ,CAACqI,SAAT,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,CAAC,CAA7B,CAAT,CAAf;EACA,IAAIjG,IAAI,GAAG+F,QAAQ,CAACG,QAAT,GAAoBD,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CAAX;EACA,IAAIE,IAAI,GAAGJ,QAAQ,CAACG,QAAT,GAAoBD,KAApB,CAA0B,EAA1B,EAA8B,EAA9B,CAAX;EACA,IAAIG,MAAM,GAAGL,QAAQ,CAACG,QAAT,GAAoBD,KAApB,CAA0B,EAA1B,EAA8B,EAA9B,CAAb;EACA,IAAII,GAAJ;;EACA,IAAGF,IAAI,GAAG,EAAV,EAAc;IACbE,GAAG,GAAG,IAAN;IACAF,IAAI,GAAGA,IAAI,GAAG,EAAd;EACA,CAHD,MAGO;IACNE,GAAG,GAAG,IAAN;EACA;;EACD,IAAIC,SAAS,GAAGH,IAAI,GAAE,GAAN,GAAWC,MAAX,GAAmB,GAAnB,GAAwBC,GAAxC;EACA,IAAIjG,QAAQ,GAAGzB,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAf;EACA,IAAI2H,OAAO,GAAG5I,QAAQ,CAAC0D,KAAT,IAAkB3C,MAAlB,GAA2B,IAA3B,GAAkC,KAAhD,CArPC,CAuPD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGD;AACD;AACA;;EACC,MAAM,CAAC8H,SAAD,EAAYC,YAAZ,IAA4B7J,KAAK,CAAC8J,UAAN,CAAiBjC,KAAK,IAAI,CAACA,KAA3B,EAAkC,KAAlC,CAAlC;EACA,MAAM,CAACkC,aAAD,EAAgBC,WAAhB,IAA+BhK,KAAK,CAAC8J,UAAN,CAAiBjC,KAAK,IAAI,CAACA,KAA3B,EAAkC,KAAlC,CAArC;EACA,MAAM,CAACoC,aAAD,EAAgBC,aAAhB,IAAiClK,KAAK,CAAC8J,UAAN,CAAiBjC,KAAK,IAAI,CAACA,KAA3B,EAAkC,KAAlC,CAAvC;EACA,MAAM,CAACsC,SAAD,EAAYpE,aAAZ,IAA6B/F,KAAK,CAAC8J,UAAN,CAAiBjC,KAAK,IAAI,CAACA,KAA3B,EAAkC,KAAlC,CAAnC;EACA,MAAM,CAACuC,aAAD,EAAgBC,iBAAhB,IAAqCrK,KAAK,CAAC8J,UAAN,CAAiBjC,KAAK,IAAI,CAACA,KAA3B,EAAkC,KAAlC,CAA3C;EACA,MAAM,CAAClE,cAAD,EAAiB2G,UAAjB,IAA+BtK,KAAK,CAACsC,QAAN,CAAe,EAAf,CAArC;EACA,MAAM,CAAC6D,WAAD,EAAcQ,cAAd,IAAgC3G,KAAK,CAACsC,QAAN,CAAe,EAAf,CAAtC;EACA,MAAM,CAACiI,UAAD,EAAahD,aAAb,IAA8BvH,KAAK,CAACsC,QAAN,CAAe,EAAf,CAApC;EACA,MAAM,CAACkI,WAAD,EAAcC,cAAd,IAAgCzK,KAAK,CAAC8J,UAAN,CAAiBjC,KAAK,IAAI,CAACA,KAA3B,EAAkC,KAAlC,CAAtC;EACA,MAAM,CAACzD,MAAD,EAASsG,SAAT,IAAsB1K,KAAK,CAACsC,QAAN,CAAe;IAC1CqC,IAAI,EAAE,IADoC;IAC9B;IACZW,SAAS,EAAE,IAF+B;IAG1CnB,aAAa,EAAE,IAH2B;IAI1CI,YAAY,EAAE,IAJ4B;IAItB;IACpBoG,eAAe,EAAE;EALyB,CAAf,CAA5B;EAOA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC7K,KAAK,CAACsC,QAAN,CAAe,EAAf,CAA1C;EAEA,IAAIwI,aAAa,GAAG9K,KAAK,CAAC+K,MAAN,EAApB;;EAEA,IAAIC,aAAa,GAAI9H,CAAD,IAAO;IAC1BoH,UAAU,CAACpH,CAAC,CAAC+H,MAAF,CAASC,KAAV,CAAV;EACA,CAFD;;EAIA,IAAIC,aAAa,GAAIC,OAAD,IAAa;IAEhC,IAAIhI,IAAI,GAAI,GAAEgI,OAAO,CAACvH,cAAe,KAAIuH,OAAO,CAACrH,YAAa,KAAIqH,OAAO,CAACnH,aAAc,EAAxF;IAEA,IAAIkF,QAAQ,GAAG,IAAI9F,IAAJ,CAAS+H,OAAO,CAAChC,SAAR,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2B,CAAC,CAA5B,CAAT,CAAf;IACA,IAAIgC,KAAK,GAAGlC,QAAQ,CAACG,QAAT,GAAoBD,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CAAZ;IACA,IAAIE,IAAI,GAAGJ,QAAQ,CAACG,QAAT,GAAoBD,KAApB,CAA0B,EAA1B,EAA8B,EAA9B,CAAX;IACA,IAAIG,MAAM,GAAGL,QAAQ,CAACG,QAAT,GAAoBD,KAApB,CAA0B,EAA1B,EAA8B,EAA9B,CAAb;;IACA,IAAGE,IAAI,GAAG,EAAV,EAAc;MACbE,GAAG,GAAG,IAAN;MACAF,IAAI,GAAGA,IAAI,GAAG,EAAd;IACA,CAHD,MAGO;MACNE,GAAG,GAAG,IAAN;IACA;;IACD,IAAIC,SAAS,GAAGH,IAAI,GAAE,GAAN,GAAWC,MAAX,GAAmB,GAAnB,GAAwBC,GAAxC,CAdgC,CAehC;;IACA,IAAI6B,OAAO,GAAGF,OAAO,CAAC3H,OAAR,IAAmB,EAAnB,GAAwB,IAAxB,GAA+B,KAA7C;IAGA,oBAAO;MAAI,SAAS,EAAC,SAAd;MAA0C,EAAE,EAAE2H,OAAO,CAACpE,GAAtD;MAAA,wBAEJ;QAAQ,SAAS,EAAG,WAApB;QAAgC,OAAO,EAAE,MAAK;UAACQ,WAAW,CAAC4D,OAAO,CAAC3H,OAAT,CAAX;QAA6B,CAA5E;QAAA,WACE,CAAC6H,OAAD,iBACA;UAAK,GAAG,EAAEF,OAAO,CAAC/G;QAAlB;UAAA;UAAA;UAAA;QAAA,QAFF,EAIE,CAACiH,OAAD,iBACA;UAAA,gBAAYF,OAAO,CAAC7H,aAApB;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFI,eAUJ;QAAA,WAAKH,IAAL,SAAcsG,SAAd;MAAA;QAAA;QAAA;QAAA;MAAA,QAVI,eAWJ;QAAA,UAAI0B,OAAO,CAAC1H;MAAZ;QAAA;QAAA;QAAA;MAAA,QAXI,eAaJ;QAAK,EAAE,EAAC,gBAAR;QAAA,wBACC;UAAQ,SAAS,EAAC,eAAlB;UACC,OAAO,EAAE,MAAK;YAEbgH,SAAS,CAAC;cACT/F,IAAI,EAAE,UADG;cAETW,SAAS,EAAE8F,OAAO,CAACpE,GAFV;cAGT7C,aAAa,EAAG,GAAEiH,OAAO,CAACjH,aAAc,MAAKiH,OAAO,CAACG,OAAR,CAAgBhD,MAAhB,GAAyB,CAAE,EAH/D;cAIThE,YAAY,EAAE6G,OAAO,CAAC3H,OAJb;cAKTkH,eAAe,EAAES,OAAO,CAAC7H;YALhB,CAAD,CAAT;YAQAwC,aAAa;UACd,CAZD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,EAeEqF,OAAO,CAAC3H,OAAR,IAAmB3B,MAAnB,iBACA;UAAQ,SAAS,EAAC,eAAlB;UAAkC,OAAO,EAAE,MAAK;YAACkE,aAAa,CAACoF,OAAO,CAACpE,GAAT,CAAb;UAA2B,CAA5E;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAhBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAbI,EAoCHoE,OAAO,CAACG,OAAR,iBACA;QAAI,EAAE,EAAC,SAAP;QAAA,UACEH,OAAO,CAACG,OAAR,CAAgBjF,GAAhB,CAAoB8E,OAAO,IAC3BD,aAAa,CAACC,OAAD,CADb;MADF;QAAA;QAAA;QAAA;MAAA,QArCG;IAAA,GAA6BA,OAAO,CAACpE,GAArC;MAAA;MAAA;MAAA;IAAA,QAAP;EA4CA,CA/DD;EAiEA;AACD;;;EACChH,KAAK,CAACwL,SAAN,CAAgB,MAAK;IACpB,IAAGpH,MAAM,CAACO,IAAP,IAAe,UAAlB,EAA8B;MAC7BkG,gBAAgB,CAAE,gBAAezG,MAAM,CAACuG,eAAgB,EAAxC,CAAhB;IACA,CAFD,MAGK;MACJE,gBAAgB,CAAC,cAAD,CAAhB;IACA;EACD,CAPD,EAOG,CAACzG,MAAD,CAPH;EASApE,KAAK,CAACwL,SAAN,CAAgB,MAAK;IACpB,IAAGtK,aAAa,CAACkE,OAAd,IAAyB,gBAA5B,EAA8C;MAC7CzC,WAAW;IACX;EACD,CAJD,EAIG,CAACzB,aAAD,CAJH;EAMA;AACD;AACA;;EACC,IAAIuK,WAAW,GAAGzL,KAAK,CAAC+K,MAAN,EAAlB;EACA,IAAIW,eAAe,GAAGD,WAAW,CAAC5J,OAAlC;EACA7B,KAAK,CAACwL,SAAN,CAAgB,MAAK;IAEpB,IAAIG,WAAW,GAAGxJ,QAAQ,CAAC0F,KAAT,CAAevC,SAAf,GAA2BnD,QAAQ,CAAC0F,KAAT,CAAevC,SAA1C,GAAsD,IAAxE;;IAEA,IAAGqG,WAAW,IAAI,IAAlB,EAAwB;MAEvB9F,OAAO,CAACC,GAAR,CAAY,gBAAZ;;MAEA,IAAG4F,eAAH,EAAoB;QACnB,IAAIN,OAAO,GAAGQ,QAAQ,CAACC,cAAT,CAAwB1J,QAAQ,CAAC0F,KAAT,CAAevC,SAAvC,CAAd;QACAO,OAAO,CAACC,GAAR,CAAYsF,OAAZ;QACAA,OAAO,CAACU,cAAR,CAAuB;UAACC,QAAQ,EAAE;QAAX,CAAvB;QACA;MACA;IACD;EACD,CAfD,EAeG,CAACxJ,QAAD,CAfH;EAkBA;AACD;AACA;;EACC,MAAM,CAACyJ,KAAD,EAAQC,QAAR,IAAoBjM,KAAK,CAAC8J,UAAN,CAAiBjC,KAAK,IAAI,CAACA,KAA3B,EAAkC,IAAlC,CAA1B;EACA,MAAMqE,WAAW,GAAGlM,KAAK,CAAC+K,MAAN,CAAa,IAAb,CAApB;EACA,IAAIoB,SAAS,GAAGD,WAAW,CAACrK,OAA5B;EACA,MAAM8G,EAAE,GAAG3I,KAAK,CAAC+K,MAAN,EAAX;EACA,MAAMqB,OAAO,GAAGzD,EAAE,CAAC9G,OAAnB;EAEA7B,KAAK,CAACwL,SAAN,CAAgB,MAAK;IACpB,IAAGW,SAAH,EAAc;MACbtG,OAAO,CAACC,GAAR,CAAYqG,SAAZ;;MACA,IAAGC,OAAH,EAAY;QACXH,QAAQ;MACR;;MACDE,SAAS,GAAG,KAAZ;MACA;IACA;;IAEDjG,cAAc;IACdL,OAAO,CAACC,GAAR,CAAY/E,QAAZ;EACA,CAZD,EAYG,CAACqL,OAAD,CAZH;EAeApM,KAAK,CAACwL,SAAN,CAAgB,MAAK;IACpB7I,WAAW;IACXuE,OAAO,CAAC,OAAD,CAAP;IAEA0E,QAAQ,CAAC1G,KAAT,GAAiB,kBAAjB;;IAEA,IAAGrD,OAAO,CAACwK,OAAR,CAAgB9D,MAAhB,GAAyB,CAA5B,EAA+B;MAC9B3G,UAAU,CAAC,EACV,GAAGC,OADO;QAEVwK,OAAO,EAAE;MAFC,CAAD,CAAV;MAIAxG,OAAO,CAACC,GAAR,CAAY,MAAZ;IACA;EACD,CAbD,EAaG,EAbH;EAgBA,oBACC;IAAS,EAAE,EAAC,MAAZ;IAAmB,GAAG,EAAE6C,EAAxB;IAA4B,SAAS,EAAG,GAAEqD,KAAK,IAAI,IAAT,GAAgB,QAAhB,GAA2B,EAAG,EAAxE;IAAA,wBACC,QAAC,MAAD;MAAQ,GAAG,EAAE9C,GAAb;MACE,YAAY,EAAE,IADhB;MAEE,YAAY,EAAEW,YAFhB;MAGE,WAAW,EAAEpI,WAHf;MAIE,YAAY,EAAE;IAJhB;MAAA;MAAA;MAAA;IAAA,QADD,eAOC;MAAA,wBAIC;QAAK,EAAE,EAAC,aAAR;QAAA,WAEE,CAACkI,OAAD,iBACA;UAAQ,SAAS,EAAG,WAApB;UAAgC,OAAO,EAAE,MAAK;YAACnC,WAAW,CAACzG,QAAQ,CAAC0D,KAAV,CAAX;UAA4B,CAA3E;UAAA,wBACC;YAAK,GAAG,EAAE1D,QAAQ,CAACsD;UAAnB;YAAA;YAAA;YAAA;UAAA,QADD,eAEC;YAAA,gBAAYtD,QAAQ,CAACuL,MAArB,EACCvL,QAAQ,CAACwL,WAAT,CAAqBhE,MAArB,GAA8B,CAA9B,iBACA;cAAA,UAAQ,SAAQxH,QAAQ,CAACwL,WAAT,CAAqBhE,MAAO,UAASxH,QAAQ,CAACwH,MAAT,GAAkB,CAAlB,GAAsB,GAAtB,GAA4B,EAAG;YAApF;cAAA;cAAA;cAAA;YAAA,QAFD;UAAA;YAAA;YAAA;YAAA;UAAA,QAFD;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAYC;UAAA,UAAKxH,QAAQ,CAACmE;QAAd;UAAA;UAAA;UAAA;QAAA,QAZD,EAmCEnE,QAAQ,CAAC2C,OAAT,CAAiB4C,GAAjB,CAAsBrE,IAAD,IAAU;UAC/B,IAAGA,IAAI,CAAC0C,IAAL,IAAa,MAAhB,EAAwB;YACvB,IAAG1C,IAAI,CAACyB,OAAL,CAAa8I,KAAb,CAAmB,YAAnB,CAAH,EAAqC;cACpC,oBAAQ;gBAAG,uBAAuB,EAAE;kBAAEC,MAAM,EAAElM,SAAS,CAAC0B,IAAI,CAACyB,OAAN;gBAAnB;cAA5B,GAAqEzB,IAAI,CAACyK,KAA1E;gBAAA;gBAAA;gBAAA;cAAA,QAAR;YACA,CAFD,MAEO;cACN,oBAAQ;gBAAG,uBAAuB,EAAE;kBAAED,MAAM,EAAExK,IAAI,CAACyB;gBAAf;cAA5B,GAA0DzB,IAAI,CAACyK,KAA/D;gBAAA;gBAAA;gBAAA;cAAA,QAAR;YACA;UACD,CAND,MAMO,IAAGzK,IAAI,CAAC0C,IAAL,IAAa,OAAhB,EAAyB;YAC/B,oBAAO;cAAK,GAAG,EAAE1C,IAAI,CAACyB,OAAf;cAAwB,OAAO,EAAGR,CAAD,IAAM;gBAC7CA,CAAC,CAACyJ,eAAF;gBAEA,IAAIN,OAAO,GAAGtL,QAAQ,CAAC2C,OAAT,CAAiBgF,MAAjB,CAAwBzG,IAAI,IAAIA,IAAI,CAAC0C,IAAL,KAAc,OAA9C,EACV2B,GADU,CACNrE,IAAI,KAAK,EACZ,GAAGA,IADS;kBACD;kBACXC,MAAM,EAAEnB,QAAQ,CAACiG;gBAFL,CAAL,CADE,CAAd;gBAMApF,UAAU,CAAC,EACV,GAAGC,OADO;kBAEVwK,OAAO,EAAEA;gBAFC,CAAD,CAAV;cAIA;YAbM;cAAA;cAAA;cAAA;YAAA,QAAP;UAcA;QACD,CAvBA,CAnCF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJD,eAqEC;QAAI,EAAE,EAAC,UAAP;QAAkB,SAAS,EAAG,GAAEtL,QAAQ,CAAC6L,IAAT,CAAcrE,MAAd,GAAuB,CAAvB,GAA2B,MAA3B,GAAoC,EAAG,EAAvE;QAAA,UAEExH,QAAQ,CAAC6L,IAAT,CAActG,GAAd,CAAkB,CAAC0B,GAAD,EAAM6E,KAAN,kBAClB;UAAA,uBACC;YAAQ,SAAS,EAAG,iBAAgB7E,GAAG,CAAChB,GAAJ,GAAU,KAAV,GAAkB,EAAG,IAAGgB,GAAG,CAACa,SAAJ,IAAiB,IAAjB,GAAwB,SAAxB,GAAoC,EAAG,EAAnG;YACE,OAAO,EAAG3F,CAAD,IAAM;cACdA,CAAC,CAACC,cAAF;cACA4E,cAAc,CAACC,GAAD,CAAd;YACA,CAJH;YAAA,UAKEA,GAAG,CAACG;UALN;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QADA;MAFF;QAAA;QAAA;QAAA;MAAA,QArED,eAwFC;QAAK,EAAE,EAAC,iBAAR;QAAA,wBACC;UAAA,WACEpH,QAAQ,CAAC0B,YAAT,GAAwB,EAAxB,iBACA;YAAM,EAAE,EAAC,cAAT;YAAA,iBAA2B1B,QAAQ,CAAC0B,YAApC;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,EAIG1B,QAAQ,CAAC0B,YAAT,GAAwB,EAAxB,IAA8B1B,QAAQ,CAAC0B,YAAT,GAAwB,GAAvD,iBACA;YAAM,EAAE,EAAC,cAAT;YAAA,gBAA0B1B,QAAQ,CAAC0B,YAAnC;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,eAWC;UAAI,EAAE,EAAC,YAAP;UAAoB,GAAG,EAAEgJ,WAAzB;UAAA,UACElJ,QAAQ,CAAC+D,GAAT,CAAa8E,OAAO,IACpBD,aAAa,CAACC,OAAD,CADb;QADF;UAAA;UAAA;UAAA;QAAA,QAXD;MAAA;QAAA;QAAA;QAAA;MAAA,QAxFD;IAAA;MAAA;MAAA;MAAA;IAAA,QAPD,eAuHC;MAAK,EAAE,EAAC,YAAR;MAAA,wBACC;QAAQ,EAAE,EAAC,eAAX;QAA0B,SAAS,EAAC,eAApC;QAAoD,GAAG,EAAEN,aAAzD;QAAwE,OAAO,EAAEZ,aAAjF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,EAGED,aAAa,iBACb;QAAI,EAAE,EAAC,aAAP;QAAA,wBAKC;UAAI,EAAE,EAAC,MAAP;UAAA,wBACC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADD,eAEC;YAAA,WAAI7G,IAAJ,SAAasG,SAAb;UAAA;YAAA;YAAA;YAAA;UAAA,QAFD,EAIE3I,QAAQ,CAACwL,WAAT,CAAqBhE,MAArB,GAA8B,CAA9B,iBACA;YAAA,wBACC;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADD,EAEExH,QAAQ,CAACwL,WAAT,CAAqBjG,GAArB,CAAyBsB,IAAI,iBAC7B;cAAA,uBACC;gBAAQ,SAAS,EAAG,eAApB;gBACE,OAAO,EAAE,MAAK;kBAACJ,WAAW,CAACI,IAAI,CAACZ,GAAN,CAAX;gBAAsB,CADvC;gBAAA,gBAEGY,IAAI,CAACkF,QAFR;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADD;cAAA;cAAA;cAAA;YAAA,QADA,CAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QALD,eAwBC;UAAA,6BACC;YAAQ,SAAS,EAAC,eAAlB;YAAkC,OAAO,EAAE,MAAK;cAC/C5C,aAAa;cACbnE,aAAa;cACbF,OAAO,CAACC,GAAR,CAAYvD,QAAQ,CAACgG,MAArB;cACAmC,SAAS,CAAC;gBACT/F,IAAI,EAAE,SADG;gBAETR,aAAa,EAAG,GAAE5B,QAAQ,CAACgG,MAAT,GAAkB,CAAE;cAF7B,CAAD,CAAT;YAKA,CATD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADD;QAAA;UAAA;UAAA;UAAA;QAAA,QAxBD,eAqCC;UAAA,6BACC;YAAQ,SAAS,EAAG,iBAAgBpC,WAAW,CAAC,CAAD,CAAX,CAAeO,WAAf,IAA8B,IAA9B,GAAqC,WAArC,GAAmD,EAAG,EAA1F;YACE,OAAO,EAAGxD,CAAD,IAAM;cACdA,CAAC,CAACC,cAAF;;cACA,IAAGgD,WAAW,CAAC,CAAD,CAAX,CAAeO,WAAf,IAA8B,IAAjC,EAAuC;gBACtCO,qBAAqB;cACrB,CAFD,MAEO;gBACNL,gBAAgB;cAChB;;cACD,IAAIc,KAAK,GAAGC,UAAU,CAAC,MAAK;gBAC3BuC,aAAa;gBACbhE,cAAc;cACd,CAHqB,EAGnB,GAHmB,CAAtB;YAIF,CAZD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADD;QAAA;UAAA;UAAA;UAAA;QAAA,QArCD,eAqDC;UAAA,uBACC;YAAQ,SAAS,EAAC,eAAlB;YAAkC,OAAO,EAAGhD,CAAD,IAAM;cAChDA,CAAC,CAACC,cAAF;cACAkH,iBAAiB;cACjB,IAAI3C,KAAK,GAAGC,UAAU,CAAC,MAAK;gBAC3BuC,aAAa;cACb,CAFqB,EAEnB,EAFmB,CAAtB;YAGA,CAND;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QArDD,EA+DEP,OAAO,iBACP;UAAA,uBACC;YAAQ,SAAS,EAAG,iBAAgBY,UAAU,IAAI,MAAd,GAAuB,WAAvB,GAAqC,EAAG,EAA5E;YAAgF,OAAO,EAAGrH,CAAD,IAAM;cAC9FA,CAAC,CAACC,cAAF;;cAEA,IAAGoH,UAAU,IAAI,MAAjB,EAAyB;gBACxBrD,OAAO,CAAC,QAAD,CAAP;gBACAK,aAAa,CAAC,OAAD,CAAb;cACA,CAHD,MAGO;gBACNL,OAAO,CAAC,KAAD,CAAP;gBACAK,aAAa,CAAC,MAAD,CAAb;cACA;;cAED,IAAIG,KAAK,GAAGC,UAAU,CAAC,MAAK;gBAC3BuC,aAAa;cACb,CAFqB,EAEnB,EAFmB,CAAtB;YAGA,CAdD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QAhEF,EAkFGP,OAAO,IAAI5I,QAAQ,CAAC2C,OAAT,CAAiBqJ,IAAjB,CAAsBC,KAAK,IAAIA,KAAK,CAACrI,IAAN,IAAc,OAA7C,CAAZ,iBACA;UAAA,uBACC;YAAQ,SAAS,EAAG,eAApB;YACE,OAAO,EAAGzB,CAAD,IAAM;cACdA,CAAC,CAACC,cAAF;cACAsH,cAAc;cACd,IAAI/C,KAAK,GAAGC,UAAU,CAAC,MAAK;gBAC3BuC,aAAa;cACb,CAFqB,EAEnB,GAFmB,CAAtB;YAGA,CAPH;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QAnFF,EA+FEP,OAAO,iBACP;UAAA,uBACC;YAAQ,SAAS,EAAG,eAApB;YACE,OAAO,EAAGzG,CAAD,IAAM;cACdA,CAAC,CAACC,cAAF;cACA+G,aAAa;cACb/I,gBAAgB,CAAC;gBAChB8E,MAAM,EAAE,YADQ;gBAEhB/D,MAAM,EAAEnB,QAAQ,CAACiG;cAFD,CAAD,CAAhB;YAIA,CARH;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QAhGF,eA8GC;UAAA,6BACC;YAAQ,SAAS,EAAC,eAAlB;YAAkC,OAAO,EAAG9D,CAAD,IAAM;cAChDA,CAAC,CAACC,cAAF;cACAwE,UAAU,CAAC,MAAK;gBACfvF,QAAQ,CAAC,CAAC,CAAF,CAAR;cACA,CAFS,EAEP,GAFO,CAAV;YAGA,CALD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADD;QAAA;UAAA;UAAA;UAAA;QAAA,QA9GD,eAuHC;UAAA,6BACC;YAAQ,SAAS,EAAG,eAApB;YAAoC,EAAE,EAAC,MAAvC;YAA8C,OAAO,EAAE,MAAK;cAC3D,IAAI6K,WAAW,GAAGrB,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAlB;cACAoB,WAAW,CAACC,SAAZ,CAAsBC,GAAtB,CAA0B,OAA1B;cAEA,IAAIzF,KAAK,GAAGC,UAAU,CAAC,MAAK;gBAC3BuC,aAAa;cACb,CAFqB,EAEnB,GAFmB,CAAtB;YAGA,CAPD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADD;QAAA;UAAA;UAAA;UAAA;QAAA,QAvHD;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,EAyIEC,SAAS,iBACT;QAAM,QAAQ,EAAElH,YAAhB;QAAA,wBACC;UAAA,UAAK2H;QAAL;UAAA;UAAA;UAAA;QAAA,QADD,eAEC;UAAU,IAAI,EAAC,SAAf;UAAyB,IAAI,EAAC,IAA9B;UAAmC,QAAQ,EAAEI;QAA7C;UAAA;UAAA;UAAA;QAAA,QAFD,eAIC;UAAK,EAAE,EAAC,WAAR;UAAA,wBACC;YAAQ,SAAS,EAAC,eAAlB;YAAkC,OAAO,EAAEjF,aAA3C;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADD,eAEC;YAAQ,SAAS,EAAC,eAAlB;YAAkC,IAAI,EAAC,QAAvC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFD;QAAA;UAAA;UAAA;UAAA;QAAA,QAJD;MAAA;QAAA;QAAA;QAAA;MAAA,QA1IF,EAoJEqE,aAAa,iBACZ;QAAI,EAAE,EAAC,aAAP;QAAA,WACEjE,WAAW,CAACG,GAAZ,CAAgB,CAACC,IAAD,EAAOsG,KAAP,kBAChB;UAAA,uBACC;YAAQ,SAAS,EAAG,iBAAgB1G,WAAW,CAAC0G,KAAD,CAAX,CAAmBnG,WAAnB,IAAkC,IAAlC,GAAyC,WAAzC,GAAuD,EAAG,EAA9F;YACE,OAAO,EAAGxD,CAAD,IAAM;cAEdA,CAAC,CAACC,cAAF;;cACA,IAAGgD,WAAW,CAAC0G,KAAD,CAAX,CAAmBnG,WAAnB,IAAkC,IAArC,EAA2C;gBAC1CO,qBAAqB,CAACV,IAAI,CAACS,GAAN,CAArB;cACA,CAFD,MAEO;gBACNJ,gBAAgB,CAACL,IAAI,CAACS,GAAN,CAAhB;cACA;;cACD,IAAIU,KAAK,GAAGC,UAAU,CAAC,MAAK;gBAC3B;gBACA0C,iBAAiB;gBACjBnE,cAAc;cACd,CAJqB,EAInB,GAJmB,CAAtB;YAKA,CAdH;YAAA,UAcMK,IAAI,CAAC4B;UAdX;YAAA;YAAA;YAAA;UAAA;QADD,GAAS5B,IAAI,CAACS,GAAd;UAAA;UAAA;UAAA;QAAA,QADA,CADF,eAsBC;UAAA,uBACC;YAAQ,SAAS,EAAG,eAApB;YACE,OAAO,EAAE,MAAK;cAEbqD,iBAAiB;cACjB,IAAI3C,KAAK,GAAGC,UAAU,CAAC,MAAK;gBAC3BuC,aAAa;cACb,CAFqB,EAEnB,EAFmB,CAAtB;YAGF,CAPD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QAtBD;MAAA;QAAA;QAAA;QAAA;MAAA,QArJH;IAAA;MAAA;MAAA;MAAA;IAAA,QAvHD,EAiTErI,OAAO,CAACwK,OAAR,CAAgB9D,MAAhB,GAAyB,CAAzB,iBACA,QAAC,UAAD;MAAY,OAAO,EAAE1G,OAArB;MAA8B,UAAU,EAAED,UAA1C;MAAsD,YAAY,EAAE;IAApE;MAAA;MAAA;MAAA;IAAA,QAlTF,EAoTE4I,WAAW,iBACX,QAAC,QAAD;MACC,IAAI,EAAEzJ,QADP;MAEC,IAAI,EAAE,UAFP;MAGC,MAAM,EAAEA,QAAQ,CAACmE,KAHlB;MAIC,aAAa,EAAEhE,aAJhB;MAKC,gBAAgB,EAAEC,gBALnB;MAMC,WAAW,EAAEsJ,cANd;MAOC,OAAO,EAAEvI;IAPV;MAAA;MAAA;MAAA;IAAA,QArTF,EA8TE0H,SAAS,iBACF,QAAC,iBAAD;MACE,YAAY,EAAEC,YADhB;MAEE,WAAW,EAAEpI,WAFf;MAGE,cAAc,EAAEC,cAHlB;MAIE,gBAAgB,EAAEP,gBAJpB;MAKE,QAAQ,EAAEI,QALZ;MAME,WAAW,EAAEC;IANf;MAAA;MAAA;MAAA;IAAA,QA/TT,eAuUC,QAAC,OAAD;MACC,SAAS,EAAEP,SADZ;MAEa,aAAa,EAAEC,aAF5B;MAGa,gBAAgB,EAAEC,gBAH/B;MAIa,WAAW,EAAEC,WAJ1B;MAKa,QAAQ,EAAEC,QALvB;MAMa,SAAS,EAAEC,SANxB;MAOa,QAAQ,EAAEC,QAPvB;MAQa,WAAW,EAAEC,WAR1B;MASa,cAAc,EAAEG,cAT7B;MAUa,OAAO,EAAEE,OAVtB;MAWa,UAAU,EAAED;IAXzB;MAAA;MAAA;MAAA;IAAA,QAvUD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAwVA;;GAzxBuBZ,I;UAgBVZ,a,EAEMH,S,EACFC,W,EACAC,W;;;MApBMa,I"},"metadata":{},"sourceType":"module"}