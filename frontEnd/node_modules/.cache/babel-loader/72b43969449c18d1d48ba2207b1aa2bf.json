{"ast":null,"code":"/** @module  color-rgba */\nimport parse from 'color-parse';\nimport rgb from 'color-space/rgb.js';\nimport hsl from 'color-space/hsl.js';\nexport default function rgba(color) {\n  // template literals\n  if (Array.isArray(color) && color.raw) color = String.raw(...arguments);\n  if (color instanceof Number) color = +color;\n  var values, i, l; //attempt to parse non-array arguments\n\n  var parsed = parse(color);\n  if (!parsed.space) return [];\n  const min = parsed.space[0] === 'h' ? hsl.min : rgb.min;\n  const max = parsed.space[0] === 'h' ? hsl.max : rgb.max;\n  values = Array(3);\n  values[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0]);\n  values[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1]);\n  values[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2]);\n\n  if (parsed.space[0] === 'h') {\n    values = hsl.rgb(values);\n  }\n\n  values.push(Math.min(Math.max(parsed.alpha, 0), 1));\n  return values;\n}","map":{"version":3,"names":["parse","rgb","hsl","rgba","color","Array","isArray","raw","String","arguments","Number","values","i","l","parsed","space","min","max","Math","push","alpha"],"sources":["/home/jce/Web Dev Space/Syncsequence/frontEnd/node_modules/color-rgba/index.js"],"sourcesContent":["/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EACnC;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,KAAwBA,KAAK,CAACG,GAAlC,EAAuCH,KAAK,GAAGI,MAAM,CAACD,GAAP,CAAW,GAAGE,SAAd,CAAR;EACvC,IAAIL,KAAK,YAAYM,MAArB,EAA6BN,KAAK,GAAG,CAACA,KAAT;EAE7B,IAAIO,MAAJ,EAAYC,CAAZ,EAAeC,CAAf,CALmC,CAOnC;;EACA,IAAIC,MAAM,GAAGd,KAAK,CAACI,KAAD,CAAlB;EAEA,IAAI,CAACU,MAAM,CAACC,KAAZ,EAAmB,OAAO,EAAP;EAEnB,MAAMC,GAAG,GAAGF,MAAM,CAACC,KAAP,CAAa,CAAb,MAAoB,GAApB,GAA0Bb,GAAG,CAACc,GAA9B,GAAoCf,GAAG,CAACe,GAApD;EACA,MAAMC,GAAG,GAAGH,MAAM,CAACC,KAAP,CAAa,CAAb,MAAoB,GAApB,GAA0Bb,GAAG,CAACe,GAA9B,GAAoChB,GAAG,CAACgB,GAApD;EAEAN,MAAM,GAAGN,KAAK,CAAC,CAAD,CAAd;EACAM,MAAM,CAAC,CAAD,CAAN,GAAYO,IAAI,CAACF,GAAL,CAASE,IAAI,CAACD,GAAL,CAASH,MAAM,CAACH,MAAP,CAAc,CAAd,CAAT,EAA2BK,GAAG,CAAC,CAAD,CAA9B,CAAT,EAA6CC,GAAG,CAAC,CAAD,CAAhD,CAAZ;EACAN,MAAM,CAAC,CAAD,CAAN,GAAYO,IAAI,CAACF,GAAL,CAASE,IAAI,CAACD,GAAL,CAASH,MAAM,CAACH,MAAP,CAAc,CAAd,CAAT,EAA2BK,GAAG,CAAC,CAAD,CAA9B,CAAT,EAA6CC,GAAG,CAAC,CAAD,CAAhD,CAAZ;EACAN,MAAM,CAAC,CAAD,CAAN,GAAYO,IAAI,CAACF,GAAL,CAASE,IAAI,CAACD,GAAL,CAASH,MAAM,CAACH,MAAP,CAAc,CAAd,CAAT,EAA2BK,GAAG,CAAC,CAAD,CAA9B,CAAT,EAA6CC,GAAG,CAAC,CAAD,CAAhD,CAAZ;;EAEA,IAAIH,MAAM,CAACC,KAAP,CAAa,CAAb,MAAoB,GAAxB,EAA6B;IAC5BJ,MAAM,GAAGT,GAAG,CAACD,GAAJ,CAAQU,MAAR,CAAT;EACA;;EAEDA,MAAM,CAACQ,IAAP,CAAYD,IAAI,CAACF,GAAL,CAASE,IAAI,CAACD,GAAL,CAASH,MAAM,CAACM,KAAhB,EAAuB,CAAvB,CAAT,EAAoC,CAApC,CAAZ;EAEA,OAAOT,MAAP;AACA"},"metadata":{},"sourceType":"module"}