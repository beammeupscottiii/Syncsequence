{"ast":null,"code":"/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport { asArray } from '../color.js';\nimport { getSharedCanvasContext2D } from '../dom.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\n\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n\n    this.patternCache_ = {};\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.cacheSize_ = 0;\n    /**\n     * @type {number}\n     * @private\n     */\n\n    this.maxCacheSize_ = 32;\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n  /**\n   * @return {boolean} Can expire cache.\n   */\n\n\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n  /**\n   * FIXME empty description for jsdoc\n   */\n\n\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n\n\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n\n\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n\n\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = (key in this.cache_);\n    this.cache_[key] = iconImage;\n\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(iconImage.getImage(1), 'repeat');\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(iconImage.getImage(1), 'repeat');\n      }\n    }\n\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n\n\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n\n}\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\n\n\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\n\nexport const shared = new IconImageCache();","map":{"version":3,"names":["ImageState","asArray","getSharedCanvasContext2D","IconImageCache","constructor","cache_","patternCache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","i","key","iconImage","hasListener","get","src","crossOrigin","color","getCacheKey","getPattern","set","pattern","update","getImageState","IDLE","load","LOADING","ready","then","createPattern","getImage","setSize","maxCacheSize","colorString","shared"],"sources":["/home/jce/Web Dev Space/Syncsequence/frontEnd/node_modules/ol/style/IconImageCache.js"],"sourcesContent":["/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}