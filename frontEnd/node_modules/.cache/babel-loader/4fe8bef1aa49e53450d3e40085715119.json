{"ast":null,"code":"var _jsxFileName = \"/home/jce/Web Dev Space/Syncsequence/frontEnd/src/components/blog/log.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport APIaccess from '../../apiaccess';\nimport './blog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst accessAPI = APIaccess();\n/**\r\n * 09. 24. 2023\r\n * Component with creates list of post items from whatever blog / feed\r\n * Goes within wrapper element, so that logs throughout the site can\r\n * be distinguished\r\n */\n\nexport default function Log(_ref) {\n  _s();\n\n  let {\n    data,\n    section,\n    noHeading,\n    current,\n    setCurrent,\n    isUnified,\n    updateLog\n  } = _ref;\n  const navigate = useNavigate();\n\n  const _id = sessionStorage.getItem('userID');\n\n  let goToProfile = async userID => {\n    console.log(userID);\n    let data = await accessAPI.getSingleUser(userID);\n    let delay = setTimeout(() => {\n      navigate(`/user/${data.user.username}/${userID}`);\n    }, 150);\n  };\n\n  let dateObserved, monthObserved;\n\n  function returnPostItem(post, index, userID) {\n    let title = post.title,\n        tags = 0,\n        id = post._id,\n        owner = post.owner,\n        author = post.author,\n        content,\n        text = [],\n        commentCount;\n\n    if (post.tags) {\n      tags = post.tags.length;\n    }\n\n    if (post.content.find(piece => piece.type == 'text')) {\n      content = post.content.find(piece => piece.type == 'text').content; // content = content.content\n    }\n\n    let month, day, year, dateMatch;\n\n    if (monthObserved != post.postedOn_month) {\n      if (dateObserved != post.postedOn_day) {\n        month = post.postedOn_month;\n        day = post.postedOn_day;\n        year = post.postedOn_year;\n        dateMatch = false;\n      }\n    } else if (monthObserved == post.postedOn_month && dateObserved != post.postedOn_day) {\n      month = post.postedOn_month;\n      day = post.postedOn_day;\n      year = post.postedOn_year;\n      dateMatch = false;\n    }\n\n    dateObserved = post.postedOn_day;\n    monthObserved = post.postedOn_month;\n    let rightAlign;\n\n    if (isUnified == true && owner == _id) {\n      rightAlign = true;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [dateMatch == false && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"postDate\",\n        children: [month + 1, \" . \", day, \" . \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `entry ${rightAlign == true ? 'right' : ''}`,\n        id: id,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toProfile`,\n          onClick: () => {\n            // Below is for older posts which have _id and profile photo in\n            // an object\n            let UID = post.owner._id;\n            console.log(UID);\n            goToProfile(UID);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.profilePhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"@\", post.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textWrapper\",\n          onClick: e => {\n            e.preventDefault();\n            console.log(post);\n            setTimeout(() => {\n              navigate(`/post/${post._id}`, {\n                state: {\n                  post: post\n                }\n              });\n            }, 600);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this), content && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 8\n          }, this), post.content.some(data => data.type == 'media') && /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"thumbnailsWrapper\",\n            onClick: e => {\n              e.stopPropagation();\n              let gallery = post.content.filter(data => data.type === 'media').map(data => ({ ...data,\n                // Spread existing properties\n                postID: post._id\n              }));\n              setCurrent({ ...current,\n                gallery: gallery\n              });\n            },\n            children: post.content.filter(data => data.type == 'media').map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                loading: \"lazy\",\n                src: data.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 11\n              }, this)\n            }, data._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            id: \"details\",\n            children: [tags > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [tags, \" tags\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 9\n            }, this), post.commentCount > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [post.commentCount, \" comments\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 9\n            }, this), post.taggedUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [post.taggedUsers.length, \" users tagged\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n  let logRef = React.useRef();\n  let logRefC = logRef.current;\n  let isMounted = React.useRef(false);\n  /* \r\n  \tTracks position of selected post to return to \r\n      after viewing it in <Post>\r\n  */\n\n  React.useEffect(() => {\n    if (data.length && logRefC) {\n      console.log(data.length);\n\n      if (current.scrollTo) {\n        if (current.monthChart == true) {\n          return;\n        } else if (data.length < 3) {\n          return;\n        } else {\n          let post = Array.from(logRefC.children).filter(el => el.id == current.scrollTo);\n          post = post.pop();\n          post.scrollIntoView({\n            behavior: \"smooth\"\n          });\n        }\n      }\n    } // if(isMounted.current) {\n    // if(logRefC) {\n    // \t// let logRefC = logRef.current;\n    // \tlet post = Array.from(logRefC.children).filter(el => el.id == current.scrollTo);\n    // \tpost = post.pop()\n    // \tif(current.scrollTo) {\n    // \t\tconsole.log(post)\n    // \t\tif(current.monthChart == true) {\n    // \t\t\treturn;\n    // \t\t}\n    // \t\telse {\n    // \t\t\t// \n    // \t\t\tconsole.log(current.scrollTo)\n    // \t\t\tlet post = Array.from(logRefC.children).filter(el => el.id == current.scrollTo);\n    // \t\t\tpost = post.pop()\n    // \t\t\tpost.scrollIntoView({behavior: \"smooth\"});\n    // \t\t// \tconsole.log(post[0]);\n    // \t\t}\n    // else if(post.length < 3) {\n    // \treturn;\n    // } \n    // else if(post.length > 3){\n    // \t// let post = Array.from(logRefC.children).filter(el => el.id == current.scrollTo);\n    // \tpost[0].scrollIntoView({behavior: \"smooth\"});\n    // \tconsole.log(post[0]);\n    // }\n    // \t}\t\n    // } \n    // else {\n    // \tif(data.length > 0) {\n    // \t\tisMounted.current = true;\n    // \t\tconsole.log(`isMounted now ${isMounted.current}`)\n    // \t}\n    // }\n\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log\",\n    ref: logRef,\n    children: data && data.length > 0 && data.map((post, index) => returnPostItem(post, index, _id))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Log, \"F0maqqJFzmGJcHtkbotcRjQKH6Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Log;\n\nvar _c;\n\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"names":["React","useNavigate","APIaccess","accessAPI","Log","data","section","noHeading","current","setCurrent","isUnified","updateLog","navigate","_id","sessionStorage","getItem","goToProfile","userID","console","log","getSingleUser","delay","setTimeout","user","username","dateObserved","monthObserved","returnPostItem","post","index","title","tags","id","owner","author","content","text","commentCount","length","find","piece","type","month","day","year","dateMatch","postedOn_month","postedOn_day","postedOn_year","rightAlign","UID","profilePhoto","e","preventDefault","state","some","stopPropagation","gallery","filter","map","postID","taggedUsers","logRef","useRef","logRefC","isMounted","useEffect","scrollTo","monthChart","Array","from","children","el","pop","scrollIntoView","behavior"],"sources":["/home/jce/Web Dev Space/Syncsequence/frontEnd/src/components/blog/log.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport APIaccess from '../../apiaccess';\r\nimport './blog.css';\r\nconst accessAPI = APIaccess(); \r\n\r\n/**\r\n * 09. 24. 2023\r\n * Component with creates list of post items from whatever blog / feed\r\n * Goes within wrapper element, so that logs throughout the site can\r\n * be distinguished\r\n */\r\n\r\nexport default function Log({data, section, noHeading, current, setCurrent, isUnified, updateLog}) {\r\n\r\n\tconst navigate = useNavigate();\r\n\tconst _id = sessionStorage.getItem('userID');\r\n\r\n\tlet goToProfile = async(userID) => {\r\n\t\tconsole.log(userID)\r\n\t\tlet data = await accessAPI.getSingleUser(userID);\r\n\t\t\r\n\t\tlet delay = setTimeout(()=> {\r\n\t\t\tnavigate(`/user/${data.user.username}/${userID}`)\r\n\t\t}, 150)\r\n\t}\r\n\r\n\tlet dateObserved, monthObserved;\r\n\tfunction returnPostItem (post, index, userID) {\r\n\r\n\t\tlet title = post.title,\r\n\t\t\ttags = 0,\r\n\t\t\tid = post._id,\r\n\t\t\towner = post.owner,\r\n\t\t\tauthor = post.author,\r\n\t\t\tcontent,\r\n\t\t\ttext = [],\r\n\t\t\tcommentCount;\r\n\r\n\t\t\tif(post.tags) {\r\n\t\t\t\ttags = post.tags.length\r\n\t\t\t}\r\n\r\n\t\t\tif(post.content.find(piece => piece.type == 'text')) {\r\n\t\t\t\tcontent = post.content.find(piece => piece.type == 'text').content\r\n\t\t\t\t// content = content.content\r\n\t\t\t} \r\n\r\n\t\tlet month, day, year, dateMatch;\r\n\r\n\t\tif(monthObserved != post.postedOn_month) {\r\n\r\n\t\t\tif(dateObserved != post.postedOn_day) {\r\n\t\t\t\tmonth = post.postedOn_month;\r\n\t\t\t\tday = post.postedOn_day;\r\n\t\t\t\tyear = post.postedOn_year;\r\n\t\t\t\tdateMatch = false;\r\n\t\t\t}\r\n\t\t} \r\n\t\telse if(monthObserved == post.postedOn_month && dateObserved != post.postedOn_day) {\r\n\t\t\tmonth = post.postedOn_month;\r\n\t\t\tday = post.postedOn_day;\r\n\t\t\tyear = post.postedOn_year;\r\n\t\t\tdateMatch = false;\r\n\t\t}\r\n\t\tdateObserved = post.postedOn_day;\r\n\t\tmonthObserved = post.postedOn_month;\r\n\r\n\t\tlet rightAlign;\r\n\t\tif(isUnified == true && owner == _id) {\r\n\t\t\trightAlign = true;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{dateMatch == false  &&\r\n\t\t\t\t\t<span className=\"postDate\">{month + 1} . {day} . {year}</span>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<div className={`entry ${rightAlign == true ? 'right' : ''}`} id={id} key={post._id}>\r\n\t\t\t\t\t{/*{(userID != post.owner) &&  \r\n\t\t\t\t\t\t<button className={`toProfile`} onClick={()=> {\r\n\t\t\t\t\t\t\tlet UID = post.owner._id;\r\n\t\t\t\t\t\t\tconsole.log(UID)\r\n\t\t\t\t\t\t\tgoToProfile(UID)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<img src={post.profilePhoto}/>\r\n\t\t\t\t\t\t\t<span>&#64;{post.author}</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t}*/}\r\n\r\n\t\t\t\t\t<button className={`toProfile`} onClick={()=> {\r\n\t\t\t\t\t\t\t// Below is for older posts which have _id and profile photo in\r\n\t\t\t\t\t\t\t// an object\r\n\t\t\t\t\t\t\tlet UID = post.owner._id;\r\n\t\t\t\t\t\t\tconsole.log(UID)\r\n\t\t\t\t\t\t\tgoToProfile(UID)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<img src={post.profilePhoto}/>\r\n\t\t\t\t\t\t\t<span>&#64;{post.author}</span>\r\n\t\t\t\t\t</button>\t\r\n\r\n\t\t\t\t\t<div className=\"textWrapper\" onClick={(e)=> {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tconsole.log(post)\r\n\r\n\t\t\t\t\t\tsetTimeout(()=> {\r\n\t\t\t\t\t\t\tnavigate(`/post/${post._id}`, {\r\n\t\t\t\t\t\t\t\tstate: {post: post}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, 600)\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<h2>{title}</h2>\r\n\t\t\t\t\t\t{content &&\r\n\t\t\t\t\t\t\t<p>{content}</p>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{post.content.some((data) => data.type == 'media') &&\r\n\t\t\t\t\t\t\t<ul id=\"thumbnailsWrapper\" onClick={(e)=> {\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\t\t\t\tlet gallery = post.content.filter(data => data.type === 'media')\r\n  \t\t\t\t\t\t\t\t\t.map(data => ({\r\n    \t\t\t\t\t\t\t\t\t...data,   // Spread existing properties\r\n    \t\t\t\t\t\t\t\t\tpostID: post._id \r\n  \t\t\t\t\t\t\t\t\t}));\r\n\r\n\t\t\t\t\t\t\t\tsetCurrent({\r\n\t\t\t\t\t\t\t\t\t...current,\r\n\t\t\t\t\t\t\t\t\tgallery: gallery\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{post.content.filter(data => data.type == 'media').map(data => (\r\n\t\t\t\t\t\t\t\t\t<li key={data._id}>\r\n\t\t\t\t\t\t\t\t\t\t<img loading=\"lazy\" src={data.content} />\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<ul id=\"details\">\r\n\t\t\t\t\t\t\t{tags > 0 &&\r\n\t\t\t\t\t\t\t\t<li>{tags} tags</li>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{post.commentCount > 0 &&\r\n\t\t\t\t\t\t\t\t<li>{post.commentCount} comments</li>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{post.taggedUsers.length > 0 &&\r\n\t\t\t\t\t\t\t\t<li>{post.taggedUsers.length} users tagged</li>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\tlet logRef = React.useRef();\r\n\tlet logRefC = logRef.current;\r\n\tlet isMounted = React.useRef(false);\r\n\r\n\t/* \r\n\t\tTracks position of selected post to return to \r\n\t    after viewing it in <Post>\r\n\t*/\r\n\tReact.useEffect(()=> {\r\n\r\n\t\tif(data.length && logRefC) {\r\n\t\t\tconsole.log(data.length)\r\n\t\t\tif(current.scrollTo) {\r\n\r\n\t\t\t\tif(current.monthChart == true) {\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if(data.length < 3) {\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} \r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\tlet post = Array.from(logRefC.children).filter(el => el.id == current.scrollTo);\r\n\t\t\t\t\tpost = post.pop();\r\n\t\t\t\t\tpost.scrollIntoView({behavior: \"smooth\"});\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\t// if(isMounted.current) {\r\n\t\t// if(logRefC) {\r\n\t\t// \t// let logRefC = logRef.current;\r\n\t\t// \tlet post = Array.from(logRefC.children).filter(el => el.id == current.scrollTo);\r\n\t\t// \tpost = post.pop()\r\n\r\n\t\t// \tif(current.scrollTo) {\r\n\t\t// \t\tconsole.log(post)\r\n\r\n\t\t// \t\tif(current.monthChart == true) {\r\n\t\t// \t\t\treturn;\r\n\t\t// \t\t}\r\n\t\t// \t\telse {\r\n\t\t// \t\t\t// \r\n\t\t// \t\t\tconsole.log(current.scrollTo)\r\n\t\t// \t\t\tlet post = Array.from(logRefC.children).filter(el => el.id == current.scrollTo);\r\n\t\t// \t\t\tpost = post.pop()\r\n\t\t// \t\t\tpost.scrollIntoView({behavior: \"smooth\"});\r\n\t\t// \t\t// \tconsole.log(post[0]);\r\n\t\t// \t\t}\r\n\t\t\t\t// else if(post.length < 3) {\r\n\t\t\t\t// \treturn;\r\n\t\t\t\t// } \r\n\t\t\t\t// else if(post.length > 3){\r\n\t\t\t\t// \t// let post = Array.from(logRefC.children).filter(el => el.id == current.scrollTo);\r\n\t\t\t\t// \tpost[0].scrollIntoView({behavior: \"smooth\"});\r\n\t\t\t\t// \tconsole.log(post[0]);\r\n\t\t\t\t// }\r\n\t\t// \t}\t\r\n\t\t// } \r\n\r\n\t\t// else {\r\n\t\t// \tif(data.length > 0) {\r\n\t\t// \t\tisMounted.current = true;\r\n\t\t// \t\tconsole.log(`isMounted now ${isMounted.current}`)\r\n\t\t// \t}\r\n\t\t// }\r\n\t}, [data])\r\n\r\n\r\n\treturn (\r\n\t\t<div className={\"log\"} ref={logRef}>\r\n\t\t\t{(data && data.length > 0) &&\r\n\t\t\t\tdata.map((post, index) => returnPostItem(post, index, _id))\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}