{"ast":null,"code":"var _jsxFileName = \"/home/jce/Web Dev Space/Syncsequence/frontEnd/src/components/base/customLogEditor/customLogEditor.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport './customLogEditor.css';\nimport APIaccess from '../../../apiaccess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst accessAPI = APIaccess();\nexport default function CustomLogEditor(_ref) {\n  _s();\n\n  let {\n    current,\n    setCurrent,\n    setSocketMessage,\n    socketMessage\n  } = _ref;\n  const userID = sessionStorage.getItem('userID');\n  const [currentLog, setCurrentLog] = React.useState(0);\n  const [logs, setLogs] = React.useState([]);\n  const [title, setTitle] = React.useState(\"\");\n  const [connections, setConnections] = React.useState([]);\n  const [subscriptions, setSubscriptions] = React.useState([]);\n  const [topics, setTopics] = React.useState([]);\n  const [tags, setTags] = React.useState([]);\n  const [showTopics, setShowTopics] = React.useState(false);\n  const [showTags, setShowTags] = React.useState(false);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [inputType, setInputType] = React.useState(\"\");\n  const [selectedLocations, setSelectedLocations] = React.useState([]);\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [isSearchFocused, setIsSearchFocused] = React.useState(false);\n  const [showDropdown, setShowDropdown] = React.useState({\n    connections: false,\n    subscriptions: false\n  });\n  const searchInputRef = React.useRef(null);\n\n  const getDataForSelections = async () => {\n    //happens whenever component appears\n    //get connections & subscriptions, one call\n    //get topics, one call\n    //get user's tags, one call\n    //add 'selected' field, push them into their respective states\n    let allConnects = await accessAPI.getConnections(userID);\n    let topics = await accessAPI.getSuggestions();\n    let userTags = await accessAPI.getUserTags();\n    let connections = [];\n    let subscriptions = [];\n    allConnects.forEach(user => {\n      user.selected = false;\n\n      if (user.isConnection == true) {\n        connections.push(user);\n      } else if (user.isSubscription == true) {\n        subscriptions.push(user);\n      }\n    });\n    topics = topics.map(topic => {\n      return {\n        name: topic,\n        selected: false,\n        id: topic\n      };\n    });\n    userTags.forEach(tag => {\n      tag.selected = false;\n    });\n    setConnections(connections);\n    setSubscriptions(subscriptions);\n    setTopics(topics);\n    setTags(userTags);\n  };\n\n  const setLogItems = async () => {\n    let amountOfLogs = await accessAPI.userSettings({\n      action: 'getLogAmount'\n    });\n    let array = [];\n\n    for (let i = 0; i < amountOfLogs; i++) {\n      array.push(i);\n    }\n\n    setLogs(array);\n  };\n\n  const updateLogItems = () => {\n    setLogs(logs => [...logs, logs.length + 1]);\n  };\n\n  const getCustomLog = async logNumber => {\n    //selecting a preexisting customLog triggers this\n    //when customLog is selected, compare all values from user's data in their states\n    //to the selections from the customLog, then updated the states to reflect selected\n    //options\n    //also changes sessionStorage.currentLog\n    let logInfo = await accessAPI.userSetting({\n      action: 'getCustomLog',\n      logNumber: logNumber\n    });\n    let updatedConnections = connections.map(user => ({ ...user,\n      selected: logInfo.connections.includes(user._id)\n    }));\n    let updatedSubscriptions = subscriptions.map(user => ({ ...user,\n      selected: logInfo.subscriptions.includes(user._id)\n    }));\n    let updatedTopics = topics.map(topic => ({ ...topic,\n      selected: logInfo.topics.includes(topic.name)\n    }));\n    let updatedTags = connections.map(tag => ({ ...tag,\n      selected: logInfo.tags.includes(tag._id)\n    }));\n    setConnections(updatedConnections);\n    setSubscriptions(updatedSubscriptions);\n    setTopics(updatedTopics);\n    setTags(updatedTags);\n    setSelectedLocations(logInfo.locations);\n    let updateCurrentLog = await accessAPI.userSetting({\n      action: 'setCurrentLog',\n      currentLog: logInfo.logNumber\n    });\n  };\n\n  const updateUsersCustomLogs = async data => {\n    //add all selected options from each group into new object\n    //send object to backend\n    //include log number\n    let selectedConnections = connections.filter(user => {\n      if (user.selected == true) {\n        return user._id;\n      }\n    });\n    let selectedSubscriptions = subscriptions.filter(user => {\n      if (user.selected == true) {\n        return user._id;\n      }\n    });\n    let selectedTags = tags.filter(tag => {\n      if (tag.selected == true) {\n        return tag._id;\n      }\n    });\n    let selectedTopics = topics.filter(topic => {\n      if (topic.selected == true) {\n        return topic.name;\n      }\n    }); //as of rn, selected locations are added straight into the selectedLocations \n    //state var\n\n    let request = await accessAPI.userSettings({\n      action: 'saveCustomLog',\n      logNumber: currentLog,\n      connections: selectedConnections,\n      subscriptions: selectedSubscriptions,\n      topics: selectedTopics,\n      tags: selectedTags,\n      locations: selectedLocations\n    });\n\n    if (request.confirmation == true) {\n      setSocketMessage({\n        type: 'simpleNotif',\n        message: `Custom log ${currentLog} updated !`\n      });\n    }\n  };\n\n  const setCustomLog = async logNumber => {\n    getCustomLog(logNumber);\n    setCurrentLog(logNumber);\n    setCurrent({ ...current,\n      log: logNumber\n    });\n    sessionStorage.setItem('currentLog', logNumber);\n  };\n\n  const toggleSelection = (id, type) => {\n    const setState = {\n      connections: setConnections,\n      subscriptions: setSubscriptions,\n      topics: setTopics,\n      tags: setTags\n    }[type];\n    setState(prev => prev.map(item => item.id === id ? { ...item,\n      selected: !item.selected\n    } : item));\n  };\n\n  const toggleList = type => {\n    if (type === \"topics\") setShowTopics(!showTopics);\n    if (type === \"tags\") setShowTags(!showTags);\n  };\n\n  const toggleDropdown = type => {\n    setShowDropdown(prev => ({ ...prev,\n      [type]: !prev[type]\n    }));\n  };\n\n  const getLocationSuggestions = async query => {\n    try {\n      // if(!query.trim()) {\n      // \tsetSearchResults([]);\n      // \treturn;\n      // }\n      // setLoadingResults(true)\n      const response = await accessAPI.userSettings({\n        option: 'searchLocation',\n        query: query\n      });\n\n      if (response.length > 0) {\n        setSearchResults(response);\n      } else {\n        throw new Error('Failed to fetch places');\n      }\n    } catch (err) {\n      console.error('Error fetching suggestions:', err); // setError(err.message);\n    } // finally {\n    // \tsetLoadingResults(false);\n    // }\n\n  };\n\n  const handleSearch = e => {\n    setInputType(e.nativeEvent.inputType);\n    setSearchTerm(e.target.value); // setIsSearchFocused(true);\n  };\n\n  const selectLocation = location => {\n    if (!selectedLocations.includes(location.description)) {\n      setSelectedLocations([...selectedLocations, location]);\n    }\n\n    setSearchTerm(\"\");\n    setSearchResults([]);\n  };\n\n  const removeLocation = location => {\n    setSelectedLocations(selectedLocations.filter(loc => loc.description !== location));\n  };\n\n  React.useEffect(() => {\n    getDataForSelections();\n    setLogItems();\n  }, []);\n  React.useEffect(() => {\n    if (inputType === \"deleteContentBackward\") {\n      return;\n    }\n\n    if (searchTerm.length < 2) {\n      // console.log('empty')\n      setSearchResults([]);\n      return;\n    }\n\n    getLocationSuggestions(searchTerm);\n  }, [searchTerm]);\n  /* Determine Component Height on Load*/\n\n  let wrapper = React.useRef();\n  React.useEffect(() => {\n    let viewportHeight = window.innerHeight;\n    let maxHeight = viewportHeight - 160;\n    wrapper.current.style.height = `${maxHeight}px`;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"customLogEditor\",\n    ref: wrapper,\n    className: `${current.transition == true ? 'leave' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"logListWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"logList\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${currentLog == 0 ? 'selected' : ''}`,\n          onClick: () => {\n            setCustomLog(0);\n          },\n          children: \"User Only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 6\n        }, this), logs.map(num => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${currentLog == num ? 'selected' : ''}`,\n          onClick: () => {\n            setCustomLog(num);\n          },\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateLogItems,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 4\n    }, this), currentLog == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"userOnlyNotice\",\n      children: \"This feed is for a user's own posts. Click the + button in the upper right corner of this panel to create a new custom feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }, this), currentLog > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"fieldsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        placeholder: `Custom Log #${currentLog}`,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        onClick: () => toggleDropdown(\"connections\"),\n        children: [\"Connections: \", connections.filter(item => item.selected).length, \" selected\", showDropdown.connections ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u25B2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), showDropdown.connections && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown\",\n        children: connections.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => toggleSelection(item.id, \"connections\"),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.selected,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 19\n          }, this), item.userName]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        onClick: () => toggleDropdown(\"subscriptions\"),\n        children: [\"Subscriptions: \", subscriptions.filter(item => item.selected).length, \" selected\", showDropdown.subscriptions ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u25B2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), showDropdown.subscriptions && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown\",\n        children: subscriptions.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => toggleSelection(item.id, \"subscriptions\"),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.selected,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 19\n          }, this), item.userName]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"listToggle\",\n        onClick: () => toggleList(\"topics\"),\n        children: [\"Topics: \", topics.filter(item => item.selected).length, \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), showTopics && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"rows\",\n        children: topics.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => toggleSelection(item.id, \"topics\"),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.selected,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 19\n          }, this), item.name]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"listToggle\",\n        onClick: () => toggleList(\"tags\"),\n        children: [\"Tags: \", tags.filter(item => item.selected).length, \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), showTags && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"rows\",\n        children: tags.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => toggleSelection(item.id, \"tags\"),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.selected,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 19\n          }, this), item.name]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"searchWrapper\",\n        children: !isSearchFocused ? /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: () => {\n            setIsSearchFocused(true);\n            setTimeout(() => {\n              var _searchInputRef$curre;\n\n              (_searchInputRef$curre = searchInputRef.current) === null || _searchInputRef$curre === void 0 ? void 0 : _searchInputRef$curre.focus();\n            }, 0);\n          },\n          children: [\"Locations: \", selectedLocations.length, \" selected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: searchInputRef,\n          type: \"text\",\n          value: searchTerm,\n          onChange: handleSearch,\n          placeholder: \"Search City or Country\",\n          onBlur: () => {\n            setTimeout(() => {\n              setIsSearchFocused(false);\n              setSearchResults([]);\n            }, 500);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), isSearchFocused && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"header\",\n          children: \"Selected Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 15\n        }, this), selectedLocations.map((loc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => removeLocation(loc.description),\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: loc.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 18\n          }, this)\n        }, `saved-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"header\",\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }, this), searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectLocation(result),\n          children: result.description\n        }, `result-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttonWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `buttonDefault`,\n          children: \"Save & Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomLogEditor, \"pHo50j7Wly3n4AeQmna63URujX0=\");\n\n_c = CustomLogEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomLogEditor\");","map":{"version":3,"names":["React","APIaccess","accessAPI","CustomLogEditor","current","setCurrent","setSocketMessage","socketMessage","userID","sessionStorage","getItem","currentLog","setCurrentLog","useState","logs","setLogs","title","setTitle","connections","setConnections","subscriptions","setSubscriptions","topics","setTopics","tags","setTags","showTopics","setShowTopics","showTags","setShowTags","searchTerm","setSearchTerm","inputType","setInputType","selectedLocations","setSelectedLocations","searchResults","setSearchResults","isSearchFocused","setIsSearchFocused","showDropdown","setShowDropdown","searchInputRef","useRef","getDataForSelections","allConnects","getConnections","getSuggestions","userTags","getUserTags","forEach","user","selected","isConnection","push","isSubscription","map","topic","name","id","tag","setLogItems","amountOfLogs","userSettings","action","array","i","updateLogItems","length","getCustomLog","logNumber","logInfo","userSetting","updatedConnections","includes","_id","updatedSubscriptions","updatedTopics","updatedTags","locations","updateCurrentLog","updateUsersCustomLogs","data","selectedConnections","filter","selectedSubscriptions","selectedTags","selectedTopics","request","confirmation","type","message","setCustomLog","log","setItem","toggleSelection","setState","prev","item","toggleList","toggleDropdown","getLocationSuggestions","query","response","option","Error","err","console","error","handleSearch","e","nativeEvent","target","value","selectLocation","location","description","removeLocation","loc","useEffect","wrapper","viewportHeight","window","innerHeight","maxHeight","style","height","transition","num","userName","setTimeout","focus","index","result"],"sources":["/home/jce/Web Dev Space/Syncsequence/frontEnd/src/components/base/customLogEditor/customLogEditor.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport './customLogEditor.css';\r\nimport APIaccess from '../../../apiaccess';\r\n\r\n\r\nconst accessAPI = APIaccess(); \r\n\r\nexport default function CustomLogEditor({current, setCurrent, setSocketMessage, socketMessage}) {\r\n\r\n\tconst userID = sessionStorage.getItem('userID');\r\n\tconst [currentLog, setCurrentLog] = React.useState(0);\r\n\tconst [logs, setLogs] = React.useState([]);\r\n\tconst [title, setTitle] = React.useState(\"\");\r\n  \tconst [connections, setConnections] = React.useState([]);\r\n  \tconst [subscriptions, setSubscriptions] = React.useState([]);\r\n  \tconst [topics, setTopics] = React.useState([]);\r\n  \tconst [tags, setTags] = React.useState([]);\r\n  \tconst [showTopics, setShowTopics] = React.useState(false);\r\n  \tconst [showTags, setShowTags] = React.useState(false);\r\n  \tconst [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  \tconst [inputType, setInputType] = React.useState(\"\");\r\n  \tconst [selectedLocations, setSelectedLocations] = React.useState([]);\r\n  \tconst [searchResults, setSearchResults] = React.useState([]);\r\n  \tconst [isSearchFocused, setIsSearchFocused] = React.useState(false);\r\n  \tconst [showDropdown, setShowDropdown] = React.useState({\r\n\t    connections: false,\r\n\t    subscriptions: false\r\n\t});\r\n\tconst searchInputRef = React.useRef(null);\r\n\r\n  \tconst getDataForSelections = async() => {\r\n  \t\t//happens whenever component appears\r\n\r\n  \t\t//get connections & subscriptions, one call\r\n  \t\t//get topics, one call\r\n  \t\t//get user's tags, one call\r\n\r\n  \t\t//add 'selected' field, push them into their respective states\r\n  \t\tlet allConnects = await accessAPI.getConnections(userID);\r\n  \t\tlet topics = await accessAPI.getSuggestions();\r\n\t\tlet userTags = await accessAPI.getUserTags();\r\n\r\n\t\tlet connections = [];\r\n\t\tlet subscriptions = [];\r\n\r\n\t\tallConnects.forEach(user => {\r\n\t\t\tuser.selected = false;\r\n\r\n\t\t\tif(user.isConnection == true) {\r\n\t\t\t\tconnections.push(user)\r\n\t\t\t}\r\n\t\t\telse if(user.isSubscription == true) {\r\n\t\t\t\tsubscriptions.push(user)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\ttopics = topics.map(topic => {\r\n\t\t\treturn {\r\n\t\t\t\tname: topic,\r\n\t\t\t\tselected: false,\r\n\t\t\t\tid: topic\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tuserTags.forEach(tag => {\r\n\t\t\ttag.selected = false;\r\n\t\t})\r\n\r\n\t\tsetConnections(connections);\r\n\t\tsetSubscriptions(subscriptions);\r\n\t\tsetTopics(topics);\r\n\t\tsetTags(userTags);\r\n  \t}\r\n\r\n  \tconst setLogItems = async() => {\r\n\r\n  \t\tlet amountOfLogs = await accessAPI.userSettings({action: 'getLogAmount'});\r\n\r\n  \t\tlet array = [];\r\n  \t\tfor(let i = 0; i < amountOfLogs; i++) {\r\n  \t\t\tarray.push(i);\r\n  \t\t}\r\n\r\n  \t\tsetLogs(array);\r\n  \t}\r\n\r\n  \tconst updateLogItems = () => {\r\n  \t\tsetLogs(logs => [...logs, logs.length + 1]);\r\n  \t}\r\n\r\n  \tconst getCustomLog = async(logNumber) => {\r\n  \t\t//selecting a preexisting customLog triggers this\r\n\r\n  \t\t//when customLog is selected, compare all values from user's data in their states\r\n  \t\t//to the selections from the customLog, then updated the states to reflect selected\r\n  \t\t//options\r\n\r\n \t\t//also changes sessionStorage.currentLog\r\n \t\tlet logInfo = await accessAPI.userSetting({action: 'getCustomLog', logNumber: logNumber});\r\n\r\n \t\tlet updatedConnections = connections.map(user => ({\r\n \t\t\t...user,\r\n \t\t\tselected: logInfo.connections.includes(user._id)\r\n \t\t}))\r\n\r\n \t\tlet updatedSubscriptions = subscriptions.map(user => ({\r\n \t\t\t...user,\r\n \t\t\tselected: logInfo.subscriptions.includes(user._id)\r\n \t\t}))\r\n\r\n \t\tlet updatedTopics = topics.map(topic => ({\r\n \t\t\t...topic,\r\n \t\t\tselected: logInfo.topics.includes(topic.name)\r\n \t\t}))\r\n\r\n \t\tlet updatedTags = connections.map(tag => ({\r\n \t\t\t...tag,\r\n \t\t\tselected: logInfo.tags.includes(tag._id)\r\n \t\t}))\r\n\r\n \t\tsetConnections(updatedConnections);\r\n \t\tsetSubscriptions(updatedSubscriptions);\r\n \t\tsetTopics(updatedTopics);\r\n \t\tsetTags(updatedTags);\r\n \t\tsetSelectedLocations(logInfo.locations)\r\n\r\n \t\tlet updateCurrentLog = await accessAPI.userSetting({\r\n \t\t\taction: 'setCurrentLog', \r\n \t\t\tcurrentLog: logInfo.logNumber\r\n \t\t})\r\n  \t}\r\n\r\n  \tconst updateUsersCustomLogs = async(data) => {\r\n\r\n  \t\t//add all selected options from each group into new object\r\n\r\n  \t\t//send object to backend\r\n\r\n  \t\t//include log number\r\n\r\n  \t\tlet selectedConnections = connections.filter(user => {\r\n  \t\t\tif(user.selected == true) {\r\n  \t\t\t\treturn user._id;\r\n  \t\t\t}\r\n  \t\t});\r\n\r\n  \t\tlet selectedSubscriptions = subscriptions.filter(user => {\r\n  \t\t\tif(user.selected == true) {\r\n  \t\t\t\treturn user._id;\r\n  \t\t\t}\r\n  \t\t});\r\n\r\n  \t\tlet selectedTags = tags.filter(tag => {\r\n  \t\t\tif(tag.selected == true) {\r\n  \t\t\t\treturn tag._id;\r\n  \t\t\t}\r\n  \t\t});\r\n\r\n  \t\tlet selectedTopics = topics.filter(topic => {\r\n  \t\t\tif(topic.selected == true) {\r\n  \t\t\t\treturn topic.name;\r\n  \t\t\t}\r\n  \t\t})\r\n\r\n  \t\t//as of rn, selected locations are added straight into the selectedLocations \r\n  \t\t//state var\r\n\r\n  \t\tlet request = await accessAPI.userSettings({\r\n  \t\t\taction: 'saveCustomLog',\r\n  \t\t\tlogNumber: currentLog,\r\n  \t\t\tconnections: selectedConnections,\r\n  \t\t\tsubscriptions: selectedSubscriptions,\r\n  \t\t\ttopics: selectedTopics,\r\n  \t\t\ttags: selectedTags,\r\n  \t\t\tlocations: selectedLocations\r\n  \t\t})\r\n\r\n  \t\tif(request.confirmation == true) {\r\n  \t\t\tsetSocketMessage({\r\n  \t\t\t\ttype: 'simpleNotif',\r\n  \t\t\t\tmessage: `Custom log ${currentLog} updated !`\r\n  \t\t\t})\r\n  \t\t}\r\n  \t}\r\n\r\n  \tconst setCustomLog = async(logNumber) => {\r\n\r\n  \t\tgetCustomLog(logNumber);\r\n  \t\tsetCurrentLog(logNumber);\r\n  \t\tsetCurrent({\r\n  \t\t\t...current,\r\n  \t\t\tlog: logNumber\r\n  \t\t})\r\n  \t\tsessionStorage.setItem('currentLog', logNumber);\r\n  \t}\r\n\r\n\r\n\r\n  \tconst toggleSelection = (id, type) => {\r\n\t    const setState = {\r\n\t      connections: setConnections,\r\n\t      subscriptions: setSubscriptions,\r\n\t      topics: setTopics,\r\n\t      tags: setTags\r\n\t    }[type];\r\n\r\n\t    setState(prev =>\r\n\t      prev.map(item =>\r\n\t        item.id === id ? { ...item, selected: !item.selected } : item\r\n\t      )\r\n\t    );\r\n\t};\r\n\r\n\tconst toggleList = (type) => {\r\n\t    if (type === \"topics\") setShowTopics(!showTopics);\r\n\t    if (type === \"tags\") setShowTags(!showTags);\r\n\t};\r\n\r\n\tconst toggleDropdown = (type) => {\r\n\t    setShowDropdown(prev => ({\r\n\t      ...prev,\r\n\t      [type]: !prev[type]\r\n\t    }));\r\n\t};\r\n\r\n  \tconst getLocationSuggestions = async(query) => {\r\n  \t\ttry {\r\n  \t\t\t// if(!query.trim()) {\r\n  \t\t\t// \tsetSearchResults([]);\r\n  \t\t\t// \treturn;\r\n  \t\t\t// }\r\n\r\n  \t\t\t// setLoadingResults(true)\r\n  \t\t\tconst response = await accessAPI.userSettings({\r\n  \t\t\t\toption: 'searchLocation',\r\n  \t\t\t\tquery: query\r\n  \t\t\t});\r\n\r\n  \t\t\tif(response.length > 0) {\r\n  \t\t\t\tsetSearchResults(response);\r\n  \t\t\t}\r\n  \t\t\telse {\r\n  \t\t\t\tthrow new Error('Failed to fetch places');\r\n  \t\t\t}\r\n\r\n  \t\t}\r\n  \t\tcatch (err) {\r\n  \t\t\tconsole.error('Error fetching suggestions:', err);\r\n      \t\t// setError(err.message);\r\n  \t\t}\r\n  \t\t// finally {\r\n  \t\t// \tsetLoadingResults(false);\r\n  \t\t// }\r\n  \t}\r\n\r\n  \tconst handleSearch = (e) => {\r\n  \t\tsetInputType(e.nativeEvent.inputType);\r\n  \t\tsetSearchTerm(e.target.value)\r\n  \t\t// setIsSearchFocused(true);\r\n  \t}\r\n\r\n  \tconst selectLocation = (location) => {\r\n\t    if (!selectedLocations.includes(location.description)) {\r\n\t      setSelectedLocations([...selectedLocations, location]);\r\n\t    }\r\n\t    setSearchTerm(\"\");\r\n\t    setSearchResults([]);\r\n\t};\r\n\r\n\tconst removeLocation = (location) => {\r\n\t\tsetSelectedLocations(selectedLocations.filter((loc) => loc.description !== location));\r\n\t}\r\n\r\n  \tReact.useEffect(()=> {\r\n\r\n  \t\tgetDataForSelections();\r\n  \t\tsetLogItems();\r\n\r\n  \t}, [])\r\n\r\n  \tReact.useEffect(()=> {\r\n  \t\tif (inputType === \"deleteContentBackward\") {\r\n\t      \treturn;\r\n\t    }\r\n\r\n  \t\tif(searchTerm.length < 2) {\r\n  \t\t\t// console.log('empty')\r\n  \t\t\tsetSearchResults([]);\r\n  \t\t\treturn;\r\n  \t\t}\r\n\r\n  \t\tgetLocationSuggestions(searchTerm)\r\n  \t}, [searchTerm])\r\n\r\n\r\n\t/* Determine Component Height on Load*/\r\n\tlet wrapper = React.useRef();\r\n\tReact.useEffect(()=> {\r\n\t\tlet viewportHeight = window.innerHeight;\r\n\t\tlet maxHeight = viewportHeight - 160;\r\n\t\twrapper.current.style.height = `${maxHeight}px`;\r\n\t}, [])\r\n\r\n\treturn <div id=\"customLogEditor\" \r\n\t\t\tref={wrapper} \r\n\t\t\tclassName={`${current.transition == true ? 'leave' : ''}`}>\r\n\t\t\r\n\t\t\t<div id=\"logListWrapper\">\r\n\t\t\t\t\r\n\t\t\t\t<ul id=\"logList\">\r\n\r\n\t\t\t\t\t<li className={`${currentLog == 0 ? 'selected' : ''}`}onClick={()=> { setCustomLog(0) }}>User Only</li>\r\n\r\n\t\t\t\t\t{logs.map(num => (\r\n\t\t\t\t\t\t<li key={num}\r\n\t\t\t\t\t\t\tclassName={`${currentLog == num ? 'selected' : ''}`} \r\n\t\t\t\t\t\t\tonClick={()=> {setCustomLog(num)}}>{num}</li>\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<button onClick={updateLogItems}>+</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/*U S E R  O N L Y  N O T I C E*/}\r\n\t\t\t{currentLog == 0 &&\r\n\t\t\t\t<div id=\"userOnlyNotice\">\r\n\t\t\t\t\tThis feed is for a user's own posts. Click the + button in the upper right corner of \r\n\t\t\t\t\tthis panel to create a new custom feed\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t{/*L O G  E D I T O R*/}\r\n\t\t\t{currentLog > 0 &&\r\n\t\t\t\t<div id=\"fieldsWrapper\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t        type=\"text\"\r\n\t\t\t\t        placeholder={`Custom Log #${currentLog}`}\r\n\t\t\t\t        value={title}\r\n\t\t\t\t        onChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t      />\r\n\r\n\t\t\t\t    {/*\r\n\t\t\t\t    \tC o n n e c t i o n s\r\n\t\t\t\t    */}\r\n\t\t\t\t    <label onClick={() => toggleDropdown(\"connections\")}>\r\n\t\t\t\t        Connections: {connections.filter(item => item.selected).length} selected\r\n\t\t\t\t        {showDropdown.connections ? <span>▲</span> : <span>▼</span>}\r\n\t\t\t\t    </label>\r\n\t\t\t\t   \t{showDropdown.connections &&\r\n\t\t\t\t   \t\t<ul className=\"dropdown\">\r\n\t\t\t\t          {connections.map(item => (\r\n\t\t\t\t            <li key={item.id} onClick={() => toggleSelection(item.id, \"connections\")}>\r\n\t\t\t\t              <input type=\"checkbox\" checked={item.selected} readOnly />\r\n\t\t\t\t              {item.userName}\r\n\t\t\t\t            </li>\r\n\t\t\t\t          ))}\r\n\t\t\t\t        </ul>\r\n\t\t\t\t   \t}\r\n\r\n\t\t\t\t   \t{/*\r\n\t\t\t\t   \t\tS u b s c r i p t i o n s \r\n\t\t\t\t   \t*/}\r\n\t\t\t\t   \t<label onClick={() => toggleDropdown(\"subscriptions\")}>\r\n\t\t\t\t        Subscriptions: {subscriptions.filter(item => item.selected).length} selected \r\n\t\t\t\t        {showDropdown.subscriptions ? <span>▲</span> : <span>▼</span>}\r\n\t\t\t\t    </label>\r\n\t\t\t\t      {showDropdown.subscriptions && (\r\n\t\t\t\t        <ul className=\"dropdown\">\r\n\t\t\t\t          {subscriptions.map(item => (\r\n\t\t\t\t            <li key={item.id} onClick={() => toggleSelection(item.id, \"subscriptions\")}>\r\n\t\t\t\t              <input type=\"checkbox\" checked={item.selected} readOnly />\r\n\t\t\t\t              {item.userName}\r\n\t\t\t\t            </li>\r\n\t\t\t\t          ))}\r\n\t\t\t\t        </ul>\r\n\t\t\t\t      )}\r\n\r\n\t\t\t\t    {/* \r\n\t\t\t\t    \tTopics Toggle List \r\n\t\t\t\t    */}\r\n\t\t\t\t    <button className=\"listToggle\" onClick={() => toggleList(\"topics\")}>\r\n\t\t\t\t        Topics: {topics.filter(item => item.selected).length} selected\r\n\t\t\t\t    </button>\r\n\t\t\t\t    {showTopics && (\r\n\t\t\t\t        <ul className=\"rows\">\r\n\t\t\t\t          {topics.map(item => (\r\n\t\t\t\t            <li key={item.id} onClick={() => toggleSelection(item.id, \"topics\")}>\r\n\t\t\t\t              <input type=\"checkbox\" checked={item.selected} readOnly />\r\n\t\t\t\t              {item.name}\r\n\t\t\t\t            </li>\r\n\t\t\t\t          ))}\r\n\t\t\t\t        </ul>\r\n\t\t\t\t    )}\r\n\r\n\r\n\t\t\t\t    {/* Tags Toggle List */}\r\n\t\t\t\t    <button className=\"listToggle\" onClick={() => toggleList(\"tags\")}>\r\n\t\t\t\t        Tags: {tags.filter(item => item.selected).length} selected\r\n\t\t\t\t    </button>\r\n\t\t\t\t    {showTags && (\r\n\t\t\t\t        <ul className=\"rows\">\r\n\t\t\t\t          {tags.map(item => (\r\n\t\t\t\t            <li key={item.id} onClick={() => toggleSelection(item.id, \"tags\")}>\r\n\t\t\t\t              <input type=\"checkbox\" checked={item.selected} readOnly />\r\n\t\t\t\t              {item.name}\r\n\t\t\t\t            </li>\r\n\t\t\t\t          ))}\r\n\t\t\t\t        </ul>\r\n\t\t\t\t    )}\r\n\r\n\r\n\t\t\t\t    {/* Location Search */}\r\n\r\n\t\t\t\t    <div id=\"searchWrapper\">\r\n\t\t\t\t\t    {!isSearchFocused ? (\r\n\t\t\t\t\t    \t<label onClick={() => {\r\n\t\t\t\t\t    \t\tsetIsSearchFocused(true)\r\n\t\t\t\t\t    \t\tsetTimeout(()=> {\r\n\t\t\t\t\t    \t\t\tsearchInputRef.current?.focus()\r\n\t\t\t\t\t    \t\t}, 0)\r\n\t\t\t\t\t    \t}}>\r\n\t\t\t\t\t\t        Locations: {selectedLocations.length} selected\r\n\t\t\t\t\t\t    </label>\r\n\r\n\t\t\t\t\t    ) : (\r\n\t\t\t\t\t    \t<input\r\n\t\t\t\t\t    \t\tref={searchInputRef}\r\n\t\t\t\t\t\t        type=\"text\"\r\n\t\t\t\t\t\t        value={searchTerm}\r\n\t\t\t\t\t\t        onChange={handleSearch}\r\n\t\t\t\t\t\t        placeholder=\"Search City or Country\"\r\n\t\t\t\t\t\t        onBlur={()=> {\r\n\t\t\t\t\t\t        \tsetTimeout(()=> {\r\n\t\t\t\t\t\t        \t\tsetIsSearchFocused(false)\r\n\t\t\t\t\t\t        \t\tsetSearchResults([]);\r\n\t\t\t\t\t\t        \t}, 500)\r\n\t\t\t\t\t\t        }}\r\n\t\t\t\t\t\t    />\r\n\t\t\t\t\t   \t)}\r\n\t\t\t\t   \t</div>\r\n\t\t\t\t    {(isSearchFocused && searchResults.length > 0) && \r\n\t\t\t\t        <ul className=\"dropdown\">\r\n\r\n\t\t\t\t          <li className=\"header\">Selected Locations</li>\r\n\t\t\t\t          {selectedLocations.map((loc, index) => (\r\n\t\t\t\t            <li key={`saved-${index}`}\r\n\t\t\t\t            \tonClick={()=> removeLocation(loc.description)}>\r\n\t\t\t\t            \t<strong>{loc.description}</strong>\r\n\t\t\t\t            </li>\r\n\t\t\t\t          ))}\r\n\r\n\t\t\t\t          <hr />\r\n\r\n\t\t\t\t          <li className=\"header\">Search Results</li>\r\n\t\t\t\t          {searchResults.map((result, index) => (\r\n\t\t\t\t            <li key={`result-${index}`} onClick={() => selectLocation(result)}>\r\n\t\t\t\t              {result.description}\r\n\t\t\t\t            </li>\r\n\t\t\t\t          ))}\r\n\t\t\t\t        </ul>\r\n\t\t\t\t    }\r\n\r\n\r\n\t\t\t\t    <div id=\"buttonWrapper\">\r\n\t\t\t\t    \t<button className={`buttonDefault`}>Delete</button>\r\n\t\t\t\t    \t<button className={`buttonDefault`}>Save & Exit</button>\r\n\t\t\t\t    </div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t</div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}