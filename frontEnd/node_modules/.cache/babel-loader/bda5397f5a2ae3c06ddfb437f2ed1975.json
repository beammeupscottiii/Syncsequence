{"ast":null,"code":"/**\n * @module color-parse\n */\nimport names from 'color-name';\nexport default parse;\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\n\nvar baseHues = {\n  red: 0,\n  orange: 60,\n  yellow: 120,\n  green: 180,\n  blue: 240,\n  purple: 300\n};\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\n\nfunction parse(cstr) {\n  var m,\n      parts = [],\n      alpha = 1,\n      space; //numeric case\n\n  if (typeof cstr === 'number') {\n    return {\n      space: 'rgb',\n      values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff],\n      alpha: 1\n    };\n  }\n\n  if (typeof cstr === 'number') return {\n    space: 'rgb',\n    values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff],\n    alpha: 1\n  };\n  cstr = String(cstr).toLowerCase(); //keyword\n\n  if (names[cstr]) {\n    parts = names[cstr].slice();\n    space = 'rgb';\n  } //reserved words\n  else if (cstr === 'transparent') {\n    alpha = 0;\n    space = 'rgb';\n    parts = [0, 0, 0];\n  } //hex\n  else if (cstr[0] === '#') {\n    var base = cstr.slice(1);\n    var size = base.length;\n    var isShort = size <= 4;\n    alpha = 1;\n\n    if (isShort) {\n      parts = [parseInt(base[0] + base[0], 16), parseInt(base[1] + base[1], 16), parseInt(base[2] + base[2], 16)];\n\n      if (size === 4) {\n        alpha = parseInt(base[3] + base[3], 16) / 255;\n      }\n    } else {\n      parts = [parseInt(base[0] + base[1], 16), parseInt(base[2] + base[3], 16), parseInt(base[4] + base[5], 16)];\n\n      if (size === 8) {\n        alpha = parseInt(base[6] + base[7], 16) / 255;\n      }\n    }\n\n    if (!parts[0]) parts[0] = 0;\n    if (!parts[1]) parts[1] = 0;\n    if (!parts[2]) parts[2] = 0;\n    space = 'rgb';\n  } // color space\n  else if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n    var name = m[1];\n    space = name.replace(/a$/, '');\n    var dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3;\n    parts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/); // color(srgb-linear x x x) -> srgb-linear(x x x)\n\n    if (space === 'color') space = parts.shift();\n    parts = parts.map(function (x, i) {\n      //<percentage>\n      if (x[x.length - 1] === '%') {\n        x = parseFloat(x) / 100; // alpha -> 0..1\n\n        if (i === 3) return x; // rgb -> 0..255\n\n        if (space === 'rgb') return x * 255; // hsl, hwb H -> 0..100\n\n        if (space[0] === 'h') return x * 100; // lch, lab L -> 0..100\n\n        if (space[0] === 'l' && !i) return x * 100; // lab A B -> -125..125\n\n        if (space === 'lab') return x * 125; // lch C -> 0..150, H -> 0..360\n\n        if (space === 'lch') return i < 2 ? x * 150 : x * 360; // oklch/oklab L -> 0..1\n\n        if (space[0] === 'o' && !i) return x; // oklab A B -> -0.4..0.4\n\n        if (space === 'oklab') return x * 0.4; // oklch C -> 0..0.4, H -> 0..360\n\n        if (space === 'oklch') return i < 2 ? x * 0.4 : x * 360; // color(xxx) -> 0..1\n\n        return x;\n      } //hue\n\n\n      if (space[i] === 'h' || i === 2 && space[space.length - 1] === 'h') {\n        //<base-hue>\n        if (baseHues[x] !== undefined) return baseHues[x]; //<deg>\n\n        if (x.endsWith('deg')) return parseFloat(x); //<turn>\n\n        if (x.endsWith('turn')) return parseFloat(x) * 360;\n        if (x.endsWith('grad')) return parseFloat(x) * 360 / 400;\n        if (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI;\n      }\n\n      if (x === 'none') return 0;\n      return parseFloat(x);\n    });\n    alpha = parts.length > dims ? parts.pop() : 1;\n  } //named channels case\n  else if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n    parts = cstr.match(/([0-9]+)/g).map(function (value) {\n      return parseFloat(value);\n    });\n    space = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb';\n  }\n\n  return {\n    space,\n    values: parts,\n    alpha\n  };\n}","map":{"version":3,"names":["names","parse","baseHues","red","orange","yellow","green","blue","purple","cstr","m","parts","alpha","space","values","String","toLowerCase","slice","base","size","length","isShort","parseInt","exec","name","replace","dims","trim","split","shift","map","x","i","parseFloat","undefined","endsWith","Math","PI","pop","test","match","value","join"],"sources":["/home/jce/Web Dev Space/Syncsequence/frontEnd/node_modules/color-parse/index.js"],"sourcesContent":["/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAeC,KAAf;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG;EACdC,GAAG,EAAE,CADS;EAEdC,MAAM,EAAE,EAFM;EAGdC,MAAM,EAAE,GAHM;EAIdC,KAAK,EAAE,GAJO;EAKdC,IAAI,EAAE,GALQ;EAMdC,MAAM,EAAE;AANM,CAAf;AASA;AACA;AACA;AACA;AACA;;AACA,SAASP,KAAT,CAAeQ,IAAf,EAAqB;EACpB,IAAIC,CAAJ;EAAA,IAAOC,KAAK,GAAG,EAAf;EAAA,IAAmBC,KAAK,GAAG,CAA3B;EAAA,IAA8BC,KAA9B,CADoB,CAGpB;;EACA,IAAI,OAAOJ,IAAP,KAAgB,QAApB,EAA8B;IAC7B,OAAO;MAAEI,KAAK,EAAE,KAAT;MAAgBC,MAAM,EAAE,CAACL,IAAI,KAAK,EAAV,EAAc,CAACA,IAAI,GAAG,QAAR,MAAsB,CAApC,EAAuCA,IAAI,GAAG,QAA9C,CAAxB;MAAiFG,KAAK,EAAE;IAAxF,CAAP;EACA;;EACD,IAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B,OAAO;IAAEI,KAAK,EAAE,KAAT;IAAgBC,MAAM,EAAE,CAACL,IAAI,KAAK,EAAV,EAAc,CAACA,IAAI,GAAG,QAAR,MAAsB,CAApC,EAAuCA,IAAI,GAAG,QAA9C,CAAxB;IAAiFG,KAAK,EAAE;EAAxF,CAAP;EAE9BH,IAAI,GAAGM,MAAM,CAACN,IAAD,CAAN,CAAaO,WAAb,EAAP,CAToB,CAWpB;;EACA,IAAIhB,KAAK,CAACS,IAAD,CAAT,EAAiB;IAChBE,KAAK,GAAGX,KAAK,CAACS,IAAD,CAAL,CAAYQ,KAAZ,EAAR;IACAJ,KAAK,GAAG,KAAR;EACA,CAHD,CAKA;EALA,KAMK,IAAIJ,IAAI,KAAK,aAAb,EAA4B;IAChCG,KAAK,GAAG,CAAR;IACAC,KAAK,GAAG,KAAR;IACAF,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAR;EACA,CAJI,CAML;EANK,KAOA,IAAIF,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;IACzB,IAAIS,IAAI,GAAGT,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAX;IACA,IAAIE,IAAI,GAAGD,IAAI,CAACE,MAAhB;IACA,IAAIC,OAAO,GAAGF,IAAI,IAAI,CAAtB;IACAP,KAAK,GAAG,CAAR;;IAEA,IAAIS,OAAJ,EAAa;MACZV,KAAK,GAAG,CACPW,QAAQ,CAACJ,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,EAAoB,EAApB,CADD,EAEPI,QAAQ,CAACJ,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,EAAoB,EAApB,CAFD,EAGPI,QAAQ,CAACJ,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,EAAoB,EAApB,CAHD,CAAR;;MAKA,IAAIC,IAAI,KAAK,CAAb,EAAgB;QACfP,KAAK,GAAGU,QAAQ,CAACJ,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,EAAoB,EAApB,CAAR,GAAkC,GAA1C;MACA;IACD,CATD,MAUK;MACJP,KAAK,GAAG,CACPW,QAAQ,CAACJ,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,EAAoB,EAApB,CADD,EAEPI,QAAQ,CAACJ,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,EAAoB,EAApB,CAFD,EAGPI,QAAQ,CAACJ,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,EAAoB,EAApB,CAHD,CAAR;;MAKA,IAAIC,IAAI,KAAK,CAAb,EAAgB;QACfP,KAAK,GAAGU,QAAQ,CAACJ,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAf,EAAoB,EAApB,CAAR,GAAkC,GAA1C;MACA;IACD;;IAED,IAAI,CAACP,KAAK,CAAC,CAAD,CAAV,EAAeA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX;IACf,IAAI,CAACA,KAAK,CAAC,CAAD,CAAV,EAAeA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX;IACf,IAAI,CAACA,KAAK,CAAC,CAAD,CAAV,EAAeA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX;IAEfE,KAAK,GAAG,KAAR;EACA,CAhCI,CAkCL;EAlCK,KAmCA,IAAIH,CAAC,GAAG,yGAAyGa,IAAzG,CAA8Gd,IAA9G,CAAR,EAA6H;IACjI,IAAIe,IAAI,GAAGd,CAAC,CAAC,CAAD,CAAZ;IACAG,KAAK,GAAGW,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAR;IACA,IAAIC,IAAI,GAAGb,KAAK,KAAK,MAAV,GAAmB,CAAnB,GAAuBA,KAAK,KAAK,MAAV,GAAmB,CAAnB,GAAuB,CAAzD;IACAF,KAAK,GAAGD,CAAC,CAAC,CAAD,CAAD,CAAKiB,IAAL,GAAYC,KAAZ,CAAkB,iBAAlB,CAAR,CAJiI,CAMjI;;IACA,IAAIf,KAAK,KAAK,OAAd,EAAuBA,KAAK,GAAGF,KAAK,CAACkB,KAAN,EAAR;IAEvBlB,KAAK,GAAGA,KAAK,CAACmB,GAAN,CAAU,UAAUC,CAAV,EAAaC,CAAb,EAAgB;MACjC;MACA,IAAID,CAAC,CAACA,CAAC,CAACX,MAAF,GAAW,CAAZ,CAAD,KAAoB,GAAxB,EAA6B;QAC5BW,CAAC,GAAGE,UAAU,CAACF,CAAD,CAAV,GAAgB,GAApB,CAD4B,CAE5B;;QACA,IAAIC,CAAC,KAAK,CAAV,EAAa,OAAOD,CAAP,CAHe,CAI5B;;QACA,IAAIlB,KAAK,KAAK,KAAd,EAAqB,OAAOkB,CAAC,GAAG,GAAX,CALO,CAM5B;;QACA,IAAIlB,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB,OAAOkB,CAAC,GAAG,GAAX,CAPM,CAQ5B;;QACA,IAAIlB,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoB,CAACmB,CAAzB,EAA4B,OAAOD,CAAC,GAAG,GAAX,CATA,CAU5B;;QACA,IAAIlB,KAAK,KAAK,KAAd,EAAqB,OAAOkB,CAAC,GAAG,GAAX,CAXO,CAY5B;;QACA,IAAIlB,KAAK,KAAK,KAAd,EAAqB,OAAOmB,CAAC,GAAG,CAAJ,GAAQD,CAAC,GAAG,GAAZ,GAAkBA,CAAC,GAAG,GAA7B,CAbO,CAc5B;;QACA,IAAIlB,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoB,CAACmB,CAAzB,EAA4B,OAAOD,CAAP,CAfA,CAgB5B;;QACA,IAAIlB,KAAK,KAAK,OAAd,EAAuB,OAAOkB,CAAC,GAAG,GAAX,CAjBK,CAkB5B;;QACA,IAAIlB,KAAK,KAAK,OAAd,EAAuB,OAAOmB,CAAC,GAAG,CAAJ,GAAQD,CAAC,GAAG,GAAZ,GAAkBA,CAAC,GAAG,GAA7B,CAnBK,CAoB5B;;QACA,OAAOA,CAAP;MACA,CAxBgC,CA0BjC;;;MACA,IAAIlB,KAAK,CAACmB,CAAD,CAAL,KAAa,GAAb,IAAqBA,CAAC,KAAK,CAAN,IAAWnB,KAAK,CAACA,KAAK,CAACO,MAAN,GAAe,CAAhB,CAAL,KAA4B,GAAhE,EAAsE;QACrE;QACA,IAAIlB,QAAQ,CAAC6B,CAAD,CAAR,KAAgBG,SAApB,EAA+B,OAAOhC,QAAQ,CAAC6B,CAAD,CAAf,CAFsC,CAGrE;;QACA,IAAIA,CAAC,CAACI,QAAF,CAAW,KAAX,CAAJ,EAAuB,OAAOF,UAAU,CAACF,CAAD,CAAjB,CAJ8C,CAKrE;;QACA,IAAIA,CAAC,CAACI,QAAF,CAAW,MAAX,CAAJ,EAAwB,OAAOF,UAAU,CAACF,CAAD,CAAV,GAAgB,GAAvB;QACxB,IAAIA,CAAC,CAACI,QAAF,CAAW,MAAX,CAAJ,EAAwB,OAAOF,UAAU,CAACF,CAAD,CAAV,GAAgB,GAAhB,GAAsB,GAA7B;QACxB,IAAIA,CAAC,CAACI,QAAF,CAAW,KAAX,CAAJ,EAAuB,OAAOF,UAAU,CAACF,CAAD,CAAV,GAAgB,GAAhB,GAAsBK,IAAI,CAACC,EAAlC;MACvB;;MACD,IAAIN,CAAC,KAAK,MAAV,EAAkB,OAAO,CAAP;MAClB,OAAOE,UAAU,CAACF,CAAD,CAAjB;IACA,CAvCO,CAAR;IAyCAnB,KAAK,GAAGD,KAAK,CAACS,MAAN,GAAeM,IAAf,GAAsBf,KAAK,CAAC2B,GAAN,EAAtB,GAAoC,CAA5C;EACA,CAnDI,CAqDL;EArDK,KAsDA,IAAI,mBAAmBC,IAAnB,CAAwB9B,IAAxB,CAAJ,EAAmC;IACvCE,KAAK,GAAGF,IAAI,CAAC+B,KAAL,CAAW,WAAX,EAAwBV,GAAxB,CAA4B,UAAUW,KAAV,EAAiB;MACpD,OAAOR,UAAU,CAACQ,KAAD,CAAjB;IACA,CAFO,CAAR;IAIA5B,KAAK,GAAGJ,IAAI,CAAC+B,KAAL,CAAW,WAAX,GAAyBE,IAAzB,CAA8B,EAA9B,GAAmC1B,WAAnC,MAAoD,KAA5D;EACA;;EAED,OAAO;IACNH,KADM;IAENC,MAAM,EAAEH,KAFF;IAGNC;EAHM,CAAP;AAKA"},"metadata":{},"sourceType":"module"}